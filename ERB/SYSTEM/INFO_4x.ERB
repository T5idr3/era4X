;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; @SHOW_INFO_ASSET()
;;;プレイヤー国家(1)管理下の船と人員を示す
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@SHOW_INFO_ASSET()
#DIM ID
#DIM SHIP_ID
#DIM SHIP_POS
#DIMS strInputResult

$INPUT_LOOP
	CALL SHOW_INFO_ASSET_SUB(1)
;画面表示
PRINTL 
PRINTL [9999] 戻る

INPUTS

strInputResult '= RESULTS
ISNUMERIC strInputResult
IF RESULT:0
	TOINT strInputResult

	IF	RESULT == 9999
		RETURN

	;SHIP詳細	SHIP_ID (0-9999?かな 9998かな？)
	ELSEIF  RESULT >=0 && RESULT < 9999
		SHIP_ID = RESULT
	;	SIF SHIP_COUNTRY:SHIP_ID == 国家ID_プレイヤー
	;	CALL SHOW_SHIP_INFO(SHIP_ID)
		CALL SHOW_SHIP_WINDOW_INFO(SHIP_ID)
		GOTO INPUT_LOOP
	
	;タスク変更　;;
	;; タスク変更　10000 +SHIP_ID
	;;これ毎回めんどいループすることになっちゃう
	ELSEIF RESULT >= 10000 && RESULT < 20000
		SHIP_ID = RESULT - 10000
		IF SHIP_COUNTRY:(SHIP_ID) == 国家ID_プレイヤー
			IF CHARACTER_POSITION:MASTER /10000 == SHIP_POSITION:SHIP_ID /10000   ;;あなたと選択船のセクターが同じならok
				CALL CHANGE_TASK(SHIP_ID)
			;;あなたが　星かPORTにいたらおＫ
			ELSE
				CALL GET_PORT_NAME(CHARACTER_POSITION:MASTER)
				IF RESULT:0 >= 1
					CALL CHANGE_TASK(SHIP_ID)
				ELSE
					PRINTFORM 　%CALLNAME:MASTER% が港にいない時は同宙域のみ有効です
					PRINTW
				ENDIF
			ENDIF
		GOTO INPUT_LOOP
		ENDIF
	;人員変更
	;; 艦長更新　20000 +SHIP_ID  // 乗組員変更　30000+SHIP_ID
	ELSEIF RESULT >= 20000 && RESULT < 30000
		SHIP_ID = RESULT - 20000
		SIF SHIP_COUNTRY:(SHIP_ID) == 国家ID_プレイヤー
			CALL CHANGE_BOARDER(SHIP_ID)
		GOTO INPUT_LOOP
	ELSEIF RESULT >=30000 && RESULT < 40000
		SHIP_ID = RESULT - 30000
		SIF SHIP_COUNTRY:(SHIP_ID) == 国家ID_プレイヤー
			CALL CHANGE_CREW(SHIP_ID)
		GOTO INPUT_LOOP
		
	;星系表示
	;; ( -10000 -SHIP_ID )
	ELSEIF RESULT <= -10000 && RESULT > -20000
		SHIP_ID = (-1)*( RESULT +10000 )
		SHIP_POS = SHIP_POSITION:SHIP_ID
		CALL DRAW_WINDOW( SHIP_POS / 10000 , SHIP_POS , SHIP_ID , 0 )
	
		WAITANYKEY
		GOTO INPUT_LOOP
	;メニューから抜ける
	ENDIF
ELSE

CALL CHAGE_SHIP_FILTERCAGTEGORY(strInputResult)
CALL CHAGE_SHIP_FILTERMISSION(strInputResult)
	GOTO INPUT_LOOP
ENDIF

RETURN


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; @SHOW_INFO_ASSET_SUB(ARG:0)
;;; @SHOW_INFO_ASSETから呼び出されるサブルーチン
;;;	ARG:0 の国家所有の船・人員を表示する
;;; プレイヤー国家　ARG:0 =1 の時のみ人員を表示する
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@SHOW_INFO_ASSET_SUB(ARG:0)
#DIM 人員, 100
#DIM 人員数
#DIM tmpLINE
#DIM SHIP_ID
#DIM 勢力
#DIM MAX_CREW
#DIMS MESSAGE
#DIM sLIST
#DIM sLIST_COUNTER

;;とりあえずプレイヤー勢力 ARG:0 = 1の前提
	勢力 = ARG:0

CALL PICKUP_FROM_SHIP_LIST(SHIP_LIST, -1, 勢力, -1)
sLIST_COUNTER = RESULT:0

;;;人員カウント
;;;無職を探すため
人員数 = 0
FOR LOCAL, 0, CHARANUM
	人員:人員数 = LOCAL
	人員数 ++
NEXT


;;船表示
	DRAWLINE
	PRINTFORML 　●%COUNTRY_NAME:勢力% 保有船舶   総数{sLIST_COUNTER ,3,RIGHT}隻
	PRINT 　
	CALL PRINTBUTTON_SHIP_FILTERCATEGORY( )
	PRINTL
	PRINT 　
	CALL PRINTBUTTON_SHIP_FILTERMISSION( )
	PRINTL
	DRAWLINE
	
	
	
FOR sLIST, 0, sLIST_COUNTER
SHIP_ID = SHIP_LIST:sLIST
;	;勢力保有でないものはスキップ
;	SIF SHIP_COUNTRY:SHIP_ID != 勢力
;		CONTINUE
	;撃破済み・消息不明などスキップ
;	SIF
;		CONTINUE

	GETBIT FILTER_SHIP_CATEGORY, (SHIP_CATEGORY:SHIP_ID)
	IF RESULT == 0
		SKIPDISP 1
	ELSE
		SKIPDISP 0
		GETBIT FILTER_SHIP_MISSION, (SHIP_MISSION:SHIP_ID)
		SIF RESULT ==0
			SKIPDISP 1
	ENDIF

	;「あなた」と同ポジションのものはライトアップ
	IF SHIP_POSITION:SHIP_ID == CHARACTER_POSITION:0
		SETCOLOR 0XAAFFAA
	ELSEIF SHIP_POSITION:SHIP_ID / 10000 == CHARACTER_POSITION:0 /10000
		SETCOLOR 0X99CCCC
	ENDIF
	PRINTFORM  [{SHIP_ID,4,RIGHT}]
	PRINT 　
	PRINTFORM %SHIP_NAME:SHIP_ID ,32,LEFT%

	;現在地表示。　クリックで存在宙域へ飛ぶ。　行方不明とかの対処してない
	CALL ID2POS(SHIP_POSITION:SHIP_ID)
;;;　00,00,00でおかしくなるから変更　( -10000 - SHIP_ID )
;	PRINTBUTTON @"#{RESULT:0,2,RIGHT} X:{RESULT:1,2,RIGHT} Y:{RESULT:2,2,RIGHT} ", ( - SHIP_POSITION:SHIP_ID)
	PRINTBUTTON @"#{RESULT:0,2,RIGHT} X:{RESULT:1,2,RIGHT} Y:{RESULT:2,2,RIGHT} ", ( -10000 - SHIP_ID)

	;タスクの表示　クリックで変更モードへ
	MESSAGE = 　　タスク：%CHECK_TASK(SHIP_ID)%
	PRINTBUTTON MESSAGE, (10000 + SHIP_ID)
	RESETCOLOR
	PRINTL

	SIF 勢力 != 国家ID_プレイヤー
		CONTINUE

;;艦の艦長・搭乗員を抽出する　
;;プレイヤー国家以外には存在しないはずなのでスキップ
	CALL CHECK_SHIPCLEW(SHIP_ID)
;;艦長1名	RESULT:0
	MESSAGE '= "　　　　艦長:"
		IF RESULT:0 == -1
			MESSAGE +="不在 　　　　　　　　 "
		ELSE
			MESSAGE = %MESSAGE%%CALLNAME:(RESULT:0),22,LEFT%
			人員:(RESULT:0) = -1
		ENDIF
	PRINTBUTTON @"%MESSAGE%", (20000+SHIP_ID)

;乗組員複数　RESULT:1以降 CHARA_NO。不在-1
	MESSAGE '= "CREW:",
		FOR LOCAL:1, 1, 50
			IF RESULT:(LOCAL:1) == -1
				SIF LOCAL:1 == 1
					MESSAGE += "－"
				BREAK
			ELSE
				人員:(RESULT:(LOCAL:1)) = -1
				IF LOCAL:1 < 8
					MESSAGE =%MESSAGE% %CALLNAME:(RESULT:(LOCAL:1))%
				ELSEIF LOCAL:1 == 8		;CREW多すぎるので以下省略
					MESSAGE =%MESSAGE% …
				ENDIF
			ENDIF
		NEXT
	PRINTBUTTON @"%MESSAGE%", (30000+SHIP_ID)
	PRINTL
NEXT
SKIPDISP 0

IF 勢力 == 国家ID_プレイヤー
;;未搭乗人員表示
	DRAWLINE
	PRINTL 　　未割当人員
	DRAWLINE
	tmpLINE = LINECOUNT
	
	FOR LOCAL, 0, 人員数
		IF 人員:LOCAL == -1 || CFLAG:(人員:LOCAL):所属 != 国家ID_プレイヤー
			CONTINUE
		ELSE
			SIF CHARACTER_POSITION:LOCAL == CHARACTER_POSITION:0
				SETCOLOR 0XAAFFAA	

			PRINTPLAINFORM  　[{LOCAL, 2, RIGHT}] %CALLNAME:LOCAL, 22, LEFT%
			IF LOCAL == MASTER
				PRINT 　　　　
			ELSEIF IS_FALL(LOCAL) != 0
				PRINT 調教済み
			ELSEIF CFLAG:LOCAL:1015 == 1
				PRINT 士官組　
			ELSE
				PRINT 搭乗不可
			ENDIF
			PRINT 　 
			CALL ID2POS(CHARACTER_POSITION:LOCAL)
			PRINTFORM #{RESULT:0,2,RIGHT} X:{RESULT:1,2,RIGHT} Y:{RESULT:2,2,RIGHT} 
			RESETCOLOR
			PRINTL
		ENDIF
	NEXT

	;;対象無し
	SIF tmpLINE == LINECOUNT 
		CLEARLINE 2
ENDIF

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;@CHECK_SHIPCLEW(ARG:0)
;;;　指定した船の艦長・搭乗員のキャラＮoを返す
;;; ARG:0 調べる船
;;;艦長　RESULT:0　= -1 不在
;;;搭乗員 RESULT:1以降連続　エンドは-1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CHECK_SHIPCLEW(ARG:0)
LOCAL:1 = 1
RESULT:0 = -1
RESULT:1 = -1
	FOR LOCAL, 0, CHARANUM
		IF BOARDING_SHIP_ID:LOCAL == ARG:0
			RESULT:0 = LOCAL
		ELSEIF RIDING_WITH:LOCAL == ARG:0
			RESULT:(LOCAL:1) = LOCAL
			LOCAL:1 ++
			RESULT:(LOCAL:1) = -1
		ENDIF
	NEXT
RETURN RESULT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;@CHECK_TASK(ARG:0)
;;;　指定した船のタスク状況を返す
;;; ARG:0 調べる船
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CHECK_TASK(ARG:0)
#FUNCTIONS
#DIM SHIP_ID
#DIMS MESSAGE1
#DIMS MESSAGE2

SHIP_ID = ARG:0
MESSAGE2 '= ""
SELECTCASE SHIP_MISSION:SHIP_ID
	CASE 待機
		MESSAGE1 '= "待機"

	CASE パトロール
		MESSAGE1 '= "パトロール"

	CASE 追従
		MESSAGE1 '= "追従"
		IF SHIP_FOLLOW:SHIP_ID <= -1
			MESSAGE2 '= "追従対象をロスト"
		ELSE
			MESSAGE2 = [{SHIP_FOLLOW:SHIP_ID,4,RIGHT}] %SHIP_NAME:(SHIP_FOLLOW:SHIP_ID)% に追従
		ENDIF
	CASE 移動
		MESSAGE1 '= "移動"
		MESSAGE2 = #{MOVING_POS:SHIP_ID / 10000,2 ,LEFT} へ向け航行中
	CASE 採掘
		MESSAGE1 '= "採掘"
		IF SHIP_POSITION:SHIP_ID == MOVING_POS:SHIP_ID
			MESSAGE2 = #{MOVING_POS:SHIP_ID / 10000} で作業中
		ELSE
			MESSAGE2 = #{MOVING_POS:SHIP_ID / 10000} へ向け航行中
		ENDIF

	CASE 交易
		MESSAGE1 '= "交易"
		IF SHIP_POSITION:SHIP_ID == FROM_POS:SHIP_ID
			MESSAGE2 = #{FROM_POS:SHIP_ID / 10000} で積込中　　積載量 {GET_CARGO_ITEM_NUM(SHIP_ID, TRADE_ITEM:0:SHIP_ID)+GET_CARGO_ITEM_NUM(SHIP_ID, TRADE_ITEM:1:SHIP_ID)}
		ELSEIF SHIP_POSITION:SHIP_ID == MOVING_POS:SHIP_ID
			MESSAGE2 = #{MOVING_POS:SHIP_ID / 10000} で売却中　　積載量 {GET_CARGO_ITEM_NUM(SHIP_ID, TRADE_ITEM:0:SHIP_ID)+GET_CARGO_ITEM_NUM(SHIP_ID, TRADE_ITEM:1:SHIP_ID)}
		ELSE
			MESSAGE2 = #{MOVING_POS:SHIP_ID / 10000} へ輸送中　　積載量 {GET_CARGO_ITEM_NUM(SHIP_ID, TRADE_ITEM:0:SHIP_ID)+GET_CARGO_ITEM_NUM(SHIP_ID, TRADE_ITEM:1:SHIP_ID)}
		ENDIF
	CASE 輸送
		MESSAGE1 '= "輸送"
		IF SHIP_POSITION:SHIP_ID == MOVING_POS:SHIP_ID
			MESSAGE2 = 目的地に到着 / 積載待機中
		ELSE
			MESSAGE2 = {MOVING_POS:SHIP_ID} へ移動中
		ENDIF
		
ENDSELECT
		MESSAGE1 = %MESSAGE1%  %MESSAGE2%
	
RETURNF MESSAGE1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;CHANGE_BOARDER
;; ARG:0で指定した艦の艦長を変更する
;;　SHIP.ERB　730行あたりからの丸写しである
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CHANGE_BOARDER(ARG:0)
#DIM SHIP_ID
SHIP_ID = ARG:0
$CHANGE_BOARDER
DRAWLINE
CALL SHOW_BOARDING_SLAVE_LIST
PRINTBUTTON "[9999] 戻る", 9999
INPUT
IF RESULT == 9999
	ELSEIF RESULT < 0 || RESULT >= CHARANUM
	GOTO CHANGE_BOARDER
ELSE
	SIF CFLAG:RESULT:捕虜先 == 国家ID_プレイヤー || CFLAG:RESULT:所属 != 国家ID_プレイヤー
		GOTO CHANGE_BOARDER
	LOCAL = RESULT
	FINDELEMENT BOARDING_SHIP_ID, SHIP_ID
	IF RESULT != -1
		BOARDING_SHIP_ID:RESULT = -1
		IF IN_PORT(RESULT) == 0
			CHARACTER_POSITION:RESULT = CHARACTER_POSITION:LOCAL
		ENDIF
	ENDIF
	BOARDING_SHIP_ID:LOCAL = SHIP_ID
	RIDING_WITH:LOCAL = -1
	CHARACTER_POSITION:LOCAL = SHIP_POSITION:SHIP_ID
ENDIF
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;CHANGE_CREW(ARG:0)
;; ARG:0で指定した艦の搭乗員CREWを変更する
;;　SHIP.ERB　にあるのでそっち使う
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;CHANGE_TASK(SELECTED_SHIP)
;; 引数１：艦ID で指定した艦のタスクを変更する
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CHANGE_TASK(SELECTED_SHIP = -1)
#DIM SELECTED_SHIP		;; タスクを切り替える船ID
#DIM SECTOR_ID		
#DIM POS_ID			;;マップ指示用座標
#DIM tmpLINE		;;画面成型用行数フラグ
#DIM X_POS
#DIM Y_POS

;選択船なし
SIF SELECTED_SHIP < 0
	RETURN

	tmpLINE = LINECOUNT
$INPUT_LOOP
DRAWLINE
PRINTL ◆割り振るタスクの選択
PRINTFORML   [0] 待機　　　 : 母港に待機させる
PRINTFORML   [1] パトロール : 待機している星の周辺をパトロールさせる。操船経験が入る
PRINTFORML   [2] 追従　　　 : 指定の味方艦を追従させ、船団を作る
PRINTFORML   [3] 移動　　　 : 指定の座標に移動させる
IF SHIP_CATEGORY:SELECTED_SHIP == 作業船
	PRINTFORML   [4] 採掘　　　 : ※作業船限定 指定座標で採掘させる。搬送用に輸送船を追従もしくは輸送させる必要がある
ELSE
	SETCOLOR 0X666666
	PRINTFORML   [-] 採掘　　　 : ※作業船限定 指定座標で採掘させる。搬送用に輸送船を追従もしくは輸送させる必要がある
	RESETCOLOR
ENDIF

IF SHIP_CATEGORY:SELECTED_SHIP == 輸送船
	PRINTFORML   [5] 交易　　　 : ※輸送船限定 指定のルールでアイテムの売買を行わせる
ELSE
	SETCOLOR 0X666666
	PRINTFORML   [-] 交易　　　 : ※輸送船限定 指定のルールでアイテムの売買を行わせる
	RESETCOLOR
ENDIF
IF SHIP_CATEGORY:SELECTED_SHIP == 輸送船
	PRINTFORML   [6] 輸送　　　 : ※輸送船限定 採掘地点もしくは惑星で積込し、指定場所に輸送する
ELSE
	SETCOLOR 0X666666
	PRINTFORML   [-] 輸送　　　 : ※輸送船限定 採掘地点もしくは惑星で積込し、指定場所に輸送する
	RESETCOLOR
ENDIF

PRINTL
PRINTFORML   　　[9] 変更しない

INPUT
;;待機
IF RESULT == 0
	SHIP_MISSION:SELECTED_SHIP = 待機

;;パトロール
;;宇宙港でも出せるようにしたが、7,7にない宇宙港だと機能しない。 @PATROL
ELSEIF RESULT == 1
	CALL GET_PORT_NAME(SHIP_POSITION:SELECTED_SHIP)
	IF RESULT:0 < 1
		PRINTW 宇宙港に泊まっていないため、パトロール任務を割り振れません
		CLEARLINE (LINECOUNT - tmpLINE)
		GOTO INPUT_LOOP
	ELSE
		SHIP_MISSION:SELECTED_SHIP = パトロール
		SHIP_PATROL:SELECTED_SHIP = SHIP_POSITION:SELECTED_SHIP
		PRINTFORMW %RESULTS:1%  %RESULTS:0% のパトロール任務を割り振りました
	ENDIF

;	FOR LOCAL:1, 0, 星系数
;		LOCAL:2 = -1
;		IF 星系座標ID:(LOCAL:1) == SHIP_POSITION:SELECTED_SHIP
;;			SHIP_PATROL:SELECTED_SHIP = 星系座標ID:(LOCAL:1)
;			LOCAL:2 = LOCAL:1
;			BREAK
;		ENDIF
;	NEXT
;	IF LOCAL:2 == -1
;		PRINTW 宇宙港に泊まっていないため、パトロール任務を割り振れません
;		CLEARLINE (LINECOUNT - tmpLINE)
;		GOTO INPUT_LOOP
;	ELSE
;		SHIP_MISSION:SELECTED_SHIP = パトロール
;		SHIP_PATROL:SELECTED_SHIP = 星系座標ID:(LOCAL:2)
;		PRINTFORMW %COUNTRY_NAME:(STAR_OWNER:(LOCAL:2))% 星＃{LOCAL:2}のパトロール任務を割り振りました
;	ENDIF

;;追従
ELSEIF RESULT == 2
	$INPUT_LOOP2
	PRINTL 追従させる船を選択してください
	FOR LOCAL, 0, MAX_SHIP
		SIF SHIP_COUNTRY:LOCAL != SHIP_COUNTRY:SELECTED_SHIP
			CONTINUE
		IF SHIP_MISSION:LOCAL == 追従
			SETCOLOR 0X666666
			IF SHIP_FOLLOW:LOCAL == SELECTED_SHIP
				PRINTPLAINFORM  [{LOCAL, 4, RIGHT}] %SHIP_NAME:LOCAL, 30, LEFT% 本艦に追従しています
				PRINTL 
			ELSE
				PRINTPLAINFORM  [{LOCAL, 4, RIGHT}] %SHIP_NAME:LOCAL, 30, LEFT% ほかの艦に追従しています
				PRINTL 				
			ENDIF
			RESETCOLOR
			CONTINUE
		ENDIF
		
		SIF LOCAL == SELECTED_SHIP	;自艦を除外
			CONTINUE
		CALL CHECK_SHIPCLEW(LOCAL)
		SIF RESULT:0 == -1		;艦長不在
			CONTINUE
		SELECTCASE SHIP_MISSION:LOCAL
			CASE 待機
				PRINTBUTTON @" [{LOCAL, 4, RIGHT}] %SHIP_NAME:LOCAL, 30, LEFT% 艦長: %CALLNAME:(RESULT:0), 20, LEFT% タスク: 待機", LOCAL
			CASE パトロール
				PRINTBUTTON @" [{LOCAL, 4, RIGHT}] %SHIP_NAME:LOCAL, 30, LEFT% 艦長: %CALLNAME:(RESULT:0), 20, LEFT% タスク: パトロール", LOCAL
		;	CASE 追従
		;		PRINTBUTTON @" [{ITER, 3, RIGHT}] %SHIP_NAME:ITER, 30, LEFT% 艦長: %RESULTS, 20, LEFT% タスク: 追従(%SHIP_NAME:(BOARDING_SHIP_ID:(ITER:1))%)", ITER
		;		PRINTBUTTON @" [{LOCAL, 4, RIGHT}] %SHIP_NAME:LOCAL, 30, LEFT% 艦長: %CALLNAME:RESULT:0, 20, LEFT% タスク: 追従(%SHIP_NAME:(BOARDING_SHIP_ID:(LOCAL))", LOCAL
			CASE 移動
				PRINTBUTTON @" [{LOCAL, 4, RIGHT}] %SHIP_NAME:LOCAL, 30, LEFT% 艦長: %CALLNAME:(RESULT:0), 20, LEFT% タスク: 移動", LOCAL
			CASE 採掘
				PRINTBUTTON @" [{LOCAL, 4, RIGHT}] %SHIP_NAME:LOCAL, 30, LEFT% 艦長: %CALLNAME:(RESULT:0), 20, LEFT% タスク: 採掘", LOCAL
			CASE 交易
				PRINTBUTTON @" [{LOCAL, 4, RIGHT}] %SHIP_NAME:LOCAL, 30, LEFT% 艦長: %CALLNAME:(RESULT:0), 20, LEFT% タスク: 交易", LOCAL
			CASE 輸送
				PRINTBUTTON @" [{LOCAL, 4, RIGHT}] %SHIP_NAME:LOCAL, 30, LEFT% 艦長: %CALLNAME:(RESULT:0), 20, LEFT% タスク: 輸送", LOCAL
		ENDSELECT
		PRINTL
	NEXT
		PRINTL
		PRINTBUTTON @" 　　[9999] やめる", 9999

	INPUT
	IF RESULT == 9999
		
	ELSEIF RESULT >= 0 && RESULT < MAX_SHIP && SHIP_COUNTRY:RESULT == SHIP_COUNTRY:SELECTED_SHIP && SHIP_MISSION:RESULT != 追従
		SHIP_MISSION:SELECTED_SHIP = 追従
		SHIP_FOLLOW:SELECTED_SHIP = RESULT
		PRINTFORMW [{RESULT, 4, RIGHT}] %SHIP_NAME:RESULT% に追従します
	ELSE
		GOTO INPUT_LOOP2
	ENDIF

;移動
ELSEIF RESULT == 3
;	POS_ID = SHIP_POSITION:SELECTED_SHIP
;	SECTOR_ID = POS_ID / 10000
	CALL SELECT_POINT_BY_MAP(SELECTED_SHIP)
;採掘
ELSEIF RESULT == 4
	POS_ID = SHIP_POSITION:SELECTED_SHIP
	SECTOR_ID = POS_ID / 10000

	$MINING_LOOP
	CLEARLINE LINECOUNT
	DRAWLINE
	PRINTL 採掘させる宙域座標を選択
	CALL DRAW_WINDOW( SECTOR_ID , POS_ID , SELECTED_SHIP, 0)
	
	LOCAL = 0
	IF POS_ID >= 0	;有効な座標になるようフィルタ済み
		CALL ID2POS( POS_ID )
		SECTOR_ID = RESULT:0
		X_POS = RESULT:1
		Y_POS = RESULT:2
		
		IF CLEARMAP:SECTOR_ID:X_POS:Y_POS == 0
			PRINTL 　　　　未探索の宙域
		ELSEIF MAP:SECTOR_ID:X_POS:Y_POS != 資源
			PRINTL 　　　　この宙域には資源がありません！
		ELSE
			PRINTFORML 　　　　#{SECTOR_ID,2,RIGHT} X:{X_POS,2,RIGHT} Y:{Y_POS,2,RIGHT} で採掘を行い　現在地と往復します
			LOCAL = 1	;採掘可能な場所の判定
		ENDIF
	ELSE	;有効な座標がない
			PRINTL 　　　　採掘する宙域を選択
	ENDIF
	PRINTL
	PRINTL
	PRINT 　　　　　　　　　
	IF LOCAL == 1
		PRINTBUTTON "[ タスク決定 ]", -1
	ELSE
		SETCOLOR 0x666666
		PRINT [ タスク決定 ]
		RESETCOLOR
	ENDIF
	PRINTBUTTON " 　　　　[ キャンセル ]", -10
	PRINTL
	DRAWLINE
	
	INPUT
		;決定
	IF RESULT == -1 && LOCAL == 1
		CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
		FROM_POS:SELECTED_SHIP = SHIP_POSITION:SELECTED_SHIP
		MOVING_POS:SELECTED_SHIP = RESULT
		SHIP_MISSION:SELECTED_SHIP = 採掘
		RETURN
	ELSEIF RESULT == -10	;;上位メニューへ戻る
		GOTO INPUT_LOOP
	ELSEIF  RESULT % 10000 == 9999 	;下4ケタ9999なら表示セクターの切り替え
		SECTOR_ID = RESULT /10000
		POS_ID = -2
		GOTO MINING_LOOP
	ELSEIF RESULT >= 0
		CALL ID2POS(RESULT)
		SECTOR_ID = RESULT:0
		X_POS = RESULT:1
		Y_POS = RESULT:2

			;有効なポイント指定 POS_IDに格納してマップ描画更新
		IF ( X_POS >= 0 && X_POS < MAP_WIDTH ) && ( Y_POS >= 0 && Y_POS < MAP_HEIGHT )
			POS_ID = SECTOR_ID * 10000 + 100 * X_POS + Y_POS
			GOTO MINING_LOOP
			;無効
		ELSE	;有効でないポイント指定は　POS_ID無効化して返す　(-1だと情報窓がプレイヤーを追尾）
			POS_ID = -2
			GOTO INPUT_LOOP
		ENDIF
	ELSE	;そのほか
		GOTO INPUT_LOOP
	ENDIF

;交易
ELSEIF RESULT == 5
	CALL SET_TRADE_RULE(SELECTED_SHIP)

;輸送
ELSEIF RESULT == 6
	CALL SET_TRANSPORT_RULE(SELECTED_SHIP)
	
ELSEIF RESULT == 9

ELSE
	CLEARLINE (LINECOUNT - tmpLINE)
	GOTO INPUT_LOOP
	
ENDIF

