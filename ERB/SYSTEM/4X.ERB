;=============================================================================
; 搭乗可能な奴隷の一覧表示 LIST_MODE 0 = 艦長変更 1 = 搭乗員変更
;=============================================================================
@SHOW_BOARDING_SLAVE_LIST(SHIP_ID, LIST_MODE)
#DIM SHIP_ID
#DIM LIST_MODE
#DIM ITER
#DIM FIRST_LINE
#DIM SHIP_STATUS, SHIP_STATUS_LENGTH
#DIM CURRENT_PAGE
#DIM MAX_PAGE
#DIM CONST MAX_SHOW_LIST = 25
#DIM PAGE_START
#DIM PAGE_END
#DIM COUNTER
#DIM CREW_COUNTER
#DIM MAX_CREW
#DIM SELECT_FLAG, MAX_CHARA_NUM
#DIM CREW_SWITCH		;;{選択中のみ表示]フラグ 0 off 1 on
#DIM CREW_PAGE		;;[選択中のみ表示]時のページ
#DIM MAX_CREW_PAGE	;;[選択中のみ表示]時の最大ページ数

VARSET SELECT_FLAG, 0
CREW_SWITCH = 0

;一覧表示のページ数の計算
MAX_PAGE = 0
FOR ITER, 0, CHARANUM
	SIF !CFLAG:(ITER):捕虜先 && CFLAG:ITER:所属 == 国家ID_プレイヤー
		MAX_PAGE ++
NEXT
;最大ページ数
MAX_PAGE = (MAX_PAGE - 1) / MAX_SHOW_LIST + 1
;現在のページ
CURRENT_PAGE = 1
FIRST_LINE = LINECOUNT

IF LIST_MODE == 1
	SHIP_STATUS:SHIP_CREW = 0
	;艦の最大搭乗員数を取得
	TRYCALLFORM GET_SHIP_STATUS_{SHIP_MODEL:SHIP_ID}(SHIP_STATUS)
	MAX_CREW = SHIP_STATUS:SHIP_CREW
	FOR ITER, 0, SHIP_STATUS:SHIP_OPTION_SLOT
		SIF SHIP_EQUIP:オプション:ITER:SHIP_ID == 1
		MAX_CREW += 1
	NEXT
	;最大搭乗員数が0の場合戻る
	IF MAX_CREW == 0
		PRINTFORMW この艦には搭乗員を乗せられません
		RETURN
	ENDIF
	;現在の搭乗員数を取得し選択中フラグを与える
	CREW_COUNTER = 0
	FOR ITER, 0, CHARANUM
		IF RIDING_WITH:ITER == SHIP_ID
			CREW_COUNTER ++
			SELECT_FLAG:ITER ++
		ENDIF
	NEXT
ENDIF

$SHOW_LOOP
;[選択中のみ表示]時の最大ページ数
SIF LIST_MODE == 1
MAX_CREW_PAGE = (CREW_COUNTER - 1) / MAX_SHOW_LIST + 1
;描画メンバー数のカウント用
COUNTER = 0
;1ページに表示する最大メンバー数
IF LIST_MODE == 1 && CREW_SWITCH
	PAGE_START = (CREW_PAGE - 1) * MAX_SHOW_LIST
	PAGE_END = CREW_PAGE * MAX_SHOW_LIST
ELSE
	PAGE_START = (CURRENT_PAGE - 1) * MAX_SHOW_LIST
	PAGE_END = CURRENT_PAGE * MAX_SHOW_LIST
ENDIF

;描画処理
PRINTL
PRINTBUTTON "[能力一覧表示]", 9000
PRINTL
DRAWLINE
IF LIST_MODE == 0
	PRINTFORM %TOSTR_SPACE(5)%
	PRINTFORM %SHIP_NAME:SHIP_ID, 20, RIGHT%の艦長を選択
	PRINTL
ELSEIF LIST_MODE == 1
	PRINTFORM %TOSTR_SPACE(5)%
	PRINTFORM %SHIP_NAME:SHIP_ID, 20, RIGHT%の搭乗員を選択 ({CREW_COUNTER, 2}/{MAX_CREW, 2})
	PRINTFORM %TOSTR_SPACE(5)%
	SIF CREW_SWITCH
		SETCOLOR カラー_選択中
	PRINTBUTTON "[選択中のみ表示]" ,2000
	RESETCOLOR
	PRINTFORM %TOSTR_SPACE(5)%
	PRINTBUTTON "[全員外す]" ,3000
	PRINTL
ENDIF
DRAWLINE
PRINTFORM %TOSTR_SPACE(23)%   兵|  操|  知|  政|  超|  歌|  料
PRINTL
FOR ITER, 0, CHARANUM
	SIF CFLAG:ITER:捕虜先 == 国家ID_プレイヤー || CFLAG:ITER:所属 != 国家ID_プレイヤー
		CONTINUE
	;現在のページに表示されるメンバー
	IF COUNTER >= PAGE_START && COUNTER < PAGE_END
		SIF SELECT_FLAG:ITER
			SETCOLOR カラー_選択中
		IF LIST_MODE == 1 && CREW_SWITCH
			IF SELECT_FLAG:ITER
				CALL PRINT_BOARDING_SLAVE(ITER)
				PRINTL
			ENDIF
		ELSE
			CALL PRINT_BOARDING_SLAVE(ITER)
			PRINTL
		ENDIF
	ENDIF
	;全ページのメンバー数カウント
	IF LIST_MODE == 1 && CREW_SWITCH
		SIF SELECT_FLAG:ITER
		COUNTER ++
	ELSE
		COUNTER ++
	ENDIF
NEXT

;空の行を入れて高さを一定に保つ
COUNTER = COUNTER % MAX_SHOW_LIST
IF LIST_MODE == 1 && CREW_SWITCH && (COUNTER != 0 || CREW_COUNTER == 0)
	IF CREW_PAGE == MAX_CREW_PAGE
		FOR ITER, COUNTER, MAX_SHOW_LIST
			PRINTL
		NEXT
	ENDIF
ELSEIF CURRENT_PAGE == MAX_PAGE && COUNTER != 0
	FOR ITER, COUNTER, MAX_SHOW_LIST
		PRINTL
	NEXT
ENDIF
DRAWLINE
;ページ切り替えのボタン配置
IF MAX_PAGE >= 2 && (LIST_MODE== 0|| !CREW_SWITCH)
	IF CURRENT_PAGE > 1
		PRINT [1001] 前のページ            
	ELSE
		PRINT                             
	ENDIF
	LOCALS:0 = page{CURRENT_PAGE}/{MAX_PAGE}
	PRINTPLAINFORM %LOCALS:0, 28, LEFT%
	IF CURRENT_PAGE < MAX_PAGE
		PRINT [1002] 後のページ
	ENDIF
	PRINTL 
	DRAWLINE
;[選択中のみ表示]の場合は別のボタンを配置
ELSEIF LIST_MODE == 1 && CREW_SWITCH
	IF MAX_CREW_PAGE >=2
		IF CREW_PAGE > 1
			PRINT [1003] 前のページ            
		ELSE
			PRINT                             
		ENDIF
		LOCALS:0 = page{CREW_PAGE}/{MAX_CREW_PAGE}
		PRINTPLAINFORM %LOCALS:0, 28, LEFT%
		IF CREW_PAGE < MAX_CREW_PAGE
		PRINT [1004] 後のページ
		ENDIF
		PRINTL 
		DRAWLINE
	;通常時ページボタンがあり[選択中のみ表示]時ない場合 高さを揃える
	ELSEIF MAX_CREW_PAGE <2 && MAX_PAGE >= 2
		PRINTL
		DRAWLINE
	ENDIF
ENDIF

IF LIST_MODE == 1
	PRINTL [1000] 決定
ENDIF
PRINTL [9999] キャンセル

INPUT
IF RESULT < 0
	GOTO SHOW_LOOP
ELSEIF RESULT == 9999
	RETURN
;ページ数の増減
ELSEIF RESULT == 1001 && CURRENT_PAGE > 1
	SIF CREW_SWITCH
		GOTO SHOW_LOOP
	CURRENT_PAGE --
	CLEARLINE LINECOUNT - FIRST_LINE
	GOTO SHOW_LOOP
ELSEIF RESULT == 1002 && CURRENT_PAGE < MAX_PAGE
	SIF CREW_SWITCH
		GOTO SHOW_LOOP
	CURRENT_PAGE ++
	CLEARLINE LINECOUNT - FIRST_LINE
	GOTO SHOW_LOOP
;能力一覧表示
ELSEIF RESULT == 9000
	CALL CREATE_SELECTOR_SORT_LIST
	CALL SHOP_LIFE_CHARA_TABLE
	PRINTL
	GOTO SHOW_LOOP

;艦長変更時
ELSEIF LIST_MODE== 0
	IF RESULT >= CHARANUM
		GOTO SHOW_LOOP
	ELSEIF CFLAG:RESULT:捕虜先 == 国家ID_プレイヤー || CFLAG:RESULT:所属 != 国家ID_プレイヤー
		GOTO SHOW_LOOP
	ELSE
		;艦長変更処理
		LOCAL = RESULT
		FINDELEMENT BOARDING_SHIP_ID, SHIP_ID
		IF RESULT != -1
			BOARDING_SHIP_ID:RESULT = -1
			CALL CHANGE_DEBOARD_SLAVE_POS(RESULT)
		ENDIF
		BOARDING_SHIP_ID:LOCAL = SHIP_ID
		RIDING_WITH:LOCAL = -1
		CHARACTER_POSITION:LOCAL = SHIP_POSITION:SHIP_ID
		RETURN
	ENDIF

;クルー変更時
ELSEIF LIST_MODE == 1
	SELECTCASE RESULT
	 	CASE 1000	;;決定(乗せ替え処理)
	 		;一度全員降ろす
			FOR ITER, 0, CHARANUM
				IF RIDING_WITH:ITER == SHIP_ID
					CALL CHANGE_DEBOARD_SLAVE_POS(ITER)
					RIDING_WITH:ITER = -1
				ENDIF
			NEXT
			;選択フラグのあるキャラのみ乗せる
			FOR ITER, 0, CHARANUM
				IF SELECT_FLAG:ITER
					BOARDING_SHIP_ID:ITER = -1
					RIDING_WITH:ITER = SHIP_ID
					CHARACTER_POSITION:ITER = SHIP_POSITION:SHIP_ID
				ENDIF
			NEXT
			RETURN

		CASE 1003	;;前のページ([選択中のみ表示]時)
			IF CREW_PAGE > 1 && CREW_SWITCH
				CREW_PAGE --
				CLEARLINE LINECOUNT - FIRST_LINE
			ENDIF
			GOTO SHOW_LOOP

		CASE 1004	;;次のページ([選択中のみ表示]時)
			IF CREW_PAGE < MAX_CREW_PAGE && CREW_SWITCH
				CREW_PAGE ++
				CLEARLINE LINECOUNT - FIRST_LINE
			ENDIF
			GOTO SHOW_LOOP

		CASE 2000	;;[選択中のみ表示]切替
			CREW_SWITCH = !CREW_SWITCH
			;必ず1ページに戻す
			CREW_PAGE = 1
			CLEARLINE LINECOUNT - FIRST_LINE
			GOTO SHOW_LOOP

		CASE 3000	;;全員外す
			VARSET SELECT_FLAG, 0
			CREW_COUNTER = 0
			CLEARLINE LINECOUNT - FIRST_LINE
			GOTO SHOW_LOOP
		
		;以下メンバーIDが押された場合
		CASEELSE
			IF RESULT >= CHARANUM
				GOTO SHOW_LOOP
			ELSEIF CFLAG:RESULT:捕虜先 == 国家ID_プレイヤー || CFLAG:RESULT:所属 != 国家ID_プレイヤー
				GOTO SHOW_LOOP
			;選択中フラグの増減
			ELSEIF SELECT_FLAG:RESULT
				SELECT_FLAG:RESULT --
				CREW_COUNTER --
				CLEARLINE LINECOUNT - FIRST_LINE
				GOTO SHOW_LOOP
			ELSEIF CREW_COUNTER >= MAX_CREW
				PRINTFORMW これ以上追加できません({CREW_COUNTER}/{MAX_CREW})
				CLEARLINE LINECOUNT - FIRST_LINE
				GOTO SHOW_LOOP
			ELSE
				SELECT_FLAG:RESULT ++
				CREW_COUNTER ++
				CLEARLINE LINECOUNT - FIRST_LINE
				GOTO SHOW_LOOP
			ENDIF
	ENDSELECT
ENDIF

GOTO SHOW_LOOP

;旧表示をコメントアウト
;@SHOW_BOARDING_SLAVE_LIST
;#DIM ITER
;FOR ITER, 0, CHARANUM
;	SIF CFLAG:ITER:捕虜先 == 国家ID_プレイヤー || CFLAG:ITER:所属 != 国家ID_プレイヤー
;		CONTINUE
;	IF BOARDING_SHIP_ID:ITER != -1
;		PRINTBUTTON @"[{ITER, 2, RIGHT}] %CALLNAME:ITER, 30, LEFT% %SHIP_NAME:(BOARDING_SHIP_ID:ITER)%の艦長", ITER
;	ELSEIF RIDING_WITH:ITER != -1
;		PRINTBUTTON @"[{ITER, 2, RIGHT}] %CALLNAME:ITER, 30, LEFT% %SHIP_NAME:(RIDING_WITH:ITER)%搭乗中", ITER
;	ELSE
;		PRINTBUTTON @"[{ITER, 2, RIGHT}] %CALLNAME:ITER, 30, LEFT%", ITER
;	ENDIF
;PRINTL
;NEXT


;=============================================================================
; 搭乗可能な奴隷の描画処理
;=============================================================================
@PRINT_BOARDING_SLAVE(CHARA_ID)
#DIM CHARA_ID
#DIMS MESSAGE

MESSAGE = フリー
IF BOARDING_SHIP_ID:CHARA_ID != -1
			MESSAGE = %SHIP_NAME:(BOARDING_SHIP_ID:CHARA_ID)%の艦長
ELSEIF RIDING_WITH:CHARA_ID != -1
			MESSAGE = %SHIP_NAME:(RIDING_WITH:CHARA_ID)%に搭乗中
ENDIF

PRINTFORM [{CHARA_ID, 3, RIGHT}] %CALLNAME:CHARA_ID, 14, LEFT%
;状態の表示
IF CFLAG:CHARA_ID:行動不能状態 == 行動不能_子供
	SETCOLOR カラー_緑
	PRINT 幼  
ELSEIF CFLAG:CHARA_ID:行動不能状態 == 行動不能_臨月
	SETCOLOR カラー_ピンク
	PRINT 臨  
ELSEIF TALENT:CHARA_ID:妊娠
	SETCOLOR カラー_妊娠
	PRINT 妊  
ELSEIF CFLAG:CHARA_ID:行動不能状態 == 行動不能_育児
	SETCOLOR カラー_黄緑
	PRINT 育  
ELSE
	PRINT     
ENDIF
;能力値の表示
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(CHARA_ID):白兵)
PRINTFORM {ABL:(CHARA_ID):白兵, 3}|
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(CHARA_ID):操艦)
PRINTFORM {ABL:(CHARA_ID):操艦, 3}|
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(CHARA_ID):知略)
PRINTFORM {ABL:(CHARA_ID):知略, 3}|
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(CHARA_ID):政治)
PRINTFORM {ABL:(CHARA_ID):政治, 3}|
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(CHARA_ID):超能力)
PRINTFORM {ABL:(CHARA_ID):超能力, 3}|
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(CHARA_ID):歌唱)
PRINTFORM {ABL:(CHARA_ID):歌唱, 3}|
CALL PRINT_ALPHABET_RANK(ランク_ＳＬＧ, ABL:(CHARA_ID):料理)
PRINTFORM {ABL:(CHARA_ID):料理, 3}
PRINTFORM %TOSTR_SPACE(5)%%MESSAGE, 25, LEFT%
RESETCOLOR

RETURN


;=============================================================================
;搭乗中のキャラを下す場合のポジション変更
;=============================================================================
@CHANGE_DEBOARD_SLAVE_POS(CHARA_ID)
#DIM CHARA_ID
#DIM COUNTRY_ID

;港にいない場合変更
IF IN_PORT(CHARA_ID) == 0
	;プレイヤーの星を見つけ存在するならその場所へ移動
	FINDELEMENT STAR_OWNER, 国家ID_プレイヤー
	IF RESULT != -1
		CHARACTER_POSITION:CHARA_ID = STAR_POSITION_ID:RESULT
		RETURN
	ENDIF

	;プレイヤーの宇宙港を見つけ存在するならその場所へ移動
	FINDELEMENT PORT_OWNER, 国家ID_プレイヤー
	IF RESULT != -1
		CHARACTER_POSITION:CHARA_ID = PORT_POSITION_ID:RESULT
		RETURN
	ENDIF

	;国家ID順に星を調べ評価がマイナスでないならその場所へ移動
	FOR COUNTRY_ID, 2, MAX_COUNTRY
		FINDELEMENT STAR_OWNER, COUNTRY_ID
			IF RESULT != -1
				IF REL_LIKE_COUNTRY:COUNTRY_ID:国家ID_プレイヤー >= 0
					CHARACTER_POSITION:CHARA_ID = STAR_POSITION_ID:RESULT
					RETURN
				ENDIF
			ENDIF
	NEXT
ENDIF

RETURN


@MOORING(CHARA_ID = 0)
#FUNCTION
#DIM CHARA_ID
#DIM ID

FOR ID, 0, MAX_STAR
	SIF STAR_POSITION_ID:ID == CHARACTER_POSITION:CHARA_ID
		RETURNF 1
NEXT

FOR ID, 0, MAX_PORT
	SIF PORT_POSITION_ID:ID == CHARACTER_POSITION:CHARA_ID
		RETURNF 1
NEXT

RETURNF 0

;座標からどの星にいるかを返却する
@GET_STAR_ID_FROM_POS(POS)
#DIM POS

FINDELEMENT STAR_POSITION_ID, POS
RETURN RESULT

;座標からどの星にいるかを返却する
@GET_PORT_ID_FROM_POS(POS)
#DIM POS

FINDELEMENT PORT_POSITION_ID, POS
RETURN RESULT

;各種タスクから解放する
@RELEASE_FROM_TASK(ID)
#DIM ID
#DIM 塔乗艦ID

塔乗艦ID = BOARDING_SHIP_ID:ID
IF 塔乗艦ID != -1
	BOARDING_SHIP_ID:ID = -1
	SHIP_MISSION:塔乗艦ID = 0
	SHIP_FOLLOW:塔乗艦ID = -1
	SHIP_PATROL:塔乗艦ID = -1
ENDIF
塔乗艦ID = RIDING_WITH:ID
SIF 塔乗艦ID != -1
	RIDING_WITH:ID = -1
FINDELEMENT R_SUPERVISER_IS, ID
SIF RESULT != -1
	R_SUPERVISER_IS:RESULT = 0
FINDELEMENT SHOP_IN_CHARGE, ID
SIF RESULT != -1
	SHOP_IN_CHARGE:RESULT = -1


; 乗船以外のジョブから解任
@DISMISSAL_JOB(ID)
#DIM ID
FINDELEMENT R_SUPERVISER_IS, ID
IF RESULT != -1
	R_SUPERVISER_IS:RESULT = 0
	R_SUPERVISER_COST:RESULT = 0
ENDIF
SIF R_MILITARY_ADVISER == ID
	R_MILITARY_ADVISER = -1

@TO_FREE(ID)
#DIM ID
CALL RELEASE_FROM_TASK(ID)
CALL DISMISSAL_JOB(ID)
