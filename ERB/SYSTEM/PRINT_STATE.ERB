@ARRANGE_CHARANAME
;名前の表示の後の文字を揃えるための空白調整、Str.csvにて処理している
C = NO:COUNT + 200
PRINTS STR:C

@SHOW_RACE
;能力を見る選択のとき、各キャラの横で種族が表示される
R = NO:RESULT
LOCALS = %GET_RACE(R)%


PRINT 種族：

IF LOCALS == ""
	PRINTS "不明（エラー）"
ELSEIF LOCALS != ""
	PRINTFORMS LOCALS

;昔の処理。ここまで来るとおかしいと思う
ELSE 
	IF R == 0
		PRINTS "あなた（エラー）"
	ELSE
		PRINTS "不明（エラー）"
	ENDIF
ENDIF

PRINTL 

;変数初期化
R = 0
LOCALS = ""

@GET_RACE(ARG:0)
#FUNCTIONS
RETURNF "人類"




@SHOW_INFO_PALAM
REPEAT 15

;パラメータを表示する順番を並べ替える

IF COUNT == 0
;快Ｃ
	A = 0
ELSEIF COUNT == 1
;快Ｖ
	A = 1
ELSEIF COUNT == 2
;快Ａ
	A = 2
ELSEIF COUNT == 3
;快Ｂ
	A = 3
ELSEIF COUNT == 4
;潤滑
	A = 4
ELSEIF COUNT == 5
;恭順
	A = 5
ELSEIF COUNT == 6
;欲情
	A = 6
ELSEIF COUNT == 7
;屈服
	A = 7
ELSEIF COUNT == 8
;習得
	A = 8
ELSEIF COUNT == 9
;恥情
	A = 9
ELSEIF COUNT == 10
;苦痛
	A = 10
ELSEIF COUNT == 11
;恐怖
	A = 11
ELSEIF COUNT == 12
;反感
	A = 12
ELSEIF COUNT == 13
;不快
	A = 13
ELSEIF COUNT == 14
;抑鬱
	A = 14
ENDIF


;現在のパラメータレベルをBに代入
IF PALAM:A < PALAMLV:1
	B = 0
ELSEIF PALAM:A < PALAMLV:2
	B = 1
ELSEIF PALAM:A < PALAMLV:3
	B = 2
ELSEIF PALAM:A < PALAMLV:4
	B = 3
ELSEIF PALAM:A < PALAMLV:5
	B = 4
ELSEIF PALAM:A < PALAMLV:6
	B = 5
ELSEIF PALAM:A < PALAMLV:7
	B = 6
ELSEIF PALAM:A < PALAMLV:8
	B = 7
ELSEIF PALAM:A < PALAMLV:9
	B = 8
ELSE
	B = 9
ENDIF

;パラメータの名前・パラメータレベル・ゲージを表示
PRINTFORM 　%PALAMNAME:A%Lv{B}[

;パラメータレベルが9以上なら余計な処理は飛ばす
IF B >= 9
	PRINT ********
	GOTO SHOW_INFO_PALAM_END
ENDIF

;パラメータレベルごとの閾値の8分の1を1メモリとする
;C = PALAM:A/(PALAMLV:(B+1)/8)
E = B+1
C = PALAM:A/(PALAMLV:E/8)

;↓のコメントアウトした部分を戻すと、パラメータ表示のゲージが
;↓パラメータの総量を基準にしたものから、
;↓現在のレベル→次のレベルに必要な量を基準としたものになります。
;↓例えば、パラメータが5000（レベル３）のときはこんな感じに。
;↓　従来 [****>>>>] Now:5000 / Next:10000 （総量として必要な10000が基準）
;↓　これ [**>>>>>>] Now:2000 / Next: 7000 （LV3→LV4に必要な7000が基準）

;C = (PALAM:A-PALAMLV:B)/((PALAMLV:E-PALAMLV:B)/8)

D = 8-C

;パラメータレベルに応じて溜まっている部分に記号を表示
$SHOW_INFO_PALAM_C
SIF C == 0
	GOTO SHOW_INFO_PALAM_D
SIF B >= 0
	PRINT *
C -= 1
GOTO SHOW_INFO_PALAM_C

;溜まっていない部分に1Lv下の記号を表示
$SHOW_INFO_PALAM_D
SIF D == 0
	GOTO SHOW_INFO_PALAM_END
SIF B >= 0
	PRINT .
D -= 1
GOTO SHOW_INFO_PALAM_D

$SHOW_INFO_PALAM_END
PRINT ]

;これだけ特殊
IF A == 3 && PALAM:A >= 20000
	PRINT 摩擦 0
	GOTO SHOW_INFO_PALAM_NUM_END
ENDIF

;↓↓↓↓kMGT表示↓↓↓↓
A = PALAM:A
B = 0
;6桁までノーマル
IF A > 999999
	;kキロ(1000)
	A /= 1000
	B += 1
	IF A > 99999
		;Mメガ(百万)
		A /= 1000
		B += 1
		;2^31 ≒ 21億 = 2100M = 2.1G
		;eramakerの32ビット整数ならメガまでで十分
		IF A > 99999
			;Gギガ(十億)
			A /= 1000
			B += 1
			IF A > 99999
				;Tテラ(兆)
				A /= 1000
				B += 1
				IF A > 99999
					;Pペタ(千兆)
					A /= 1000
					B += 1
					;2^63 ≒ 920京 = 9200P = 9.2E
					;Emueraの64ビット整数でもペタまでで十分
				ENDIF
			ENDIF
		ENDIF
	ENDIF
ENDIF

;数値の桁数に応じて間隔を調整
SIF A < 10
	PRINT  
SIF A < 100
	PRINT  
SIF A < 1000
	PRINT  
SIF A < 10000
	PRINT  
;接尾語が入るなら1つ減らす
SIF A < 100000 && B == 0
	PRINT  

PRINTFORM {A}
IF B == 1
	PRINT k
ELSEIF B == 2
	PRINT M
ELSEIF B == 3
	PRINT G
ELSEIF B == 4
	PRINT T
ELSEIF B == 5
	PRINT P
ENDIF
;↑↑↑↑kMGT表示↑↑↑↑

;↓↓↓↓通常表示↓↓↓↓
;
;	;数値の桁数に応じて間隔を調整
;	SIF PALAM:A < 10
;		PRINT  
;	SIF PALAM:A < 100
;		PRINT  
;	SIF PALAM:A < 1000
;		PRINT  
;	SIF PALAM:A < 10000
;		PRINT  
;	SIF PALAM:A < 100000
;		PRINT  
;	;数値を表示・999999を超えたら999999
;	IF PALAM:A > 999999
;		PRINT 999999
;	ELSE
;		PRINTFORM {PALAM:A}
;	ENDIF
;
;↑↑↑↑通常表示↑↑↑↑

$SHOW_INFO_PALAM_NUM_END

;3回ごとに改行
SIF COUNT%3 == 2
	PRINTL 

REND

;=============================================================================
@SHOW_INFO_ABL(ID)
#DIM ID
#DIM ITER
#DIM CONST ABL_LENGTH = 22

FOR ITER, 0, ABL_LENGTH
	PRINTFORM %ABLNAME:ITER, 13, LEFT%
	PRINT :
	PRINTFORM {ABL:ID:ITER, 7, RIGHT} 
	SIF ITER % 5 == 4
		PRINTL
NEXT

PRINTL

;=============================================================================
;PRINT_TALENT （素質）との入れ替え
@SHOW_INFO_TALENT(ID)
#DIM ITER
#DIM ID
FOR ITER, 0, 200
	SIF TALENT:ID:ITER != 0
		PRINTFORM [%TALENTNAME:ITER%] 
NEXT
PRINTL 

;=============================================================================
;PRINT_MARK （刻印）との入れ替え
@SHOW_INFO_MARK(ID)
#DIM ITER
#DIM ID
FOR ITER, 0, 4
	PRINTFORM %MARKNAME:ITER%:LV{MARK:ID:ITER} 
	BAR MARK:ID:ITER, 3, 3
	PRINT 　
NEXT
PRINTL 

;=============================================================================
@SHOW_INFO_EXP(ID)
#DIM ID
#DIM ITER
#DIM CONST EXP_ID = 0, 1, 2, 3, 4, 5, 10, 11, 20, 21, 22, 23, 30, 31, 32, 40, 41, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 70

FOR ITER, 0, 30
	PRINTFORM %EXPNAME:(EXP_ID:ITER), 13, LEFT%
	PRINT :
	PRINTFORM {EXP:ID:(EXP_ID:ITER), 7, RIGHT} 
	SIF ITER % 5 == 4
		PRINTL
NEXT

PRINTL 
;=============================================================================
;SHOW_JUEL の珠表示部分を独立した関数に
@SHOW_INFO_JUEL
U = 0
X = 0
REPEAT 12
	;表示順
	; 0,快Ｃ　 1,快Ｖ　 2,快Ａ　 3,快Ｂ
	; 5,恭順　 6,欲情　 7,屈服　 8,習得
	; 9,恥情　10,苦痛　11,恐怖 100,否定
	IF COUNT == 0
		X = 0
	ELSEIF COUNT == 1
		X = 1
	ELSEIF COUNT == 2
		X = 2
	ELSEIF COUNT == 3
		X = 3
		
	ELSEIF COUNT == 4
		X = 5
	ELSEIF COUNT == 5
		X = 6
	ELSEIF COUNT == 6
		X = 7
	ELSEIF COUNT == 7
		X = 8
		
	ELSEIF COUNT == 8
		X = 9
	ELSEIF COUNT == 9
		X = 10
	ELSEIF COUNT == 10
		X = 11
	ELSEIF COUNT == 11
		X = 100
		
	ENDIF
	
	PRINTFORM 　%PALAMNAME:X%の珠:
	
	;表示位置そろえる
	IF JUEL:T:X < 10
		PRINT      
	ELSEIF JUEL:T:X < 100
		PRINT     
	ELSEIF JUEL:T:X < 1000
		PRINT    
	ELSEIF JUEL:T:X < 10000
		PRINT   
	ELSEIF JUEL:T:X < 100000
		PRINT  
	ENDIF
	PRINTV JUEL:T:X
	
	;改行or表示位置あけ
	U += 1
	IF U%4 == 0
		PRINTL 
	ELSE
		PRINT  
	ENDIF
REND

;最後のループで改行してなかったら、ここで改行しておく
SIF U%4 != 0
	PRINTL 

@SHOW_INFO_CLOTHES(ID)
#DIM ID
T:10 = TARGET
TARGET = T
REPEAT 7
	B = 46-COUNT
	SIF COUNT == 0 && CFLAG:ID:B
		PRINT 全身上着　:
	SIF COUNT == 1 && CFLAG:ID:B
		PRINT 上半身上着:
	SIF COUNT == 2 && CFLAG:ID:B
		PRINT 下半身上着:
	SIF COUNT == 3 && CFLAG:ID:B
		PRINT 上半身下着:
	SIF COUNT == 4 && CFLAG:ID:B
		PRINT 下半身下着:
	SIF COUNT == 5 && CFLAG:ID:B
		PRINT 足元　　　:
	SIF COUNT == 6 && CFLAG:ID:B
		PRINT その他　　:
	A = 6-COUNT
	CALL CLOTHES_NAME
	SIF CFLAG:B
		PRINTL 
REND
T = TARGET
TARGET = T:10



;=============================================================================
; 搭乗可能な奴隷の一覧表示
;=============================================================================
@SHOW_BOARDING_SLAVE_LIST
#DIM ITER
FOR ITER, 0, CHARANUM
	SIF STRLENS(NAME:ITER) == 0
		CONTINUE
	IF BOARDING_SHIP_ID:ITER == -1
		PRINTBUTTON @"[{ITER, 2, RIGHT}] %CALLNAME:ITER, 30, LEFT% 操船:LV{ABL:ITER:操船}", ITER
	ELSEIF RIDING_WITH:ITER != -1
		PRINTBUTTON @"[{ITER, 2, RIGHT}] %CALLNAME:ITER, 30, LEFT% 操船:LV{ABL:ITER:操船} %SHIP_NAME:(RIDING_WITH:ITER)%搭乗中", ITER
	ELSE
		PRINTBUTTON @"[{ITER, 2, RIGHT}] %CALLNAME:ITER, 30, LEFT% 操船:LV{ABL:ITER:操船} %SHIP_NAME:(BOARDING_SHIP_ID:ITER)%の艦長", ITER
	ENDIF
PRINTL
NEXT

;=============================================================================
; 調教可能な奴隷の一覧表示
;=============================================================================
@SELECT_TRAINABLE_SALVE
#DIM ID

$INPUT_LOOP

PRINTL ◆調教対象選択
PRINTL ★現在調教中
FOR ID, 1, CHARANUM
	SIF CHARACTER_POSITION:0 != CHARACTER_POSITION:ID
		CONTINUE
	PRINTBUTTON @"[{ID, 2, RIGHT}] %GET_TARGET_MARK(ID)% %CALLNAME:ID, 20, LEFT% 体力: {BASE:ID:0, 4, RIGHT}/{MAXBASE:ID:0, 4, RIGHT} 気力: {BASE:ID:1, 4, RIGHT}/{MAXBASE:ID:1, 4, RIGHT}", ID
	PRINTL
NEXT

PRINTBUTTON "[999] 戻る", 999
INPUT
IF RESULT == 999
	RETURN
ELSEIF RESULT > 0 && RESULT < CHARANUM && CHARACTER_POSITION:0 == CHARACTER_POSITION:RESULT
	TARGET = RESULT
ELSE
	GOTO INPUT_LOOP
ENDIF

@GET_TARGET_MARK(ID)
#FUNCTIONS
#DIM ID

SIF ID == -1
	RETURNF "　"
SIF TARGET == ID
	RETURNF "★"
RETURNF "　"

; 調教可能な奴隷の人数返却
@GET_TRAINABLE_COUNT
#FUNCTION
#DIM ID
#DIM COUNTER

COUNTER = 0
FOR ID, 1, CHARANUM
	SIF CHARACTER_POSITION:0 == CHARACTER_POSITION:ID
		COUNTER ++
NEXT

RETURNF COUNTER