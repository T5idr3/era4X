;-------------------------------------------------
; MAP初期化
;-------------------------------------------------
@INIT_MAP
#DIM ITER
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS

X_POS = MAP_WIDTH / 2
Y_POS = MAP_HEIGHT / 2

VARSET MAP, 1
ITER = 0
PRINTL 星系製作中……
WHILE ITER < 星系数
	FOR SECTOR_ID, 0, MAX_SECTOR
		; もっとスマートな計算方法はないものか...
		IF ITER < 星系数 && RAND(星系数 - ITER) == 0 && MAP:SECTOR_ID:X_POS:Y_POS != 星
			MAP:SECTOR_ID:X_POS:Y_POS = 星
			CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
			星系座標ID:ITER = RESULT
			ITER ++
		ENDIF
	NEXT
WEND
PRINTL 完了!

; ワープゲート設置
FOR Y_POS, 0, MAX_SECTOR_Y
	FOR X_POS, 0, MAX_SECTOR_X
		SECTOR_ID = (Y_POS * MAX_SECTOR_Y + X_POS)
		SIF Y_POS != 0
			MAP:SECTOR_ID:(MAP_WIDTH / 2):0 = ワープゲート
		SIF Y_POS != (MAP_HEIGHT - 1)
			MAP:SECTOR_ID:(MAP_WIDTH / 2):(MAP_HEIGHT - 1) = ワープゲート
		SIF X_POS != 0
			MAP:SECTOR_ID:0:(MAP_HEIGHT / 2) = ワープゲート
		SIF X_POS != (MAP_WIDTH - 1)
			MAP:SECTOR_ID:(MAP_WIDTH - 1):(MAP_HEIGHT / 2) = ワープゲート
	NEXT
NEXT

;-------------------------------------------------
; MAP描画
;-------------------------------------------------
@DRAW_MAP(SECTOR_ID)
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
#DIM ITER
#DIM PORT_COUNT
#DIM POSID

FINDELEMENT PORT_OWNER, 0
PORT_COUNT = RESULT

DRAWLINE
PRINTFORML セクター＃{SECTOR_ID}
DRAWLINE
FOR Y_POS, 0, MAP_HEIGHT
	FOR X_POS, 0, MAP_WIDTH
		CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
		POSID = RESULT
		IF CLEARMAP:SECTOR_ID:X_POS:Y_POS == 0
			CALL ID2TILE(0)
		ELSE
			SIF MAP:SECTOR_ID:X_POS:Y_POS == 0
				CALL UPDATE_MAP
			; 星以外では船を表示する
			IF MAP:SECTOR_ID:X_POS:Y_POS != 星 && MAP:SECTOR_ID:X_POS:Y_POS != 宇宙港
				CALL GET_SHIP_TILE(POSID)
				IF RESULT > 0
					CALL ID2TILE(RESULT)
				ELSE
					CALL ID2TILE(MAP:SECTOR_ID:X_POS:Y_POS)
				ENDIF
			ELSE
				IF MAP:SECTOR_ID:X_POS:Y_POS == 宇宙港
					FOR ITER, 0, PORT_COUNT
						SIF PORT_OWNER:ITER != PLAYER_COUNTRY
							CONTINUE
						SIF PORT_POSITION_ID:ITER != POSID
							CONTINUE
						SETCOLOR 0X00FF00
					NEXT
				ENDIF

				CALL ID2TILE(MAP:SECTOR_ID:X_POS:Y_POS)
			ENDIF
		ENDIF
		SIF POSID == CHARACTER_POSITION
			SETCOLOR 0xAAFFAA
		PRINTBUTTON @"%RESULTS:0%", SECTOR_ID * 10000 + X_POS * 100 + Y_POS
		RESETCOLOR
	NEXT
	IF Y_POS < 10
		PRINTFORM %"", 10, LEFT%
		FOR X_POS, 0, MAX_SECTOR_X
			SIF X_POS + Y_POS * 10 == CHARACTER_POSITION / 10000
				SETCOLOR 0XAAFFAA
			IF X_POS + Y_POS * 10 == SECTOR_ID
				PRINT ■
			ELSE
				PRINTBUTTON "□", (Y_POS * 10 + X_POS + 1000) * -1
			ENDIF
			RESETCOLOR
		NEXT
	ENDIF
	IF Y_POS == 10
		PRINTFORM %"", 10, LEFT%
		PRINT セクターマップ
	ELSEIF Y_POS == 11
		PRINTFORM %"", 10, LEFT%
		PRINT クリックで表示セクター切り替え
	ENDIF
	PRINTL
NEXT
DRAWLINE


;-------------------------------------------------
; 探索済みマップの結果返却
;-------------------------------------------------
@GET_MAP(POSID)
#FUNCTION
#DIM POSID
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS

SECTOR_ID = POSID / 10000
X_POS = (POSID % 10000) / 100
Y_POS = (POSID % 10000) % 100

IF CLEARMAP:SECTOR_ID:X_POS:Y_POS == 0
	RETURNF 0
ELSE
	RETURNF MAP:SECTOR_ID:X_POS:Y_POS == 0 ? 1 # MAP:SECTOR_ID:X_POS:Y_POS
ENDIF
;-------------------------------------------------
; MAPのタイル返却
;-------------------------------------------------
@ID2TILE(TILE_ID)
#DIM TILE_ID
SELECTCASE TILE_ID
	CASE 無
		RESULTS:0 = ■
	CASE 明瞭
		RESULTS:0 = □
	CASE 星
		RESULTS:0 = 星
	CASE 宇宙港
		RESULTS:0 = 港
	CASE ANOMALY
		RESULTS:0 = ！
	CASE 資源
		RESULTS:0 = ＃
	CASE ワープゲート
		RESULTS:0 = ◎
	CASE 中立軍
		RESULTS:0 = ▲
	CASE 自軍
		SETCOLOR 0X00FF00
		RESULTS:0 = ▲
	CASE 敵軍
		SETCOLOR 0XFF0000
		RESULTS:0 = ▲
ENDSELECT
RETURN

;-------------------------------------------------
; IDから座標を返却 
;-------------------------------------------------
@ID2POS(ID)
#DIM ID
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS

SECTOR_ID = ID / 10000
X_POS = (ID % 10000) / 100
Y_POS = (ID % 10000) % 100
RESULT:0 = SECTOR_ID
RESULT:1 = X_POS
RESULT:2 = Y_POS
RETURN RESULT

;-------------------------------------------------
; 座標からIDを取得
;-------------------------------------------------
@POS2ID(SECTOR_ID, X_POS, Y_POS)
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
RETURN Y_POS + X_POS * 100 + SECTOR_ID * 10000

;-------------------------------------------------
; ワープゲート通過
;-------------------------------------------------
@PATH_WARP_GATE
#DIM SHIP_ID
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS

FOR SHIP_ID, 0, MAX_SHIP
	SIF SHIP_COUNTRY:SHIP_ID == 0
		CONTINUE
	CALL ID2POS(SHIP_POSITION:SHIP_ID)
	SECTOR_ID = RESULT:0
	X_POS = RESULT:1
	Y_POS = RESULT:2
	SIF MAP:SECTOR_ID:X_POS:Y_POS != ワープゲート
		CONTINUE
	IF X_POS == 0 && Y_POS == MAP_HEIGHT / 2
		SECTOR_ID -= 1
		X_POS = MAP_WIDTH - 2
	ELSEIF X_POS == MAP_WIDTH - 1 && Y_POS == MAP_HEIGHT / 2
		SECTOR_ID += 1
		X_POS = 1
	ELSEIF X_POS == MAP_WIDTH / 2 && Y_POS == 0
		SECTOR_ID -= 10
		Y_POS = MAP_HEIGHT - 2
	ELSEIF X_POS == MAP_WIDTH / 2 && Y_POS == MAP_HEIGHT - 1
		SECTOR_ID += 10
		Y_POS = 1
	ENDIF
	CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
	SHIP_POSITION:SHIP_ID = RESULT
	SIF SHIP_COUNTRY == PLAYER_COUNTRY
		CALL CLEAR_MAP(RESULT, SHIP_EQUIP:センサー:0:SHIP_ID)
NEXT