;----------------------------
; 艦艇の一覧を返却する
;----------------------------
@GET_SHIP_LIST_FROM_POS(ID)
#DIM COUNTER
#DIM ITER
#DIM ID
COUNTER = 0
VARSET SHIP_LIST, 0
FOR ITER, 0, MAX_SHIP
	IF SHIP_POSITION:ITER == ID && SHIP_COUNTRY:ITER > 0
		SHIP_LIST:COUNTER = ITER
		COUNTER ++
	ENDIF
NEXT
SHIP_LIST_LENGTH = COUNTER


;----------------------------
; マップに表示する艦船タイルを返す
;----------------------------
@GET_SHIP_TILE(X, Y)
#DIM TILE_TYPE
#DIM LIKE
TILE_TYPE = 0
FOR LOCAL, 0, MAX_SHIP
	CALL POS2ID(X, Y)
	IF SHIP_POSITION:LOCAL == RESULT
		LIKE = REL_LIKE:(SHIP_COUNTRY:LOCAL):PLAYER_COUNTRY
		IF SHIP_COUNTRY:LOCAL == PLAYER_COUNTRY
			RETURN 自軍
		ELSEIF LIKE <= -1000
			TILE_TYPE = 敵軍
		ELSEIF SHIP_COUNTRY:LOCAL > 0
			TILE_TYPE = 中立軍
		ENDIF
	ENDIF
NEXT
RETURN TILE_TYPE


;----------------------------
; 艦種の呼称を返却する
;----------------------------
@GET_TYPE_NAME(TYPE)
#FUNCTIONS
#DIM TYPE
#DIMS LOCAL_SHIP_NAME
SELECTCASE TYPE
	CASE 偵察艇
		LOCAL_SHIP_NAME = 偵察艇
	CASE フリゲート
		LOCAL_SHIP_NAME = フリゲート
	CASE コルベット
		LOCAL_SHIP_NAME = コルベット
	CASE 駆逐艦
		LOCAL_SHIP_NAME = 駆逐艦
	CASE 巡洋艦
		LOCAL_SHIP_NAME = 巡洋艦
	CASE 戦艦
		LOCAL_SHIP_NAME = 戦艦
	CASE 空母
		LOCAL_SHIP_NAME = 空母
	CASE 輸送船
		LOCAL_SHIP_NAME = 輸送船
	CASE 作業船
		LOCAL_SHIP_NAME = 作業船
ENDSELECT
RETURNF LOCAL_SHIP_NAME

;----------------------------
; 船の追加
;----------------------------
@INIT_SHIP(ARG:0, ARG:1, ARG:2, ARGS:0)
#DIM SHIP_ID
SHIP_ID = GET_FREE_SHIP_ID()

SHIP_COUNTRY:SHIP_ID = ARG:0
SHIP_POSITION:SHIP_ID = ARG:1
SHIP_TYPE:SHIP_ID = ARG:2
SHIP_NAME:SHIP_ID = %ARGS:0%
SHIP_FOLLOW = -1

RETURN SHIP_ID

;----------------------------
; 空いている艦船IDを返却する
;----------------------------
@GET_FREE_SHIP_ID
#FUNCTION
FOR LOCAL, 0, MAX_SHIP
	SIF SHIP_COUNTRY:LOCAL == 0
		RETURNF LOCAL
NEXT

;----------------------------
; 艦船情報表示
;----------------------------
@SHOW_SHIP_INFO(SHIP_ID)
#DIM SHIP_ID
#DIM EQUIP_ID
$INPUT_LOOP

PRINTFORML 名前:     %SHIP_NAME:SHIP_ID%
PRINTFORML 艦種:     %GET_TYPE_NAME(SHIP_TYPE:SHIP_ID)%
FOR LOCAL, 0, EQUIP_TYPE_LENGTH
	EQUIP_ID = SHIP_EQUIP:LOCAL:SHIP_ID
	CALL GET_EQUIP(LOCAL, EQUIP_ID)
	SELECTCASE LOCAL
		CASE 主砲
			PRINTFORM 主砲:       
			PRINTBUTTON @"[%EQUIP_NAME%]", SHIP_ID * 100 + 主砲
		CASE 副砲
			PRINTFORM 副砲:       
			PRINTBUTTON @"[%EQUIP_NAME%]", SHIP_ID * 100 + 副砲
		CASE シールド
			PRINTFORM シールド:   
			PRINTBUTTON @"[%EQUIP_NAME%]", SHIP_ID * 100 + シールド
		CASE 装甲
			PRINTFORM 装甲        
			PRINTBUTTON @"[%EQUIP_NAME%]", SHIP_ID * 100 + 装甲
		CASE エンジン
			PRINTFORM エンジン:   
			PRINTBUTTON @"[%EQUIP_NAME%]", SHIP_ID * 100 + エンジン
		CASE AI
			PRINTFORM 制御AI:     
			PRINTBUTTON @"[%EQUIP_NAME%]", SHIP_ID * 100 + AI
		CASE センサー
			PRINTFORM センサー:   
			PRINTBUTTON @"[%EQUIP_NAME%]", SHIP_ID * 100 + センサー
		CASE オプション
			PRINTFORM オプション: 
			PRINTBUTTON @"[%EQUIP_NAME%]", SHIP_ID * 100 + オプション
	ENDSELECT
	PRINTL 
NEXT
CALL GET_SHIP_HP(SHIP_ID)
PRINTFORML 耐久     {RESULT}/{RESULT + (SHIP_DAMAGE:SHIP_ID)}
CALL GET_SHIP_SIELD(SHIP_ID)
PRINTFORML シールド {RESULT}/{SIELD}
PRINTBUTTON "[完了]", 100
PRINTL 
INPUT
DRAWLINE
SELECTCASE RESULT
	CASE SHIP_ID * 100 + 主砲
		CALL GET_MAIN_WEAPON_DESCRIPTION(SHIP_EQUIP:主砲:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + 副砲
		CALL GET_SUB_WEAPON_DESCRIPTION(SHIP_EQUIP:副砲:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + シールド
		CALL GET_SIELD_DESCRIPTION(SHIP_EQUIP:シールド:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + 装甲
		CALL GET_ARMOR_DESCRIPTION(SHIP_EQUIP:装甲:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + エンジン
		CALL GET_ENGIN_DESCRIPTION(SHIP_EQUIP:エンジン:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + AI
		CALL GET_COMPUTER_DESCRIPTION(SHIP_EQUIP:AI:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + センサー
		CALL GET_SENSOR_DESCRIPTION(SHIP_EQUIP:センサー:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + オプション
		CALL GET_OPTION_DESCRIPTION(SHIP_EQUIP:オプション:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE 100
		RETURN
	CASEELSE
		GOTO INPUT_LOOP
ENDSELECT

;----------------------------
; 装備取得
;----------------------------
@GET_EQUIP(EQUIPMENT_TYPE, EQUIP_ID)
#DIM EQUIPMENT_TYPE
#DIM EQUIP_ID

CALL INIT_EQUIP_BUFF()
SELECTCASE EQUIPMENT_TYPE
	CASE 主砲
		CALL GET_MAIN_WEAPON(EQUIP_ID)
	CASE 副砲
		CALL GET_SUB_WEAPON	(EQUIP_ID)
	CASE シールド
		CALL GET_SIELD(EQUIP_ID)
	CASE 装甲
		CALL GET_ARMOR(EQUIP_ID)
	CASE エンジン
		CALL GET_ENGIN(EQUIP_ID)
	CASE AI
		CALL GET_COMPUTER(EQUIP_ID)
	CASE センサー
		CALL GET_SENSOR(EQUIP_ID)
	CASE オプション
		CALL GET_OPTION(EQUIP_ID)
ENDSELECT

;----------------------------
; 装備情報初期化
;----------------------------
@INIT_EQUIP_BUFF()

DAMAGE = 0
FIRE_RATE = 0
HIT_RATE = 0
FIRE_RANGE = 0
SIZE = 0
SIELD = 0
SIELD_RECOVER = 0
ARMOR = 0
SPEED = 0
AVOID = 0
ANTI_AIR = 0
AIR_SHIP_HP = 0
AIR_SHIP_POWER = 0
EQUIP_LIMIT = -1

;----------------------------
; 艦船プリセット
;----------------------------
@INIT_PRESET_SHIP(ARG:0, ARG:1, ARG:2, ARGS:0, ARG:3)
#DIM SHIP_ID
CALL INIT_SHIP(ARG:0, ARG:1, ARG:2, ARGS:0)
SHIP_ID = RESULT

SELECTCASE ARG:3
	CASE 偵察艇
		SHIP_EQUIP:シールド:SHIP_ID = 1
		SHIP_EQUIP:装甲:SHIP_ID = 1
		SHIP_EQUIP:エンジン:SHIP_ID = 1
		SHIP_EQUIP:AI:SHIP_ID = 1
		SHIP_EQUIP:センサー:SHIP_ID = 1
	CASE フリゲート
		SHIP_EQUIP:主砲:SHIP_ID = 1
		SHIP_EQUIP:副砲:SHIP_ID = 1
		SHIP_EQUIP:シールド:SHIP_ID = 1
		SHIP_EQUIP:装甲:SHIP_ID = 1
		SHIP_EQUIP:エンジン:SHIP_ID = 1
		SHIP_EQUIP:AI:SHIP_ID = 1
		SHIP_EQUIP:センサー:SHIP_ID = 1
	CASE コルベット
		SHIP_EQUIP:主砲:SHIP_ID = 2
		SHIP_EQUIP:副砲:SHIP_ID = 1
		SHIP_EQUIP:シールド:SHIP_ID = 1
		SHIP_EQUIP:装甲:SHIP_ID = 1
		SHIP_EQUIP:エンジン:SHIP_ID = 1
		SHIP_EQUIP:AI:SHIP_ID = 1
		SHIP_EQUIP:センサー:SHIP_ID = 1
	CASE 駆逐艦
		SHIP_EQUIP:主砲:SHIP_ID = 2
		SHIP_EQUIP:副砲:SHIP_ID = 1
		SHIP_EQUIP:シールド:SHIP_ID = 2
		SHIP_EQUIP:装甲:SHIP_ID = 2
		SHIP_EQUIP:エンジン:SHIP_ID = 2
		SHIP_EQUIP:AI:SHIP_ID = 1
		SHIP_EQUIP:センサー:SHIP_ID = 1
	CASE 巡洋艦
		SHIP_EQUIP:主砲:SHIP_ID = 2
		SHIP_EQUIP:副砲:SHIP_ID = 1
		SHIP_EQUIP:シールド:SHIP_ID = 2
		SHIP_EQUIP:装甲:SHIP_ID = 2
		SHIP_EQUIP:エンジン:SHIP_ID = 2
		SHIP_EQUIP:AI:SHIP_ID = 1
		SHIP_EQUIP:センサー:SHIP_ID = 1
	CASE 戦艦
		SHIP_EQUIP:主砲:SHIP_ID = 3
		SHIP_EQUIP:副砲:SHIP_ID = 4
		SHIP_EQUIP:シールド:SHIP_ID = 2
		SHIP_EQUIP:装甲:SHIP_ID = 2
		SHIP_EQUIP:エンジン:SHIP_ID = 2
		SHIP_EQUIP:AI:SHIP_ID = 1
		SHIP_EQUIP:センサー:SHIP_ID = 1
	CASE 空母
		SHIP_EQUIP:主砲:SHIP_ID = 101
		SHIP_EQUIP:副砲:SHIP_ID = 4
		SHIP_EQUIP:シールド:SHIP_ID = 2
		SHIP_EQUIP:装甲:SHIP_ID = 2
		SHIP_EQUIP:エンジン:SHIP_ID = 2
		SHIP_EQUIP:AI:SHIP_ID = 1
		SHIP_EQUIP:センサー:SHIP_ID = 1
	CASE 輸送船
		SHIP_EQUIP:エンジン:SHIP_ID = 1
	CASE 作業船
		SHIP_EQUIP:エンジン:SHIP_ID = 1
ENDSELECT

RETURN SHIP_ID

;----------------------------
; 艦のHP返却
;----------------------------
@GET_SHIP_HP(SHIP_ID)
#DIM SHIP_ID
CALL GET_SHIP_TOTAL_HP(SHIP_ID)
RETURN LIMIT(RESULT - SHIP_DAMAGE:SHIP_ID, 0, RESULT)

;----------------------------
; 艦の最大HP
;----------------------------
@GET_SHIP_TOTAL_HP(SHIP_ID)
#DIM SHIP_ID
#DIM SHIP_TOTAL_HP
CALL GET_ARMOR(SHIP_EQUIP:装甲:SHIP_ID)
RETURN SHIP_HP:(SHIP_TYPE:SHIP_ID) + ARMOR

;----------------------------
; 艦のシールド値返却
;----------------------------
@GET_SHIP_SIELD(SHIP_ID)
#DIM SHIP_ID
CALL GET_SIELD(SHIP_EQUIP:シールド:SHIP_ID)
RETURN LIMIT(SIELD - SIELD_DAMAGE:SHIP_ID, 0, SIELD)

;----------------------------
; 艦のシールド値自動回復
;----------------------------
@AUTO_RECOVER_SIELD(SHIP_ID)
#DIM SHIP_ID
CALL GET_SIELD(SHIP_EQUIP:シールド:SHIP_ID)
SIELD_DAMAGE:SHIP_ID = LIMIT(SIELD_DAMAGE:SHIP_ID - SIELD_RECOVER, 0, SIELD)

;----------------------------
; 艦の主砲レンジ取得
;----------------------------
@GET_MAIN_WEAPON_RANGE(SHIP_ID)
#DIM SHIP_ID
CALL GET_MAIN_WEAPON(SHIP_EQUIP:主砲:SHIP_ID)
RETURN FIRE_RANGE

;----------------------------
; 艦の回避率返却
;----------------------------
@GET_AVOID(SHIP_ID)
#DIM SHIP_ID
#DIM AVOID_POWER
#DIM IS_AVOID
AVOID_POWER = 0
AVOID_POWER = SHIP_AVOID:(SHIP_TYPE:SHIP_ID)
CALL GET_ENGIN(SHIP_EQUIP:エンジン:SHIP_ID)
AVOID_POWER += AVOID

RETURN AVOID_POWER

;----------------------------
; 破壊された船を除去する
;----------------------------
@CHANGE_SHIP_NAME(SHIP_ID)
#DIM SHIP_ID
$INPUT_LOOP
PRINTL 新しい艦船の名前を入力してください
INPUTS
STRLENFORM INPUTS
IF RESULT > 0
	$INPUT_LOOP2
	PRINTFORML %RESULTS% でいいですか？
	PRINTBUTTON "[0] はい", 0
	PRINT  
	PRINTBUTTON "[1] いいえ", 1
	PRINTL 
	INPUT
	IF RESULT == 0
		SHIP_NAME:SHIP_ID = %RESULTS%
		RETURN
	ELSEIF RESULT == 1
		GOTO INPUT_LOOP
	ELSE
		GOTO INPUT_LOOP2
	ENDIF
ELSE
	GOTO INPUT_LOOP
ENDIF


;----------------------------
; 破壊された船を除去する
;----------------------------
@RETIRE_BROKEN_SHIP
#DIM ITER

FOR ITER, 0, MAX_SHIP
	SIF SHIP_COUNTRY:ITER == 0
		CONTINUE
	CALL GET_SHIP_HP(ITER)
	SIF RESULT > 0
		CONTINUE
	SHIP_COUNTRY:ITER = 0
	SHIP_POSITION:ITER = 0
	SHIP_FOLLOW:ITER = -1
	SHIP_TYPE:ITER = 0
	SHIP_NAME:ITER = 
	SIELD_DAMAGE:ITER = 0
	SHIP_DAMAGE:ITER = 0
	SHIP_MISSION:ITER = 0
	DISTANCE:ITER = 0
	ATTACK_TARGET = 0
	SHIP_ACTION = 0
	BROKEN_BY = 0
	FOR LOCAL, 0, EQUIP_TYPE_LENGTH
		SHIP_EQUIP:LOCAL:ITER = 0
	NEXT
NEXT

;----------------------------
; 艦船の耐久が減っているか判定
; 戻り値 INT 0減っていない 1減っている
;----------------------------
@IS_NEED_REPAIR(SHIP_ID)
#FUNCTION
#DIM SHIP_ID
#DIM CONST MAX_REPAIR_TURN = 200
#DIM CONST REPAIR_PER_COST = 10

; 損傷してない場合は弾く
SIF SHIP_DAMAGE:SHIP_ID == 0 && SIELD_DAMAGE:SHIP_ID == 0
	RETURNF 0
RETURNF 1

;----------------------------
; 艦船の耐久回復
; 戻り値 INT 払ったコスト
;----------------------------
@REPAIR(SHIP_ID)
#FUNCTION
#DIM SHIP_ID
#DIM COST
#DIM CONST MAX_REPAIR_TURN = 200
#DIM CONST REPAIR_PER_COST = 10

COST = 0

; 損傷してない場合は弾く
SIF SHIP_DAMAGE:SHIP_ID == 0 && SIELD_DAMAGE:SHIP_ID == 0
    RETURNF COST

IF SHIP_DAMAGE:SHIP_ID > 0 && SHIP_DAMAGE:SHIP_ID < MAX_REPAIR_TURN
    COST += SHIP_DAMAGE:SHIP_ID * 10
ELSE
    COST += MAX_REPAIR_TURN * 10
ENDIF

IF SIELD_DAMAGE:SHIP_ID > 0 && SIELD_DAMAGE:SHIP_ID < MAX_REPAIR_TURN
    COST += SIELD_DAMAGE:SHIP_ID * 10
ELSE
    COST += MAX_REPAIR_TURN * 100
ENDIF

RETURNF COST

;----------------------------
; 船のタスク割り当て
;----------------------------
@SETUP_TASK_LIST
#DIM ITER, 3
#DIM SELECTED
#DIM X_POS
#DIM Y_POS
$INPUT_LOOP
PRINTL ◆タスクの割り当て
FOR ITER, 0, MAX_SHIP
	SIF SHIP_COUNTRY:ITER != PLAYER_COUNTRY
		CONTINUE
	RESULTS = なし
	FOR ITER:1, 0, CHARANUM
		IF BOARDING_SHIP_ID:(ITER:1) == ITER
			RESULTS = %CALLNAME:(ITER:1)%
			BREAK
		ENDIF
	NEXT
	SELECTCASE SHIP_MISSION:ITER
		CASE 待機
			PRINTBUTTON @"[{ITER, 3, RIGHT}] %SHIP_NAME:ITER, 30, LEFT%艦長: %RESULTS, 20, LEFT% タスク： 待機", ITER    
		CASE パトロール
			PRINTBUTTON @"[{ITER, 3, RIGHT}] %SHIP_NAME:ITER, 30, LEFT%艦長: %RESULTS, 20, LEFT% タスク： パトロール", ITER    
		CASE 追従
			PRINTBUTTON @"[{ITER, 3, RIGHT}] %SHIP_NAME:ITER, 30, LEFT%艦長: %RESULTS, 20, LEFT% タスク： 追従(%SHIP_NAME:(SHIP_FOLLOW:ITER)%)", ITER    
		CASE 移動
			PRINTBUTTON @"[{ITER, 3, RIGHT}] %SHIP_NAME:ITER, 30, LEFT%艦長: %RESULTS, 20, LEFT% タスク： 移動", ITER    
	ENDSELECT
	PRINTL
NEXT

PRINTBUTTON "[戻る]", 9999
INPUT
IF RESULT >= 0 && RESULT < MAX_SHIP && SHIP_COUNTRY:RESULT == PLAYER_COUNTRY
	SELECTED = RESULT
ELSEIF RESULT == 9999
	RETURN
ELSE
	GOTO INPUT_LOOP
ENDIF

$INPUT_LOOP2
PRINTL ◆艦長の管理
PRINTBUTTON "[0] 変更", 0
PRINTL
PRINTL
PRINTL ◆割り振るタスクの選択
PRINTBUTTON "[1] 待機", 1
PRINTL   : 母港に待機させる
PRINTBUTTON "[2] パトロール", 2
PRINTL : 待機している星の周辺をパトロールさせる。操船経験が入る。
PRINTBUTTON "[3] 追従", 3
PRINTL   : 指定の味方艦を追従させ、船団を作る。
PRINTBUTTON "[4] 移動", 4
PRINTL   : 指定の座標に移動させる。
PRINTL
PRINTL ◆搭乗員の設定
PRINTBUTTON "[6] 変更", 6
PRINTL
PRINTL
PRINTBUTTON "[9] 完了", 9

INPUT
IF RESULT == 0
	$CHANGE_BOARDER
	CALL SHOW_BOARDING_SLAVE_LIST
	PRINTBUTTON "[9999] 戻る", 9999
	INPUT
	IF RESULT == 9999
		GOTO INPUT_LOOP2
	ELSEIF RESULT < 0 || RESULT >= CHARANUM
		GOTO CHANGE_BOARDER
	ELSE
		BOARDING_SHIP_ID:RESULT = SELECTED
		RIDING_WITH:RESULT = -1
		GOTO INPUT_LOOP2
	ENDIF
ELSEIF RESULT == 1
	SHIP_MISSION:SELECTED = 待機
	GOTO INPUT_LOOP
ELSEIF RESULT == 2
	RESULTS = 
	FOR ITER, 0, CHARANUM
		IF BOARDING_SHIP_ID:ITER == ITER
			RESULTS = %CALLNAME:ITER%
			BREAK
		ENDIF
	NEXT
	STRLENFORM RESULTS
	IF RESULT == 0
		PRINTW 搭乗員がいないためパトロールミッションを割り振れません
		GOTO INPUT_LOOP2
	ELSE
		SHIP_MISSION:SELECTED = パトロール
		LOCAL:5 = -1
		FOR ITER:1, 0, 星系数
			IF 星系座標ID:(ITER:1) == SHIP_POSITION:SELECTED
				SHIP_PATROL:SELECTED = 星系座標ID:(ITER:1)
				LOCAL:5 = ITER:1
				BREAK
			ENDIF
		NEXT
		IF LOCAL:5 == -1
			PRINTW 宇宙港に泊まっていないため、パトロール任務を割り振れません
		ELSE
			PRINTFORMW %COUNTRY_NAME:(STAR_OWNER:(LOCAL:5))% 星＃{LOCAL:5}のパトロール任務を割り振りました
		ENDIF
	ENDIF
	GOTO INPUT_LOOP
ELSEIF RESULT == 3
	$INPUT_LOOP3
	PRINTL 追従させる船を選択してください
	FOR ITER, 0, MAX_SHIP
		SIF SHIP_COUNTRY:ITER != PLAYER_COUNTRY
			CONTINUE
		SIF SHIP_MISSION:ITER == 追従
			CONTINUE
		SIF SELECTED == ITER
			CONTINUE
		RESULTS = なし
		FOR ITER:1, 0, CHARANUM
			IF BOARDING_SHIP_ID:(ITER:1) == ITER
				RESULTS = %CALLNAME:(ITER:1)%
				BREAK
			ENDIF
		NEXT
		IF BOARDING_SHIP_ID:(ITER:1) == ITER
			PRINTFORMW 艦長がいないため。追従任務を割り振れません
			GOTO INPUT_LOOP2
		ENDIF
		SELECTCASE SHIP_MISSION:ITER
			CASE 待機
				PRINTBUTTON @"[{ITER, 3, RIGHT}] %SHIP_NAME:ITER, 30, LEFT% 艦長: %RESULTS, 20, LEFT% タスク: 待機", ITER
			CASE パトロール
				PRINTBUTTON @"[{ITER, 3, RIGHT}] %SHIP_NAME:ITER, 30, LEFT% 艦長: %RESULTS, 20, LEFT% タスク: パトロール", ITER
			CASE 追従
				PRINTBUTTON @"[{ITER, 3, RIGHT}] %SHIP_NAME:ITER, 30, LEFT% 艦長: %RESULTS, 20, LEFT% タスク: 追従(%SHIP_NAME:(BOARDING_SHIP_ID:(ITER:1))%)", ITER
		ENDSELECT
		PRINTL
	NEXT
	PRINTBUTTON "[キャンセル]", 9999
	INPUT
	IF RESULT >= 0 && RESULT < MAX_SHIP && SHIP_COUNTRY:RESULT == PLAYER_COUNTRY && SHIP_MISSION:RESULT != 追従
		SHIP_MISSION:SELECTED = 追従
		SHIP_FOLLOW:SELECTED = RESULT
	ELSEIF RESULT == 9999
		GOTO INPUT_LOOP
	ELSE
		GOTO INPUT_LOOP3
	ENDIF
	PRINTL
	GOTO INPUT_LOOP
ELSEIF RESULT == 4
	FINDELEMENT BOARDING_SHIP_ID, SELECTED
	IF RESULT == -1
		PRINTW 艦長がいないため移動ミッションを割り振れません
		GOTO INPUT_LOOP2
	ENDIF
	DRAWLINE
	PRINTL 移動させる座標を選択
	$MAP_LOOP
	CALL DRAW_MAP
	INPUT
	CALL ID2POS(RESULT)
	X_POS = RESULT:1
	Y_POS = RESULT:2
	PRINTFORML 座標 X: {X_POS}, Y: {Y_POS} に移動させますか？
	PRINTBUTTON "[0] はい", 0
	PRINTL
	PRINTBUTTON "[1] いいえ", 1
	PRINTL 
	PRINTBUTTON "[9] キャンセル", 9
	PRINTL
	INPUT
	IF RESULT == 0
		CALL POS2ID(X_POS, Y_POS)
		MOVING_POS:SELECTED = RESULT
		SHIP_MISSION:SELECTED = 移動
		GOTO INPUT_LOOP2
	ELSEIF RESULT == 1
		GOTO MAP_LOOP
	ELSEIF RESULT == 9
		GOTO INPUT_LOOP
	ELSE
		GOTO MAP_LOOP
	ENDIF
ELSEIF RESULT == 6
	CALL GET_OPTION(SHIP_EQUIP:オプション:SELECTED)
	IF RESULT != 1
		PRINTFORMW 移動ポットが装備されていない艦船は搭乗員を乗せられません
		GOTO INPUT_LOOP
	ENDIF
	$RIDING_WITH_LOOP
	FOR ITER, 0, CHARANUM
		STRLENS CALLNAME:ITER
		SIF RESULT == 0
			CONTINUE
		LOCALS = フリー
		IF BOARDING_SHIP_ID:ITER != -1
			LOCALS = 艦長として%SHIP_NAME:(BOARDING_SHIP_ID:ITER)%に搭乗中
		ELSEIF RIDING_WITH:ITER != -1
			LOCALS = 搭乗員として%SHIP_NAME:(RIDING_WITH:ITER)%に搭乗中
		ENDIF
		PRINTBUTTON @"[{ITER, 3, RIGHT}] %CALLNAME:ITER, 20, LEFT% %LOCALS%", ITER
		PRINTL
	NEXT
	PRINTBUTTON "[999] 戻る", 999
	INPUT
	IF RESULT == 999
		GOTO INPUT_LOOP
	ELSEIF RESULT >= 0 && RESULT < CHARANUM
		BOARDING_SHIP_ID:RESULT = -1
		RIDING_WITH:RESULT = SELECTED
		GOTO INPUT_LOOP
	ELSE
		GOTO RIDING_WITH_LOOP
	ENDIF
ELSEIF RESULT == 9
	GOTO INPUT_LOOP
ENDIF

;----------------------------
; 建艦
;----------------------------
@BUILD_SHIP(PORTID, ORDERBY, SHIP_TYPE_ID, NEW_SHIP_NAME)
#DIM PORTID
#DIM ORDERBY
#DIM SHIP_TYPE_ID
#DIMS NEW_SHIP_NAME
#DIM COST
#DIM USE_RESOURCE, ITEM_LENGTH
#DIM MISSING_RESOURCE, ITEM_LENGTH
#DIM ITEM_ID
#DIM RESOURCE_NUM
#DIM CAN_BUILD
#DIM CONST 購入成功 = 1
#DIM CONST 資材不足 = 0
#DIM CONST 金不足 = -1
#DIM CONST 購入キャンセル = -2

VARSET USE_RESOURCE, 0
VARSET MISSING_RESOURCE, 0
COST = STAR_OWNER:PORTID == ORDERBY ? 0 # SHIP_PRICE:0
CAN_BUILD = 1

; 消費資材
SELECTCASE SHIP_TYPE_ID
	CASE 偵察艇
		USE_RESOURCE:武装合金 = 40
		USE_RESOURCE:装甲合金 = 20
		USE_RESOURCE:シールド発生装置 = 20
		USE_RESOURCE:武装制御機器 = 20
		USE_RESOURCE:合金加工剤 = 60
		USE_RESOURCE:耐熱合金 = 20
		USE_RESOURCE:超電導回路 = 20
		USE_RESOURCE:タイラーセンサー = 20
	CASE フリゲート
		USE_RESOURCE:武装合金 = 80
		USE_RESOURCE:装甲合金 = 40
		USE_RESOURCE:シールド発生装置 = 40
		USE_RESOURCE:武装制御機器 = 40
		USE_RESOURCE:合金加工剤 = 60
		USE_RESOURCE:耐熱合金 = 40
		USE_RESOURCE:超電導回路 = 40
		USE_RESOURCE:タイラーセンサー = 20
	CASE コルベット
		USE_RESOURCE:武装合金 = 80
		USE_RESOURCE:装甲合金 = 40
		USE_RESOURCE:シールド発生装置 = 40
		USE_RESOURCE:武装制御機器 = 40
		USE_RESOURCE:合金加工剤 = 60
		USE_RESOURCE:耐熱合金 = 40
		USE_RESOURCE:超電導回路 = 40
		USE_RESOURCE:タイラーセンサー = 20
	CASE 駆逐艦
		USE_RESOURCE:武装合金 = 100
		USE_RESOURCE:装甲合金 = 60
		USE_RESOURCE:シールド発生装置 = 60
		USE_RESOURCE:武装制御機器 = 50
		USE_RESOURCE:合金加工剤 = 160
		USE_RESOURCE:耐熱合金 = 60
		USE_RESOURCE:超電導回路 = 60
		USE_RESOURCE:タイラーセンサー = 20
	CASE 巡洋艦
		USE_RESOURCE:武装合金 = 200
		USE_RESOURCE:装甲合金 = 100
		USE_RESOURCE:シールド発生装置 = 100
		USE_RESOURCE:武装制御機器 = 100
		USE_RESOURCE:合金加工剤 = 300
		USE_RESOURCE:耐熱合金 = 80
		USE_RESOURCE:超電導回路 = 80
		USE_RESOURCE:タイラーセンサー = 20
	CASE 戦艦
		USE_RESOURCE:武装合金 = 500
		USE_RESOURCE:装甲合金 = 200
		USE_RESOURCE:シールド発生装置 = 200
		USE_RESOURCE:武装制御機器 = 250
		USE_RESOURCE:合金加工剤 = 700
		USE_RESOURCE:耐熱合金 = 120
		USE_RESOURCE:超電導回路 = 120
		USE_RESOURCE:タイラーセンサー = 20
	CASE 空母
		USE_RESOURCE:武装合金 = 400
		USE_RESOURCE:装甲合金 = 300
		USE_RESOURCE:シールド発生装置 = 300
		USE_RESOURCE:武装制御機器 = 200
		USE_RESOURCE:合金加工剤 = 700
		USE_RESOURCE:耐熱合金 = 120
		USE_RESOURCE:超電導回路 = 120
		USE_RESOURCE:タイラーセンサー = 20
	CASE 輸送船
		USE_RESOURCE:装甲合金 = 40
		USE_RESOURCE:合金加工剤 = 20
		USE_RESOURCE:耐熱合金 = 20
		USE_RESOURCE:超電導回路 = 20
	CASE 作業船
		USE_RESOURCE:装甲合金 = 20
		USE_RESOURCE:武装制御機器 = 20
		USE_RESOURCE:合金加工剤 = 20
		USE_RESOURCE:耐熱合金 = 20
		USE_RESOURCE:超電導回路 = 20
ENDSELECT

; 必要資材が足りているか
FOR ITEM_ID, 0, ITEM_LENGTH
	RESOURCE_NUM = GET_RESOURCE_NUM(星系座標ID:PORTID, STAR_OWNER:PORTID, ITEM_ID)
	; 不足時
	IF RESOURCE_NUM < USE_RESOURCE:ITEM_ID
		MISSING_RESOURCE:ITEM_ID += RESOURCE_NUM
		CAN_BUILD = 0
	ELSE

	ENDIF
NEXT


IF CAN_BUILD == 0 && ORDERBY == PLAYER_COUNTRY
	SETCOLOR 0XFF0000
	PRINTL [CAUTION] ドックの資材不足で建造できませんでした
	RESETCOLOR
	FOR ITEM_ID, 0, ITEM_LENGTH
		SIF MISSING_RESOURCE:ITEM_ID != 0
			PRINTFORML 不足: %GET_RESOURCE_NAME(ITEM_ID), 20, LEFT%%TOSTR(USE_RESOURCE:ITEM_ID, "#,###"), 4, RIGHT%個
	NEXT
	WAIT
	RETURN 資材不足
ENDIF
IF CAN_BUILD == 1
	IF ORDERBY == PLAYER_COUNTRY
		IF COST > MONEY
			PRINTW 所持金不足です
			RETURN 金不足
		ELSE
			CALL BUY_DIALOG(NEW_SHIP_NAME, COST)
			IF RESULT == 1
				FOR ITEM_ID, 0, ITEM_LENGTH
					SIF USE_RESOURCE:ITEM_ID > 0
						RESULT = REMOVE_RESOURCE(PORTID, ORDERBY, ITEM_ID, USE_RESOURCE:ITEM_ID)
				NEXT
				CALL INIT_PRESET_SHIP(PLAYER_COUNTRY, 星系座標ID:PORTID, SHIP_TYPE_ID, NEW_SHIP_NAME, SHIP_TYPE_ID)
				MONEY -= COST
				RETURN 購入成功
			ELSE
				RETURN 購入キャンセル
			ENDIF
		ENDIF
	ELSE
		IF COST > MONEY:ORDERBY
			RETURN 金不足
		ELSE
			SIF USE_RESOURCE:ITEM_ID > 0
				RESULT = REMOVE_RESOURCE(PORTID, ORDERBY, ITEM_ID, USE_RESOURCE:ITEM_ID)
			CALL INIT_PRESET_SHIP(PLAYER_COUNTRY, 星系座標ID:PORTID, SHIP_TYPE_ID, NEW_SHIP_NAME, SHIP_TYPE_ID)
			MONEY:ORDERBY -= COST
			RETURN 購入成功
		ENDIF
	ENDIF
ELSE
	RETURN 資材不足
ENDIF

; 購入確認
@BUY_DIALOG(ITEM_NAME, PRICE)
#DIMS ITEM_NAME

$INPUT_LOOP
PRINTFORML %ITEM_NAME%は%TOSTR(PRICE, "$##,###,###,###")%です
PRINTBUTTON "[0] 購入", 0
PRINTBUTTON "[1] キャンセル", 1
INPUT
IF RESULT == 0
	RETURN 1
ELSEIF RESULT == 1
	RETURN 0
ELSE
	GOTO INPUT_LOOP
ENDIF