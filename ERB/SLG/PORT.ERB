;--------------------------
; 宇宙港
;--------------------------
; 建設
@CREATE_STAR_PORT(PORTPOSID, COUNTRY_ID)
#DIM PORTPOSID
#DIM COUNTRY_ID
#DIM ITER
#DIM X_POS
#DIM Y_POS

IF GET_RESOURCE_NUM(PORTPOSID, COUNTRY_ID, 装甲合金) < 100
    SETCOLOR 0XFFFF00
    PRINTW 宇宙港の建造を開始するには装甲合金100が必要です
    RESETCOLOR
    RETURN 0
ENDIF

$INPUT_LOOP
PRINTL この宙域に宇宙港を建造しますか？
PRINTBUTTON "[0] はい", 0
PRINT  
PRINTBUTTON "[1] いいえ", 1
PRINTL
INPUT
IF RESULT == 1
    RETURN
ELSEIF RESULT != 0
    GOTO INPUT_LOOP
ENDIF

FINDELEMENT PORT_POSITION_ID, -1
PORT_POSITION_ID:RESULT = PORTPOSID
PORT_OWNER:RESULT = COUNTRY_ID
PORT_RESOURCE:RESULT:装甲合金 = 0
PORT_RESOURCE:RESULT:重装甲合金 = 0
PORT_RESOURCE:RESULT:シールド発生装置 = 0
PORT_RESOURCE:RESULT:合金加工剤 = 0
PORT_RESOURCE:RESULT:超電導回路 = 0



CALL ID2POS(PORTPOSID)
X_POS = RESULT:1
Y_POS = RESULT:2

MAP:X_POS:Y_POS = 宇宙港
RESULT = REMOVE_RESOURCE(PORTPOSID, COUNTRY_ID, 装甲合金, 100)
RETURN 1

; 引き続き建造
@BUILD_PORT(POSID, COUNTRY_ID)
#DIM POSID
#DIM COUNTRY_ID
#DIM ITER
#DIM NEED_RESOURCE, ITEM_LENGTH
#DIM ITEM_ID, 2
#DIM RESOURCE_COUNT
#DIM NEED_COUNT
#DIM IS_COMPLETE
#DIM IS_WORK
#DIM BUILD_ID

IS_COMPLETE = 0
IS_WORK = 0
BUILD_ID = -1
CALL NEED_PORT_RESOURCE(NEED_RESOURCE)

FOR ITER, 0, MAX_PORT
    SIF PORT_POSITION_ID:ITER != POSID
        CONTINUE
    SIF PORT_OWNER:ITER != COUNTRY_ID
        CONTINUE
    FOR ITEM_ID, 0, ITEM_LENGTH
        ; 必要な素材がある
        RESOURCE_COUNT = GET_RESOURCE_NUM(POSID, COUNTRY_ID, ITEM_ID)
        IF RESOURCE_COUNT > 0
            ; 需要がある
            NEED_COUNT = NEED_RESOURCE:ITEM_ID - PORT_RESOURCE:ITER:ITEM_ID
            IF NEED_COUNT > 0
                IS_WORK = 1
                BUILD_ID = ITER
                IF RESOURCE_COUNT >= NEED_COUNT
                    PORT_RESOURCE:ITER:ITEM_ID += NEED_COUNT
                    RESULT = REMOVE_RESOURCE(POSID, COUNTRY_ID, ITEM_ID, NEED_COUNT)
                ELSE
                    PORT_RESOURCE:ITER:ITEM_ID += RESOURCE_COUNT
                    RESULT = REMOVE_RESOURCE(POSID, COUNTRY_ID, ITEM_ID, RESOURCE_COUNT)
                ENDIF
            ENDIF
        ENDIF
    NEXT
NEXT

; ポートの建造が完了したか
IF IS_WORK == 1
    FOR ITEM_ID, 0, ITEM_LENGTH
        IS_COMPLETE += (NEED_RESOURCE:ITEM_ID - PORT_RESOURCE:BUILD_ID:ITEM_ID)
    NEXT
ENDIF

IF IS_COMPLETE == 0 && IS_WORK == 1
    SETCOLOR 0XFFFF00
    PRINTFORMW [INFO] 宇宙港の建造が完了しました
    RESETCOLOR
    FOR ITER, 0, MAX_PORT
        SIF PORT_POSITION_ID:ITER != POSID
            CONTINUE
        SIF PORT_OWNER:ITER != COUNTRY_ID
            CONTINUE
        PORT_COMPLETE:ITER = 1
        PORT_SLOT:ITER:0 = ドック
    NEXT
ELSE
    PRINTFORML 必要な残り資材は以下の通りです
    FOR ITER, 0, MAX_PORT
        SIF PORT_POSITION_ID:ITER != POSID
            CONTINUE
        SIF PORT_OWNER:ITER != COUNTRY_ID
            CONTINUE
        FOR ITEM_ID, 0, ITEM_LENGTH
            NEED_COUNT = NEED_RESOURCE:ITEM_ID - PORT_RESOURCE:ITER:ITEM_ID
            IF NEED_COUNT > 0
                PRINTFORML %GET_RESOURCE_NAME(ITEM_ID)%: {NEED_COUNT}
            ENDIF
        NEXT
        WAIT
    NEXT
ENDIF

RETURN IS_WORK

; 必要なリソースを返却する関数
@NEED_PORT_RESOURCE(RESOURCE)
#DIM REF RESOURCE

RESOURCE:装甲合金 = 100
;RESOURCE:重装甲合金 = 300
;RESOURCE:シールド発生装置 = 600
;RESOURCE:合金加工剤 = 500
;RESOURCE:超電導回路 = 300

; 宇宙港建造可能か判定
; INT 0: 建造不可能, 1:建造可能
@IS_BUILDING(X_POS, Y_POS)
#DIM X_POS
#DIM Y_POS
#DIM SHIP_ID
#DIM MINING_ITER
#DIM TRANSPORT_ITER
#DIM CAPACITY

MINING_ITER = 0
TRANSPORT_ITER = 0
CAPACITY = 0

SIF MAP:X_POS:Y_POS != 無
    RETURN 0

FOR SHIP_ID, 0, MAX_SHIP
    SIF SHIP_COUNTRY:SHIP_ID != PLAYER_COUNTRY
        CONTINUE
    SIF SHIP_TYPE:SHIP_ID != 輸送船 && SHIP_TYPE:SHIP_ID != 作業船
        CONTINUE
    CALL POS2ID(X_POS, Y_POS)
    SIF RESULT != SHIP_POSITION:SHIP_ID
        CONTINUE

    IF SHIP_TYPE:SHIP_ID == 作業船
        MINING_ITER ++
        CONTINUE
    ENDIF
    IF SHIP_TYPE:SHIP_ID == 輸送船
        TRANSPORT_ITER ++
    ENDIF
NEXT

SIF MINING_ITER == 0 || TRANSPORT_ITER == 0
    RETURN 0

RETURN 1

; 宇宙港建造可能か判定
; INT 0: 建造不可能, 1:建造可能
@IS_BUILDUP(X_POS, Y_POS)
#DIM X_POS
#DIM Y_POS
#DIM PORT_ID
#DIM SHIP_ID
#DIM MINING_ITER
#DIM TRANSPORT_ITER

MINING_ITER = 0
TRANSPORT_ITER = 0

SIF MAP:X_POS:Y_POS != 宇宙港
    RETURN 0

CALL POS2ID(X_POS, Y_POS)
FOR PORT_ID, 0, MAX_PORT
    SIF PORT_POSITION_ID:PORT_ID != RESULT
        CONTINUE
    SIF PORT_COMPLETE:PORT_ID == 1
        RETURN 0
NEXT

FOR SHIP_ID, 0, MAX_SHIP
    SIF SHIP_COUNTRY:SHIP_ID != PLAYER_COUNTRY
        CONTINUE
    SIF SHIP_TYPE:SHIP_ID != 輸送船 && SHIP_TYPE:SHIP_ID != 作業船
        CONTINUE
    CALL POS2ID(X_POS, Y_POS)
    SIF RESULT != SHIP_POSITION:SHIP_ID
        CONTINUE

    IF SHIP_TYPE:SHIP_ID == 作業船
        MINING_ITER ++
        CONTINUE
    ENDIF
    IF SHIP_TYPE:SHIP_ID == 輸送船
        TRANSPORT_ITER ++
    ENDIF
NEXT

SIF MINING_ITER == 0 || TRANSPORT_ITER == 0
    RETURN 0

RETURN 1

; PORT画面
@PORT_MENU(PORT_ID)
#DIM PORT_ID
#DIM SLOT_ID
#DIM UNLOCK_FACILITY, 7

VARSET UNLOCK_FACILITY, 0

FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
    UNLOCK_FACILITY:(PORT_SLOT:PORT_ID:SLOT_ID) = 1
NEXT

$INPUT_LOOP
PRINTFORML ◆宇宙港#{PORT_ID}
SIF UNLOCK_FACILITY:ドック == 1
    PRINTBUTTON "[0] 宇宙港", 0
SIF UNLOCK_FACILITY:造船所 == 1
    PRINTBUTTON "[1] 造船所", 1
SIF UNLOCK_FACILITY:造船所 == 1
    PRINTBUTTON "[2] 装備換装", 2
PRINTBUTTON "[3] タスクの割り振り", 3
SIF HUMAN_LAB == CHARACTER_POSITION && QUEST_PROGRESS:0 >= 3
    PRINTBUTTON "[5] 人体研究所", 5
SIF UNLOCK_FACILITY:コンテナ == 1
    PRINTBUTTON "[6] 素材売買", 6
SIF UNLOCK_FACILITY:工場 == 1
    PRINTBUTTON "[7] 加工工場", 7
SIF PORT_OWNER:PORT_ID == PLAYER_COUNTRY
    PRINTBUTTON "[8] 宇宙港スロット", 8

INPUT

IF RESULT == 0 && UNLOCK_FACILITY:ドック == 1
	CALL SPACE_PORT(PORT_ID)
ELSEIF RESULT == 1 && UNLOCK_FACILITY:造船所 == 1
	CALL SLG_SHIP_SHOP(PORT_ID)
ELSEIF RESULT == 2 && UNLOCK_FACILITY:造船所 == 1
	CALL SLG_EQUIP_SHOP(PORT_ID)
ELSEIF RESULT == 3
	CALL SETUP_TASK_LIST
ELSEIF RESULT == 5 && HUMAN_LAB == CHARACTER_POSITION && QUEST_PROGRESS:0 >= 3
	CALL HUMAN_LAB
ELSEIF RESULT == 6 && UNLOCK_FACILITY:コンテナ == 1
	CALL SLG_ITEM_SHOP(PORT_ID)
ELSEIF RESULT == 7 && UNLOCK_FACILITY:工場 == 1
    CALL PRIVATE_FACTORY(PORT_ID, PLAYER_COUNTRY)
ELSEIF PORT_OWNER:PORT_ID == PLAYER_COUNTRY
    GOTO INPUT_LOOP
ELSEIF RESULT == 99
	RETURN 0
ELSEIF RESULT == 100
	RETURN 1
ENDIF

GOTO INPUT_LOOP