;--------------------------
; 宇宙港
;--------------------------
; 建設
@CREATE_STAR_PORT(PORTPOSID, COUNTRY_ID)
#DIM PORTPOSID
#DIM COUNTRY_ID
#DIM ITER
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS

IF GET_RESOURCE_NUM(PORTPOSID, COUNTRY_ID, 装甲合金) < 100
    SETCOLOR 0XFFFF00
    PRINTW 宇宙港の建造を開始するには装甲合金100が必要です
    RESETCOLOR
    RETURN 0
ENDIF

$INPUT_LOOP
PRINTL この宙域に宇宙港を建造しますか？
PRINTBUTTON "[0] はい", 0
PRINT  
PRINTBUTTON "[1] いいえ", 1
PRINTL
INPUT
IF RESULT == 1
    RETURN
ELSEIF RESULT != 0
    GOTO INPUT_LOOP
ENDIF

FINDELEMENT PORT_POSITION_ID, -1
PORT_POSITION_ID:RESULT = PORTPOSID
PORT_OWNER:RESULT = COUNTRY_ID
PORT_RESOURCE:RESULT:装甲合金 = 0
PORT_RESOURCE:RESULT:重装甲合金 = 0
PORT_RESOURCE:RESULT:シールド発生装置 = 0
PORT_RESOURCE:RESULT:合金加工剤 = 0
PORT_RESOURCE:RESULT:超電導回路 = 0



CALL ID2POS(PORTPOSID)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2

MAP:SECTOR_ID:X_POS:Y_POS = 宇宙港
RESULT = REMOVE_RESOURCE(PORTPOSID, COUNTRY_ID, 装甲合金, 100)
RETURN 1

; 引き続き建造
@BUILD_PORT(POSID, COUNTRY_ID)
#DIM POSID
#DIM COUNTRY_ID
#DIM ITER
#DIM NEED_RESOURCE, ITEM_LENGTH
#DIM ITEM_ID, 2
#DIM RESOURCE_COUNT
#DIM NEED_COUNT
#DIM IS_COMPLETE
#DIM IS_WORK
#DIM BUILD_ID

IS_COMPLETE = 0
IS_WORK = 0
BUILD_ID = -1
CALL NEED_PORT_RESOURCE(NEED_RESOURCE)

FOR ITER, 0, MAX_PORT
    SIF PORT_POSITION_ID:ITER != POSID
        CONTINUE
    SIF PORT_OWNER:ITER != COUNTRY_ID
        CONTINUE
    FOR ITEM_ID, 0, ITEM_LENGTH
        ; 必要な素材がある
        RESOURCE_COUNT = GET_RESOURCE_NUM(POSID, COUNTRY_ID, ITEM_ID)
        IF RESOURCE_COUNT > 0
            ; 需要がある
            NEED_COUNT = NEED_RESOURCE:ITEM_ID - PORT_RESOURCE:ITER:ITEM_ID
            IF NEED_COUNT > 0
                IS_WORK = 1
                BUILD_ID = ITER
                IF RESOURCE_COUNT >= NEED_COUNT
                    PORT_RESOURCE:ITER:ITEM_ID += NEED_COUNT
                    RESULT = REMOVE_RESOURCE(POSID, COUNTRY_ID, ITEM_ID, NEED_COUNT)
                ELSE
                    PORT_RESOURCE:ITER:ITEM_ID += RESOURCE_COUNT
                    RESULT = REMOVE_RESOURCE(POSID, COUNTRY_ID, ITEM_ID, RESOURCE_COUNT)
                ENDIF
            ENDIF
        ENDIF
    NEXT
NEXT

; ポートの建造が完了したか
IF IS_WORK == 1
    FOR ITEM_ID, 0, ITEM_LENGTH
        IS_COMPLETE += (NEED_RESOURCE:ITEM_ID - PORT_RESOURCE:BUILD_ID:ITEM_ID)
    NEXT
ENDIF

IF IS_COMPLETE == 0 && IS_WORK == 1
    SETCOLOR 0XFFFF00
    PRINTFORMW [INFO] 宇宙港の建造が完了しました
    RESETCOLOR
    FOR ITER, 0, MAX_PORT
        SIF PORT_POSITION_ID:ITER != POSID
            CONTINUE
        SIF PORT_OWNER:ITER != COUNTRY_ID
            CONTINUE
        PORT_COMPLETE:ITER = 1
        PORT_SLOT:ITER:0 = ドック
    NEXT
ELSE
    PRINTFORML 必要な残り資材は以下の通りです
    FOR ITER, 0, MAX_PORT
        SIF PORT_POSITION_ID:ITER != POSID
            CONTINUE
        SIF PORT_OWNER:ITER != COUNTRY_ID
            CONTINUE
        FOR ITEM_ID, 0, ITEM_LENGTH
            NEED_COUNT = NEED_RESOURCE:ITEM_ID - PORT_RESOURCE:ITER:ITEM_ID
            IF NEED_COUNT > 0
                PRINTFORML %GET_RESOURCE_NAME(ITEM_ID)%: {NEED_COUNT}
            ENDIF
        NEXT
        WAIT
    NEXT
ENDIF

RETURN IS_WORK

; 必要なリソースを返却する関数
@NEED_PORT_RESOURCE(RESOURCE)
#DIM REF RESOURCE

RESOURCE:装甲合金 = 500
RESOURCE:重装甲合金 = 300
RESOURCE:シールド発生装置 = 600
RESOURCE:合金加工剤 = 500
RESOURCE:超電導回路 = 300

; 宇宙港建造可能か判定
; INT 0: 建造不可能, 1:建造可能
@IS_BUILDING(POSID)
#DIM POSID
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
#DIM SHIP_ID
#DIM MINING_ITER
#DIM TRANSPORT_ITER
#DIM CAPACITY

MINING_ITER = 0
TRANSPORT_ITER = 0
CAPACITY = 0

CALL ID2POS(POSID)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2

SIF MAP:SECTOR_ID:X_POS:Y_POS != 明瞭
    RETURN 0

FOR SHIP_ID, 0, MAX_SHIP
    SIF SHIP_COUNTRY:SHIP_ID != PLAYER_COUNTRY
        CONTINUE
    SIF SHIP_CATEGORY:SHIP_ID != 輸送船 && SHIP_CATEGORY:SHIP_ID != 作業船
        CONTINUE
    CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
    SIF RESULT != SHIP_POSITION:SHIP_ID
        CONTINUE

    IF SHIP_CATEGORY:SHIP_ID == 作業船
        MINING_ITER ++
        CONTINUE
    ENDIF
    IF SHIP_CATEGORY:SHIP_ID == 輸送船
        TRANSPORT_ITER ++
    ENDIF
NEXT

SIF MINING_ITER == 0 || TRANSPORT_ITER == 0
    RETURN 0

RETURN 1

; 宇宙港建造可能か判定
; INT 0: 建造不可能, 1:建造可能
@IS_BUILDUP(POSID)
#DIM POSID
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
#DIM PORT_ID
#DIM SHIP_ID
#DIM MINING_ITER
#DIM TRANSPORT_ITER

MINING_ITER = 0
TRANSPORT_ITER = 0
CALL ID2POS(POSID)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2

SIF MAP:SECTOR_ID:X_POS:Y_POS != 宇宙港
    RETURN 0

CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
FOR PORT_ID, 0, MAX_PORT
    SIF PORT_POSITION_ID:PORT_ID != RESULT
        CONTINUE
    SIF PORT_COMPLETE:PORT_ID == 1
        RETURN 0
NEXT

FOR SHIP_ID, 0, MAX_SHIP
    SIF SHIP_COUNTRY:SHIP_ID != PLAYER_COUNTRY
        CONTINUE
    SIF SHIP_CATEGORY:SHIP_ID != 輸送船 && SHIP_CATEGORY:SHIP_ID != 作業船
        CONTINUE
    CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
    SIF RESULT != SHIP_POSITION:SHIP_ID
        CONTINUE

    IF SHIP_CATEGORY:SHIP_ID == 作業船
        MINING_ITER ++
        CONTINUE
    ENDIF
    IF SHIP_CATEGORY:SHIP_ID == 輸送船
        TRANSPORT_ITER ++
    ENDIF
NEXT

SIF MINING_ITER == 0 || TRANSPORT_ITER == 0
    RETURN 0

RETURN 1

; PORT画面
@PORT_MENU(PORTID)
#DIM PORTID
#DIM SLOT_ID
#DIM UNLOCK_FACILITY, 7
#DIMS LEFT_COLUMNS, 50
#DIM LEFT_COLUMNS_BUTTON_VALUE, 50
#DIM CURRENT_MODE
#DIM LINE_ITER

CURRENT_MODE = 0

$INPUT_LOOP
LINE_ITER = 0
VARSET LEFT_COLUMNS, " "
VARSET LEFT_COLUMNS_BUTTON_VALUE, NONE_LINE
VARSET UNLOCK_FACILITY, 0

FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
    UNLOCK_FACILITY:(PORT_SLOT:PORTID:SLOT_ID) = 1
NEXT

LEFT_COLUMNS:LINE_ITER = %"　宇宙港", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = WHITE_LINE
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"---------------------", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GRAY_LINE
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"　[0] 宇宙港", LEFT_COLUMN_LENGTH, LEFT%
IF CURRENT_MODE == 0
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
ELSE
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 0
ENDIF
LINE_ITER ++
IF UNLOCK_FACILITY:造船所 == 1
    LEFT_COLUMNS:LINE_ITER = %"　[1] 艦船購入", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 1
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 1
    ENDIF
    LINE_ITER++
ENDIF
IF UNLOCK_FACILITY:造船所 == 1
    LEFT_COLUMNS:LINE_ITER = %"　[2] 装備更新", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 2
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 2
    ENDIF
    LINE_ITER ++
ENDIF
LEFT_COLUMNS:LINE_ITER = %"　[3] タスクの割り振り", LEFT_COLUMN_LENGTH, LEFT%
IF CURRENT_MODE == 3
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
ELSE
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 3
ENDIF
LINE_ITER ++
IF HUMAN_LAB == CHARACTER_POSITION && QUEST_PROGRESS:0 >= 3
	LEFT_COLUMNS:LINE_ITER = %"　[5] 人体研究所", LEFT_COLUMN_LENGTH, LEFT%
	IF CURRENT_MODE == 5
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
	ELSE
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 5
	ENDIF
	LINE_ITER ++
ENDIF
IF UNLOCK_FACILITY:コンテナ == 1 && PORT_OWNER:PORTID != PLAYER_COUNTRY
    LEFT_COLUMNS:LINE_ITER = %"　[6] 素材販売", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 6
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 6
    ENDIF
    LINE_ITER ++
ENDIF
IF UNLOCK_FACILITY:工場 == 1
    LEFT_COLUMNS:LINE_ITER = %"　[7] 加工工場", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 7
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 7
    ENDIF
    LINE_ITER ++
ENDIF
IF PORT_OWNER:PORTID == PLAYER_COUNTRY
    LEFT_COLUMNS:LINE_ITER = %"　[8] 宇宙港スロット", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 8
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 8
    ENDIF
    LINE_ITER ++
ENDIF
IF PORT_OWNER:PORTID == PLAYER_COUNTRY
    LEFT_COLUMNS:LINE_ITER = %"　[9] インフォメーション", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 9
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 9
    ENDIF
    LINE_ITER ++
ENDIF
LEFT_COLUMNS:LINE_ITER = %"　[10] 宙域画面へ", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 10
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"　[11] 奴隷の調教", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 11

IF CURRENT_MODE == 0
	CALL SPACE_PORT(PORTID, 1, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 1
	CALL SLG_SHIP_SHOP(PORT_POSITION_ID:PORTID, PORT_OWNER:PORTID, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 2
	CALL SLG_EQUIP_SHOP(PORT_POSITION_ID:PORTID, PORT_OWNER:PORTID, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 3
	CALL SETUP_TASK_LIST(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
;ELSEIF CURRENT_MODE == 4
	;CALL QUEST_LIST(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 5
	CALL HUMAN_LAB
ELSEIF CURRENT_MODE == 6
	CALL SLG_ITEM_SHOP(PORTID, 1)
ELSEIF CURRENT_MODE == 7
    CALL PRIVATE_FACTORY(PORTID, PLAYER_COUNTRY)
ELSEIF CURRENT_MODE == 8
    CALL EDIT_PORT_SLOT(PORTID)
ELSEIF CURRENT_MODE == 9
    CALL INFORMATION_INDEX
ENDIF

IF RESULT == 0 && UNLOCK_FACILITY:ドック == 1
	CURRENT_MODE = 0
	GOTO INPUT_LOOP
ELSEIF RESULT == 1 && UNLOCK_FACILITY:造船所 == 1
	CURRENT_MODE = 1
	GOTO INPUT_LOOP
ELSEIF RESULT == 2 && UNLOCK_FACILITY:造船所 == 1
	CURRENT_MODE = 2
	GOTO INPUT_LOOP
ELSEIF RESULT == 3
	CURRENT_MODE = 3
	GOTO INPUT_LOOP
ELSEIF RESULT == 4
	CURRENT_MODE = 4
	GOTO INPUT_LOOP
ELSEIF RESULT == 5 && HUMAN_LAB == CHARACTER_POSITION && QUEST_PROGRESS:0 >= 3
	CURRENT_MODE = 5
	GOTO INPUT_LOOP
ELSEIF RESULT == 6 && UNLOCK_FACILITY:コンテナ == 1 && PORT_OWNER:PORTID != PLAYER_COUNTRY
	CURRENT_MODE = 6
	GOTO INPUT_LOOP
ELSEIF RESULT == 7 && UNLOCK_FACILITY:工場 == 1
	CURRENT_MODE = 7
	GOTO INPUT_LOOP
ELSEIF RESULT == 8 && PORT_OWNER:PORTID == PLAYER_COUNTRY
	CURRENT_MODE = 8
    GOTO INPUT_LOOP
ELSEIF RESULT == 9
    CURRENT_MODE = 9
    GOTO INPUT_LOOP
ELSEIF RESULT == 10
    RETURN 0
ELSEIF RESULT == 11
	RETURN 1
ELSE
	GOTO INPUT_LOOP
ENDIF

; PORT_SLOT_編集
; 必要そうなの素材が民製品ぽかったので金で解決する
@EDIT_PORT_SLOT(PORT_ID)
#DIM PORT_ID
#DIM SLOT_ID
#DIMS SLOT_NAME

$INPUT_LOOP
DRAWLINE
PRINTL ◆リソースの編集
PRINTBUTTON "[100] 輸送船の貨物を全てコンテナに移す", 100
PRINTL
PRINTBUTTON "[101] 指定のリソースの移動", 101
PRINTL
PRINTL
PRINTL ◆スロット編集
FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
    SELECTCASE PORT_SLOT:PORT_ID:SLOT_ID
        CASE 空
            SLOT_NAME = %"---", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE コンテナ
            SLOT_NAME = %"コンテナ", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE ドック
            SLOT_NAME = %"ドック", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE 工場
            SLOT_NAME = %"工場", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE 造船所
            SLOT_NAME = %"造船所", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
    ENDSELECT
    SIF SLOT_ID % 4 == 3
        PRINTL
NEXT
PRINTBUTTON "[99] 戻る", 99

INPUT

IF RESULT >= 0 && RESULT < STAR_PORT_SLOT_NUM
    CALL SELECT_SLOT_ITEM(PORT_ID, RESULT)
    GOTO INPUT_LOOP
ELSEIF RESULT == 99
    RETURN
ELSEIF RESULT == 100
    CALL MOVE_RESOURCE_TO_CONTAINER(PLAYER_COUNTRY, PORT_POSITION_ID:PORT_ID)
    GOTO INPUT_LOOP
ELSEIF RESULT == 101
    CALL MOVE_RESOURCE(PLAYER_COUNTRY, PORT_POSITION_ID:PORT_ID)
    GOTO INPUT_LOOP
ELSE
    GOTO INPUT_LOOP
ENDIF

; スロットに適用できるアイテム一覧
@SELECT_SLOT_ITEM(PORT_ID, SLOT_ID)
#DIM PORT_ID
#DIM SLOT_ID

$INPUT_LOOP

PRINTL
PRINTL ◆スロットに適用するアイテムの選択
PRINT 現在適用されているアイテム: 
SELECTCASE PORT_SLOT:PORT_ID:SLOT_ID
    CASE 空
        PRINTL 無し
        PRINTL 効果: 無し
    CASE コンテナ
        PRINTL コンテナ
        PRINTL 効果: 物資を10000保管できる
    CASE ドック
        PRINTL ドック
        PRINTL 効果: 艦船を停泊させることのできるドック(効果は重複しない)
    CASE 工場
        PRINTL 工場
        PRINTL 効果: 素材の加工を行えるようになる(効果は重複しない)
    CASE 造船所
        PRINTL 造船所
        PRINTL 効果: 艦船を建造できるようになる(効果は重複しない)
ENDSELECT
PRINTL
PRINTL 選択できるアイテム(価格): 効果
PRINTBUTTON "[1] コンテナ($100,000)   : 物資を10000保管できる", 1
PRINTL
PRINTBUTTON "[2] ドック  ($100,000)   : 艦船を停泊させることのできるドック(効果は重複しない)", 2
PRINTL
PRINTBUTTON "[3] 工場    ($1,000,000) : 素材の加工を行えるようになる(効果は重複しない)", 3
PRINTL
PRINTBUTTON "[4] 造船所  ($2,000,000) : 艦船を建造できるようになる(効果は重複しない)", 4
PRINTL
PRINTBUTTON "[9] 戻る", 9
INPUT

IF RESULT == 1
    CALL SLOT_CHANGE_DIALOG("コンテナ", 100000)
    IF RESULT == 1
        PORT_SLOT:PORT_ID:SLOT_ID = コンテナ
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 2
    CALL SLOT_CHANGE_DIALOG("ドック", 100000)
    IF RESULT == 1
        PORT_SLOT:PORT_ID:SLOT_ID = ドック
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 3
    CALL SLOT_CHANGE_DIALOG("工場", 1000000)
    IF RESULT == 1
        PORT_SLOT:PORT_ID:SLOT_ID = 工場
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 4
    CALL SLOT_CHANGE_DIALOG("造船所", 2000000)
    IF RESULT == 1
        PORT_SLOT:PORT_ID:SLOT_ID = 造船所
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 9
    RETURN
ELSE
    GOTO INPUT_LOOP
ENDIF

; スロット変更確認ダイアログ
@SLOT_CHANGE_DIALOG(ITEM_NAME, SLOT_ITEM_PRICE)
#DIMS ITEM_NAME
#DIM SLOT_ITEM_PRICE

$INPUT_LOOP

PRINTL
PRINTFORML ◆購入確認 所持金 %TOSTR(MONEY, "$###,###,###,###")%
PRINTFORML %ITEM_NAME%を%TOSTR(SLOT_ITEM_PRICE, "$#,###,###")%で設置しますか？
PRINTBUTTON "[0] はい", 0
PRINTL
PRINTBUTTON "[1] いいえ", 1
INPUT
IF RESULT == 0
    IF SLOT_ITEM_PRICE <= MONEY
        PRINTW 設置しました
        MONEY -= SLOT_ITEM_PRICE
        RETURN 1
    ELSE
        PRINTW 所持金不足です
        RETURN 0
    ENDIF
ELSEIF RESULT == 1
    RETURN 0
ELSE
    GOTO INPUT_LOOP
ENDIF

; 全ての貨物をコンテナに移す
@MOVE_RESOURCE_TO_CONTAINER(COUNTRY_ID, POSID)
#DIM COUNTRY_ID
#DIM POSID
#DIM SHIP_RESOURCE_TOTAL_COUNT
#DIM SHIP_RESOURCE, ITEM_LENGTH
#DIM TOTAL_CONTAINER_CAPACITY
#DIM SHIP_ID
#DIM SLOT_ID
#DIM ITEM_ID
#DIM PORT_ID

VARSET SHIP_RESOURCE, 0
SHIP_RESOURCE_TOTAL_COUNT = 0
TOTAL_CONTAINER_CAPACITY = 0

FOR SHIP_ID, 0, MAX_SHIP
    SIF SHIP_COUNTRY:SHIP_ID != COUNTRY_ID
        CONTINUE
    SIF SHIP_POSITION:SHIP_ID != POSID
        CONTINUE
    SIF SHIP_CATEGORY:SHIP_ID != 輸送船
        CONTINUE
    FOR ITEM_ID, 0, ITEM_LENGTH
        SHIP_RESOURCE:ITEM_ID += CARGO_CONTENTS:SHIP_ID:ITEM_ID
        SHIP_RESOURCE_TOTAL_COUNT += CARGO_CONTENTS:SHIP_ID:ITEM_ID
        CARGO_CONTENTS:SHIP_ID:ITEM_ID = 0
    NEXT
NEXT

FOR PORT_ID, 0, MAX_PORT
    SIF PORT_OWNER:PORT_ID != COUNTRY_ID
        CONTINUE
    SIF PORT_POSITION_ID:PORT_ID != POSID
        CONTINUE
    FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
        TOTAL_CONTAINER_CAPACITY += CONTAINER_CAPACITY
    NEXT
NEXT

IF SHIP_RESOURCE_TOTAL_COUNT <= TOTAL_CONTAINER_CAPACITY
    PRINTL 以下の貨物をコンテナに収めました
    PRINTL 
    FOR ITEM_ID, 0, ITEM_LENGTH
        SIF SHIP_RESOURCE:ITEM_ID == 0
            CONTINUE
        PRINTFORML %GET_RESOURCE_NAME(ITEM_ID)% x %TOSTR(SHIP_RESOURCE:ITEM_ID, "##,###"), 5, RIGHT%
        RESULT = ADD_RESOURCE(POSID, COUNTRY_ID, ITEM_ID, SHIP_RESOURCE:ITEM_ID)
    NEXT
    PRINTL
    PRINTW 以上
ELSE
    PRINTFORML コンテナが一杯で{SHIP_RESOURCE_TOTAL_COUNT - TOTAL_CONTAINER_CAPACITY}の収容キャパシティが不足しています
    PRINTW 作業ロボットが適当に入れられるだけコンテナに貨物を入れました。輸送船に残ったリソースを確認してください
    PRINTL 以下の貨物をコンテナに収めました
    FOR ITEM_ID, 0, ITEM_LENGTH
        SIF SHIP_RESOURCE:ITEM_ID > 0
            CONTINUE
        RESULT = ADD_RESOURCE(POSID, COUNTRY_ID, ITEM_ID, SHIP_RESOURCE:ITEM_ID)
    NEXT
ENDIF

; 輸送船とコンテナでアイテムをやり取りする
@MOVE_RESOURCE(COUNTRY_ID, POSID)
#DIM COUNTRY_ID
#DIM POSID
#DIM SHIP_RESOURCE, ITEM_LENGTH
#DIM CONTAINER_RESOURCE, ITEM_LENGTH
#DIM CARGO_SHIP_CAPACITY
#DIM PORT_CONTAINER_CAPACITY
#DIM SHIP_ID
#DIM ITEM_ID
#DIM PORT_ID
#DIM SLOT_ID
#DIM CURRENT_SHIP_RESOURCE
#DIM CURRENT_CONTAINER_RESOURCE

VARSET SHIP_RESOURCE, 0
VARSET CONTAINER_RESOURCE, 0
CARGO_SHIP_CAPACITY = 0
PORT_CONTAINER_CAPACITY = 0

; いったん輸送船とコンテナの荷物をそれぞれのバッファ変数に収める
FOR SHIP_ID, 0, MAX_SHIP
    SIF SHIP_COUNTRY:SHIP_ID != COUNTRY_ID
        CONTINUE
    SIF SHIP_POSITION:SHIP_ID != POSID
        CONTINUE
    SIF SHIP_CATEGORY:SHIP_ID != 輸送船
        CONTINUE
    CARGO_SHIP_CAPACITY += CARGO_CAPACITY
    FOR ITEM_ID, 0, ITEM_LENGTH
        SIF CARGO_CONTENTS:SHIP_ID:ITEM_ID == 0
            CONTINUE
        SHIP_RESOURCE:ITEM_ID = CARGO_CONTENTS:SHIP_ID:ITEM_ID
        CARGO_CONTENTS:SHIP_ID:ITEM_ID = 0
    NEXT
NEXT

FOR PORT_ID, 0, MAX_PORT
    SIF PORT_OWNER:PORT_ID != COUNTRY_ID
        CONTINUE
    SIF PORT_POSITION_ID:PORT_ID != POSID
        CONTINUE
    FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
        SIF PORT_SLOT:PORT_ID:SLOT_ID != コンテナ
            CONTINUE
        PORT_CONTAINER_CAPACITY += CONTAINER_CAPACITY
        FOR ITEM_ID, 0, ITEM_LENGTH
            SIF PORT_CONTAINER:PORT_ID:SLOT_ID:ITEM_ID == 0
                CONTINUE
            CONTAINER_RESOURCE:ITEM_ID = PORT_CONTAINER:PORT_ID:SLOT_ID:ITEM_ID
            PORT_CONTAINER:PORT_ID:SLOT_ID:ITEM_ID = 0
        NEXT
    NEXT
NEXT
$INPUT_LOOP
; ユーザーに再分配してもらう
DRAWLINE
PRINTL ◆リソースの管理
PRINTL 
PRINTFORM %"", 32, LEFT%
PRINTFORM %"輸送船団", 16, RIGHT%
PRINTFORM %"", 24, LEFT%
PRINTFORML %"コンテナ", 16, RIGHT%
PRINTFORM %"キャパシティ", 32, LEFT%
IF CARGO_SHIP_CAPACITY == 0
    PRINTFORM {0, 16, RIGHT}
ELSE
    PRINTFORM %TOSTR(CARGO_SHIP_CAPACITY, "###,###,###"), 16, RIGHT%
ENDIF
PRINTFORM %"", 24, LEFT%
IF PORT_CONTAINER_CAPACITY == 0
    PRINTFORML {0 , 16, RIGHT}
ELSE
    PRINTFORML %TOSTR(PORT_CONTAINER_CAPACITY, "###,###,###"), 16, RIGHT%
ENDIF
PRINTL
FOR ITEM_ID, 0, ITEM_LENGTH
    SIF SHIP_RESOURCE:ITEM_ID == 0 && CONTAINER_RESOURCE:ITEM_ID == 0
        CONTINUE
    PRINTFORM %GET_RESOURCE_NAME(ITEM_ID), 32, LEFT%
    IF SHIP_RESOURCE:ITEM_ID > 0
        PRINTFORM %TOSTR(SHIP_RESOURCE:ITEM_ID), 16, RIGHT%
    ELSE
        PRINTFORM {0, 16, RIGHT}
    ENDIF
    PRINTBUTTON "[<<<]", 1000 + ITEM_ID
    PRINTBUTTON "[<<]", 2000 + ITEM_ID
    PRINTBUTTON "[<]", 3000 + ITEM_ID
    PRINTBUTTON "[>]", 4000 + ITEM_ID
    PRINTBUTTON "[>>]", 5000 + ITEM_ID
    PRINTBUTTON "[>>>]", 6000 + ITEM_ID
    IF CONTAINER_RESOURCE:ITEM_ID > 0
        PRINTFORML %TOSTR(CONTAINER_RESOURCE:ITEM_ID), 16, RIGHT%
    ELSE
        PRINTFORML {0, 16, RIGHT}
    ENDIF
NEXT
SETCOLOR 0X666666
PRINTL --------------------------------------------------------------------------------------------------------------
RESETCOLOR
PRINTBUTTON "[100] 完了", 100
PRINTL
DRAWLINE

INPUT
IF RESULT >= 1000 && RESULT < 2000 && (RESULT % 1000) < ITEM_LENGTH
    IF (RESULT % 1000) < ITEM_LENGTH
        ITEM_ID = RESULT % 1000
    ELSE
        GOTO INPUT_LOOP
    ENDIF
    IF CONTAINER_RESOURCE:ITEM_ID >= 100
        SHIP_RESOURCE:ITEM_ID += 100
        CONTAINER_RESOURCE:ITEM_ID -= 100
    ELSE
        SHIP_RESOURCE:ITEM_ID += CONTAINER_RESOURCE:ITEM_ID
        CONTAINER_RESOURCE:ITEM_ID = 0
    ENDIF
ELSEIF RESULT >= 2000 && RESULT < 3000 && (RESULT % 2000) < ITEM_LENGTH
    IF (RESULT % 2000) < ITEM_LENGTH
        ITEM_ID = RESULT % 2000
    ELSE
        GOTO INPUT_LOOP
    ENDIF
    IF CONTAINER_RESOURCE:ITEM_ID >= 10
        SHIP_RESOURCE:ITEM_ID += 10
        CONTAINER_RESOURCE:ITEM_ID -= 10
    ELSE
        SHIP_RESOURCE:ITEM_ID += CONTAINER_RESOURCE:ITEM_ID
        CONTAINER_RESOURCE:ITEM_ID = 0
    ENDIF
ELSEIF RESULT >= 3000 && RESULT < 4000 && (RESULT % 3000) < ITEM_LENGTH
    IF (RESULT % 3000) < ITEM_LENGTH
        ITEM_ID = RESULT % 3000
    ELSE
        GOTO INPUT_LOOP
    ENDIF

    IF CONTAINER_RESOURCE:ITEM_ID >= 1
        SHIP_RESOURCE:ITEM_ID += 1
        CONTAINER_RESOURCE:ITEM_ID -= 1
    ELSE
        SHIP_RESOURCE:ITEM_ID += CONTAINER_RESOURCE:ITEM_ID
        CONTAINER_RESOURCE:ITEM_ID = 0
    ENDIF
ELSEIF RESULT >= 4000 && RESULT < 5000 && (RESULT % 4000) < ITEM_LENGTH
    IF (RESULT % 4000) < ITEM_LENGTH
        ITEM_ID = RESULT % 4000
    ELSE
        GOTO INPUT_LOOP
    ENDIF

    IF SHIP_RESOURCE:ITEM_ID >= 1
        CONTAINER_RESOURCE:ITEM_ID += 1
        SHIP_RESOURCE:ITEM_ID -= 1
    ELSE
        CONTAINER_RESOURCE:ITEM_ID += SHIP_RESOURCE:ITEM_ID
        SHIP_RESOURCE:ITEM_ID = 0
    ENDIF
ELSEIF RESULT >= 5000 && RESULT < 6000 && (RESULT % 5000) < ITEM_LENGTH
    IF (RESULT % 5000) < ITEM_LENGTH
        ITEM_ID = RESULT % 5000
    ELSE
        GOTO INPUT_LOOP
    ENDIF

    IF SHIP_RESOURCE:ITEM_ID >= 10
        CONTAINER_RESOURCE:ITEM_ID += 10
        SHIP_RESOURCE:ITEM_ID -= 10
    ELSE
        CONTAINER_RESOURCE:ITEM_ID += SHIP_RESOURCE:ITEM_ID
        SHIP_RESOURCE:ITEM_ID = 0
    ENDIF
ELSEIF RESULT >= 6000 && RESULT < 7000 && (RESULT % 6000) < ITEM_LENGTH
    IF (RESULT % 6000) < ITEM_LENGTH
        ITEM_ID = RESULT % 6000
    ELSE
        GOTO INPUT_LOOP
    ENDIF

    IF SHIP_RESOURCE:ITEM_ID >= 100
        CONTAINER_RESOURCE:ITEM_ID += 100
        SHIP_RESOURCE:ITEM_ID -= 100
    ELSE
        CONTAINER_RESOURCE:ITEM_ID += SHIP_RESOURCE:ITEM_ID
        SHIP_RESOURCE:ITEM_ID = 0
    ENDIF
ELSEIF RESULT == 100
    CURRENT_SHIP_RESOURCE = 0
    CURRENT_CONTAINER_RESOURCE = 0
    FOR ITEM_ID, 0, ITEM_LENGTH
        CURRENT_SHIP_RESOURCE += SHIP_RESOURCE:ITEM_ID
        CURRENT_CONTAINER_RESOURCE += CONTAINER_RESOURCE:ITEM_ID
    NEXT
    IF CURRENT_SHIP_RESOURCE > CARGO_SHIP_CAPACITY
        SETCOLOR 0XFF0000
        PRINTFORMW 輸送船団に振り分けようとしているリソースがキャパシティを超えています
        RESETCOLOR
        GOTO INPUT_LOOP
    ENDIF
    IF CURRENT_CONTAINER_RESOURCE > PORT_CONTAINER_CAPACITY
        SETCOLOR 0XFF0000
        PRINTFORMW コンテナに振り分けようとしているリソースがキャパシティを超えています
        RESETCOLOR
        GOTO INPUT_LOOP
    ENDIF
    ; リソースの再分配
    CALL ADD_RESOURCE_TO_CARGO_SHIP(POSID, COUNTRY_ID, SHIP_RESOURCE)
    CALL ADD_RESOURCE_TO_PORT_CONTAINER(POSID, COUNTRY_ID, CONTAINER_RESOURCE)
    PRINTW リソースの分配を完了しました
    RETURN
ELSE
    GOTO INPUT_LOOP
ENDIF
GOTO INPUT_LOOP
