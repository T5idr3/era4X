;--------------------------
; AI
;--------------------------
@SLG_AI
#DIM POS_X
#DIM POS_Y
#DIM ITER

; 各国の挙動
FOR ITER, 1, MAX_COUNTRY
	SELECTCASE ITER
		CASE 1
			CALL SLG_AI_ACTION_1
		CASE 2
			CALL SLG_AI_ACTION_2
		CASE 3
			CALL SLG_AI_ACTION_3
		CASE 4
			CALL SLG_AI_ACTION_4
		CASE 5
			CALL SLG_AI_ACTION_5
		CASE 6
			CALL SLG_AI_ACTION_6
		CASE 10
			CALL SLG_AI_ACTION_10
	ENDSELECT
NEXT

; MAP走査だと無駄なので艦で走査
FOR ITER, 0, MAX_SHIP
	CALL ID2POS(SHIP_POSITION:ITER)
	POS_X = RESULT:1
	POS_Y = RESULT:2
	; チェック済みのエリアは弾く
	SIF CHECKED_MAP:POS_X:POS_Y == 1
		CONTINUE
	CALL COMBAT(SHIP_POSITION:ITER)
	CALL RETIRE_BROKEN_SHIP
	CHECKED_MAP:POS_X:POS_Y = 1
NEXT

;--------------------------
; AI ACTION プレイヤー勢力
;--------------------------
@SLG_AI_ACTION_1
#DIM STAR_ID
#DIM SHIP_ID
#DIM ITER, 2
#DIM FOLLOWING_SHIPS, MAX_SHIP
#DIM CONST COUNTRY_ID = 1

VARSET FOLLOWING_SHIPS, -1
FOR SHIP_ID, 0, MAX_SHIP
	SIF SHIP_COUNTRY:SHIP_ID != COUNTRY_ID
		CONTINUE
	SIF SHIP_MISSION:SHIP_ID == 追従
		CONTINUE
	SIF SHIP_MISSION:SHIP_ID == 待機
		CONTINUE
	SIF SHIP_MISSION:SHIP_ID == パトロール
		CALL PATROL(SHIP_PATROL:SHIP_ID, SHIP_ID)
	IF SHIP_MISSION:SHIP_ID == 移動
		PRINTFORML 移動任務実行中
		CALL ID2POS(MOVING_POS:SHIP_ID)
		CALL MOVE_SHIP(RESULT:1, RESULT:2, SHIP_ID)
		IF RESULT == 1
			SHIP_MISSION:SHIP_ID = 待機
			CALL ID2POS(SHIP_ID)
			SETCOLOR 0XFFFF00
			PRINTFORML [INFO] %SHIP_NAME:SHIP_MISSION%の移動任務完了(X: {RESULT:1}, Y: {RESULT:2})
			RESETCOLOR
		ENDIF
	ENDIF
NEXT

;追従任務に就いている艦の追従処理
FOR SHIP_ID, 0, MAX_SHIP
	SIF SHIP_COUNTRY:SHIP_ID != COUNTRY_ID
		CONTINUE
	SIF SHIP_MISSION:SHIP_ID != 追従
		CONTINUE
	CALL ID2POS(SHIP_POSITION:(SHIP_FOLLOW:SHIP_ID))
	CALL MOVE_SHIP(RESULT:1, RESULT:2, SHIP_ID)
NEXT


;--------------------------
; AI ACTION 社会主義国家
;--------------------------
@SLG_AI_ACTION_2
#DIM CONST COUNTRY_ID = 2
CALL COMMON_AI_ACTION(COUNTRY_ID)


;--------------------------
; AI ACTION 企業連合
;--------------------------
@SLG_AI_ACTION_3
#DIM CONST COUNTRY_ID = 3
CALL COMMON_AI_ACTION(COUNTRY_ID)

;--------------------------
; AI ACTION 民主主義国家
;--------------------------
@SLG_AI_ACTION_4
#DIM CONST COUNTRY_ID = 4
CALL COMMON_AI_ACTION(COUNTRY_ID)

;--------------------------
; AI ACTION 宗教国家
;--------------------------
@SLG_AI_ACTION_5
#DIM CONST COUNTRY_ID = 5
CALL COMMON_AI_ACTION(COUNTRY_ID)

;--------------------------
; AI ACTION 機械文明
;--------------------------
@SLG_AI_ACTION_6
#DIM CONST COUNTRY_ID = 6
CALL COMMON_AI_ACTION(COUNTRY_ID)

;--------------------------
; AI ACTION 海賊
;--------------------------
@SLG_AI_ACTION_10
#DIM ITER

;全艦上下左右1マス以内に襲える敵がいるか判定して、いた場合襲う
FOR ITER, 0, MAX_SHIP
	IF SHIP_COUNTRY:ITER == 10
		CALL ID2POS(SHIP_POSITION:ITER)
		CALL IS_PIRATE_ATTACK(RESULT:1, RESULT:2 + 1)
		IF RESULT == 1
			CALL SHIP_MOVE_FOR(2, ITER)
			CONTINUE
		ENDIF
		CALL IS_PIRATE_ATTACK(RESULT:1, RESULT:2 - 1)
		IF RESULT == 1
			CALL SHIP_MOVE_FOR(8, ITER)
			CONTINUE
		ENDIF
		CALL IS_PIRATE_ATTACK(RESULT:1 + 1, RESULT:2)
		IF RESULT == 1
			CALL SHIP_MOVE_FOR(6, ITER)
			CONTINUE
		ENDIF
		CALL IS_PIRATE_ATTACK(RESULT:1 - 1, RESULT:2)
		IF RESULT == 1
			CALL SHIP_MOVE_FOR(4, ITER)
			CONTINUE
		ENDIF
	ENDIF
NEXT

;--------------------------
; AIの共通処理
;--------------------------
@COMMON_AI_ACTION(COUNTRY_ID)
#DIM COUNTRY_ID
#DIM ITER
#DIM STAR_ID
#DIM SHIP_ID
#DIM パトロール中, 星系数
VARSET パトロール中, 0

FOR SHIP_ID, 0, MAX_SHIP
	SIF SHIP_COUNTRY:SHIP_ID != COUNTRY_ID
		CONTINUE
	SIF SHIP_MISSION:SHIP_ID == 追従
		CONTINUE
	IF SHIP_MISSION:SHIP_ID == パトロール
		FOR STAR_ID, 0, 星系数
			SIF STAR_OWNER:STAR_ID != COUNTRY_ID
				CONTINUE
			CALL PATROL(星系座標ID:STAR_ID, SHIP_ID)
			パトロール中:STAR_ID = 1
		NEXT
		CONTINUE
	ENDIF
	IF SHIP_TYPE:SHIP_ID == 駆逐艦 && SHIP_MISSION:SHIP_ID == 待機
		FOR STAR_ID, 0, 星系数
			SIF STAR_OWNER:STAR_ID != COUNTRY_ID
				CONTINUE
			SIF パトロール中:STAR_ID == 1
				CONTINUE
			IF 星系座標ID:STAR_ID == SHIP_POSITION:SHIP_ID
				SHIP_MISSION:SHIP_ID = パトロール
				CALL PATROL(星系座標ID:STAR_ID, SHIP_ID)
				パトロール中:STAR_ID = 1
			ENDIF
		NEXT
	ENDIF
NEXT


;--------------------------
; 自拠点の周りにパトロール軍を出す
;--------------------------
@PATROL(CENTER_POSID, SHIP_ID)
#DIM CENTER_POSID
#DIM SHIP_ID
#DIM CENTER_POS_X
#DIM CENTER_POS_Y
#DIM SHIP_POS_X
#DIM SHIP_POS_Y

CALL ID2POS(CENTER_POSID)
CENTER_POS_X = RESULT:1
CENTER_POS_Y = RESULT:2

CALL ID2POS(SHIP_POSITION:SHIP_ID)
SHIP_POS_X = RESULT:1
SHIP_POS_Y = RESULT:2
IF CENTER_POS_X == SHIP_POS_X && CENTER_POS_Y == SHIP_POS_Y
	CALL MOVE2POS(CENTER_POS_X, CENTER_POS_Y - 1, SHIP_ID)
ELSEIF CENTER_POS_X == SHIP_POS_X && CENTER_POS_Y - 1 == SHIP_POS_Y
	CALL MOVE2POS(CENTER_POS_X + 1, CENTER_POS_Y - 1, SHIP_ID)
ELSEIF CENTER_POS_X + 1 == SHIP_POS_X && CENTER_POS_Y - 1 == SHIP_POS_Y
	CALL MOVE2POS(CENTER_POS_X + 1, CENTER_POS_Y, SHIP_ID)
ELSEIF CENTER_POS_X + 1 == SHIP_POS_X && CENTER_POS_Y == SHIP_POS_Y
	CALL MOVE2POS(CENTER_POS_X + 1, CENTER_POS_Y + 1, SHIP_ID)
ELSEIF CENTER_POS_X + 1 == SHIP_POS_X && CENTER_POS_Y + 1 == SHIP_POS_Y
	CALL MOVE2POS(CENTER_POS_X, CENTER_POS_Y + 1, SHIP_ID)
ELSEIF CENTER_POS_X == SHIP_POS_X && CENTER_POS_Y + 1 == SHIP_POS_Y
	CALL MOVE2POS(CENTER_POS_X - 1, CENTER_POS_Y + 1, SHIP_ID)
ELSEIF CENTER_POS_X - 1 == SHIP_POS_X && CENTER_POS_Y + 1 == SHIP_POS_Y
	CALL MOVE2POS(CENTER_POS_X - 1, CENTER_POS_Y, SHIP_ID)
ELSEIF CENTER_POS_X - 1 == SHIP_POS_X && CENTER_POS_Y == SHIP_POS_Y
	CALL MOVE2POS(CENTER_POS_X - 1, CENTER_POS_Y - 1, SHIP_ID)
ELSEIF CENTER_POS_X - 1 == SHIP_POS_X && CENTER_POS_Y - 1 == SHIP_POS_Y
	CALL MOVE2POS(CENTER_POS_X, CENTER_POS_Y - 1, SHIP_ID)
ENDIF
;--------------------------
; 移動
;--------------------------
@MOVE2POS(POS_X, POS_Y, SHIP_ID)
#DIM POS_X
#DIM POS_Y
#DIM SHIP_ID
#DIM X_DIFF
#DIM Y_DIFF

CALL ID2POS(SHIP_POSITION:SHIP_ID)
X_DIFF = RESULT:1
Y_DIFF = RESULT:2

ABS (X_DIFF - POS_X)
X_DIFF = RESULT

ABS (Y_DIFF - POS_Y)
Y_DIFF = RESULT

IF X_DIFF + Y_DIFF > 1
	THROW 移動可能距離を超えて移動しようとしました
ELSE
	CALL POS2ID(POS_X, POS_Y)
	SHIP_POSITION:SHIP_ID = RESULT
ENDIF

;--------------------------
; 海賊の攻撃判定
;--------------------------
@IS_PIRATE_ATTACK(ARG:0, ARG:1)
#DIM 艦種
#DIM ITER

CALL POS2ID(ARG:0, ARG:1)
CALL GET_SHIP_LIST_FROM_POS(RESULT)
SIF SHIP_LIST_LENGTH == 0
	RETURN 0
; 敵に戦闘艦が含まれていなければ襲う
FOR ITER, 0, SHIP_LIST_LENGTH
	艦種 = SHIP_TYPE:(SHIP_LIST:ITER)
	IF 艦種 == フリゲート || 艦種 == コルベット || 艦種 == 駆逐艦 || 艦種 == 巡洋艦 || 艦種 == 戦艦 || 艦種 == 空母
		RETURN 0
		BREAK
	ENDIF
NEXT
RETURN 1

