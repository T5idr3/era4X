;------------------------------------------------
;初期化処理
;------------------------------------------------
@INIT_SHIP_NAME_LIST()
;各国が使用するネームリストを指定。
;プレイヤー勢力はゲーム開始時に選択。
CALL REGISTER_COUNTRYS_SHIP_NAME_LIST(国家ID_社会主義, 艦名_社会主義)
CALL REGISTER_COUNTRYS_SHIP_NAME_LIST(国家ID_企業連合, 艦名_企業)
CALL REGISTER_COUNTRYS_SHIP_NAME_LIST(国家ID_民主主義, 艦名_民主主義)
CALL REGISTER_COUNTRYS_SHIP_NAME_LIST(国家ID_アレス宗教, 艦名_宗教)
CALL REGISTER_COUNTRYS_SHIP_NAME_LIST(国家ID_機械文明, 艦名_機械)

CALL REGISTER_COUNTRYS_SHIP_NAME_LIST(国家ID_一般海賊, 艦名_海賊)
CALL REGISTER_COUNTRYS_SHIP_NAME_LIST(国家ID_豊秋津皇国, 艦名_皇国)
CALL REGISTER_COUNTRYS_SHIP_NAME_LIST(国家ID_ハールバルズ, 艦名_王国)

;SHIP_NAME_LIST配列に各ネームリストを読み込む
VARSET SHIP_NAME_LIST, ""
FOR LOCAL, 0, MAX_NAME_LIST
    TRYCALLFORM REGISTER_SHIP_NAME_LIST_{LOCAL}(LOCAL, SHIP_NAME_LIST)
NEXT

SHIP_LIST_REGISTERED = 1

;------------------------------------------------
;各国が使用するネームリストを登録
;------------------------------------------------
@REGISTER_COUNTRYS_SHIP_NAME_LIST(COUNTRY_ID, NAME_LIST_ID)
#DIM COUNTRY_ID
#DIM NAME_LIST_ID
;ネームリストの存在をチェックし、なければデフォルトネームリストを設定する。
TRYCCALLFORM GET_NAME_OF_SHIP_NAME_LIST_{NAME_LIST_ID}
    COUNTRYS_SHIP_NAME_LIST:COUNTRY_ID = NAME_LIST_ID
CATCH
    COUNTRYS_SHIP_NAME_LIST:COUNTRY_ID = 艦名_デフォルト
ENDCATCH
;------------------------------------------------
;プレイヤーが使用するネームリストを選択
;------------------------------------------------
@SELECT_PLAYERS_SHIP_NAME_LIST()
#DIMS TEMP_LIST, MAX_NAME_LIST, SHIP_CATEGORY_COUNT, MAX_RANDOM_NAME
#DIMS LIST_NAME
#DIM SELECTED_LIST

$INPUT_LOOP
PRINTL ◆ネームリスト選択
PRINTL あなたの艦船の命名に使用するネームリストを選んでください。
FOR LOCAL, 0, MAX_NAME_LIST
    TRYCCALLFORM GET_NAME_OF_SHIP_NAME_LIST_{LOCAL}
        LIST_NAME = %RESULTS%
        TRYCALLFORM REGISTER_SHIP_NAME_LIST_{LOCAL}(LOCAL, TEMP_LIST)
        PRINTFORML [{LOCAL}]%LIST_NAME%
    CATCH
    ENDCATCH
NEXT

INPUT
SIF RESULT < 0 || RESULT > MAX_NAME_LIST
    GOTO INPUT_LOOP

SELECTED_LIST = RESULT

TRYCCALLFORM GET_NAME_OF_SHIP_NAME_LIST_{RESULT}
CATCH
    GOTO INPUT_LOOP
ENDCATCH

PRINTFORML 【%RESULTS%】でよろしいですか？
PRINTFORML サンプル：
CALL PRINT_SAMPLE_SHIP_NAME(SELECTED_LIST, TEMP_LIST)

$INPUT_LOOP2
PRINT [0]はい [1]いいえ
INPUT

IF RESULT == 1
    GOTO INPUT_LOOP
ELSEIF RESULT == 0
    CALL REGISTER_COUNTRYS_SHIP_NAME_LIST(国家ID_プレイヤー, SELECTED_LIST)
ELSE
    GOTO INPUT_LOOP2
ENDIF
;------------------------------------------------
;ネームサンプルの表示
;------------------------------------------------
@PRINT_SAMPLE_SHIP_NAME(ID, NAME_LIST)
#DIM ID
#DIM S_TYPE
#DIM S_NAME
#DIMS REF NAME_LIST, 0, 0, 0
DRAWLINE
FOR S_TYPE, 0, SHIP_CATEGORY_COUNT
    FOR S_NAME, 0, 2
        IF NAME_LIST:ID:S_TYPE:S_NAME != ""
            PRINTFORM %NAME_LIST:ID:S_TYPE:S_NAME%, 
        ELSE
            BREAK
        ENDIF
    NEXT
NEXT
PRINTL
DRAWLINE

;------------------------------------------------
;SHIP_NAME_LISTから使用回数の少ない艦名を取得
;------------------------------------------------
@GET_FEWEST_SHIP_NAME_FROM_LIST(COUNTRY_ID, SHIP_TYPE)
#DIM COUNTRY_ID
#DIM SHIP_TYPE
#DIM USED_COUNT
#DIM USED_COUNT_MIN
#DIM SELECTED_NUM
#DIM SELECTED_NUM_LIST, MAX_RANDOM_NAME
#DIM LIST_ID

SIF SHIP_LIST_REGISTERED == 0
    CALL INIT_SHIP_NAME_LIST()

USED_COUNT_MIN = 9999
VARSET SELECTED_NUM_LIST, -1

FOR LOCAL, 0, MAX_RANDOM_NAME
    ;艦名リストが空欄でなく、使用回数が少ない名前を探す。
    IF GET_SHIP_NAME_FROM_LIST(COUNTRY_ID, SHIP_TYPE, LOCAL) != ""
        USED_COUNT = GET_SHIP_NAME_USED(COUNTRY_ID, SHIP_TYPE, LOCAL)
        ;最小使用回数が更新されたら候補リストを初期化
        IF USED_COUNT < USED_COUNT_MIN
            USED_COUNT_MIN = USED_COUNT
            VARSET SELECTED_NUM_LIST, -1
            SELECTED_NUM_LIST:0 = LOCAL
        ;最小使用回数が同じなら、候補リストに追加
        ELSEIF USED_COUNT == USED_COUNT_MIN 
            SELECTED_NUM_LIST:FINDELEMENT(SELECTED_NUM_LIST, -1) = LOCAL
        ENDIF
    ENDIF
NEXT

;ネームリストに該当の艦種の名前が登録されていない場合
IF FINDELEMENT(SELECTED_NUM_LIST, -1) == 0
    RESULTS = %GET_TYPE_NAME(SHIP_TYPE)%
    RETURN 1
ENDIF

IF FINDELEMENT(SELECTED_NUM_LIST, -1) == -1
    ;SELECTED_NUM_LISTが埋まっている場合
    SELECTED_NUM = SELECTED_NUM_LIST:RAND(MAX_RANDOM_NAME)
ELSE
    SELECTED_NUM = SELECTED_NUM_LIST:RAND(FINDELEMENT(SELECTED_NUM_LIST, -1))
ENDIF

;名前の使用回数を加算
CALL ADD_SHIP_NAME_LIST_COUNT(COUNTRY_ID, SHIP_TYPE, SELECTED_NUM)
USED_COUNT = GET_SHIP_NAME_USED(COUNTRY_ID, SHIP_TYPE, SELECTED_NUM)

RESULTS = %GET_SHIP_NAME_FROM_LIST(COUNTRY_ID, SHIP_TYPE, SELECTED_NUM)%%ARABIC_TO_ROMAN(USED_COUNT)%

;------------------------------------------------
;SHIP_NAME_LISTから艦名を直接取得
;------------------------------------------------
@GET_SHIP_NAME_FROM_LIST(COUNTRY_ID, SHIP_TYPE, NAME_ID)
#FUNCTIONS
#DIM LIST_ID
#DIM COUNTRY_ID
#DIM SHIP_TYPE
#DIM NAME_ID
LIST_ID = COUNTRYS_SHIP_NAME_LIST:COUNTRY_ID
RETURNF SHIP_NAME_LIST:LIST_ID:SHIP_TYPE:NAME_ID
;------------------------------------------------
;SHIP_NAME_LIST_COUNTから名称の使用回数を取得
;------------------------------------------------
@GET_SHIP_NAME_USED(COUNTRY_ID, SHIP_TYPE, NAME_ID)
#FUNCTION
#DIM COUNTRY_ID
#DIM SHIP_TYPE
#DIM NAME_ID
RETURNF SHIP_NAME_LIST_COUNT:COUNTRY_ID:SHIP_TYPE:NAME_ID

;------------------------------------------------
;SHIP_NAME_LIST_COUNTに名前の使用回数を加算
;------------------------------------------------
@ADD_SHIP_NAME_LIST_COUNT(COUNTRY_ID, SHIP_TYPE, NAME_ID)
#DIM COUNTRY_ID
#DIM SHIP_TYPE
#DIM NAME_ID

SHIP_NAME_LIST_COUNT:COUNTRY_ID:SHIP_TYPE:NAME_ID += 1

;------------------------------------------------
;アラビア数字からローマ数字（1~3999まで）
;------------------------------------------------
@ARABIC_TO_ROMAN(A_NUM)
#FUNCTIONS
#DIM A_NUM
#DIM BUF_DIV
#DIMS ANS
#DIM ARABIC = 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1
#DIMS ROMAN = "M","CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"

SIF A_NUM < 1 || A_NUM > 3999
    RETURNF "ERROR"
BUF_DIV = 0
ANS = 
FOR LOCAL, 0, VARSIZE("ARABIC")
    BUF_DIV = A_NUM / ARABIC:LOCAL
    IF BUF_DIV > 0
        FOR LOCAL:1, BUF_DIV, 0, -1
            ANS += ROMAN:LOCAL
        NEXT
    ENDIF
    A_NUM = A_NUM % ARABIC:LOCAL
NEXT

RETURNF ANS
