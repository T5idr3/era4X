;─────────────────────────────────────── 
;●エル口上の使用可否・初期化
;─────────────────────────────────────── 
@KOJO_ASK_K7_RESET_K7
#DIM SAVE_REDRAW
#DIM SAVE_COLOR
#DIM SAVE_LINE
#DIM エル

CURRENTREDRAW
SAVE_REDRAW = RESULT
REDRAW 0
GETCOLOR
SAVE_COLOR = RESULT
RESETCOLOR

エル = NAME_TO_CHARA("エル")

RESETCOLOR
PRINTL 

PRINTFORML エル口上使用の設定
CALL KOJO_ASK_K7("使用しない", "使用する")
PRINTFORMW エル口上の使用を設定した

;使用しない
IF RESULT == 0
	CFLAG:エル:400 = 1
;使用する
ELSEIF RESULT == 1
	CFLAG:エル:400 = 2
	PRINTL
ENDIF

PRINTL 

REDRAW SAVE_REDRAW
SETCOLOR SAVE_COLOR
RETURN 0


;─────────────────────────────────────── 
;●エルの呼称（エルからエル_対象へ）
;　使い方：%CALLNAME_K7(エル_対象)%　%CALLNAME_K7(エル_対象, "ぁ")%
;　覚書　：第二引数に"ぁ"とつけると
;　フリガナ（CSTR:MASTER:6やエル_主人公への呼称フリガナや君主等への特殊呼称）がある場合
;　対応する小書き母音をつける（甘え感を出す）
;─────────────────────────────────────── 
@CALLNAME_K7(エル_対象, 小書き)
#FUNCTIONS
#DIM エル
#DIM エル_対象
#DIMS 小書き
#DIMS 表示テキスト
#DIMS 表示テキストフリガナ

;リセット
エル = NAME_TO_CHARA("エル")
表示テキスト '= ""

;慰安中モブ相手
IF FLAG:調教モード == 調教_慰安 && CFLAG:(エル_対象):慰安モブ
	表示テキスト '= "みんな"
	表示テキストフリガナ '= "ミンナ"

;それ以外
ELSE
	IF CSTR:エル_対象:99 == "あなた"
		IF IS_MALE(エル_対象)
			表示テキスト '= "キミ"
			表示テキストフリガナ '= "キミ"
		ELSE
			表示テキスト '= "キミ"
			表示テキストフリガナ '= "キミ"
		ENDIF
	ELSE
		表示テキスト '= ANAME(エル_対象)
		IF CSTR:エル_対象:6 != ""
			表示テキストフリガナ '= CSTR:エル_対象:6
		ELSE
			表示テキストフリガナ '= ""
		ENDIF
	ENDIF
ENDIF

IF 小書き == "ぁ" && 表示テキストフリガナ != ""
;	表示テキスト '= 表示テキスト + SMALLSCRIPT(表示テキストフリガナ)
	表示テキスト '= 表示テキスト
ENDIF

RETURNF 表示テキスト

;─────────────────────────────────────── 
;●エル口上の分岐条件まとめ
;　IF文を短縮したり見やすくするための条件まとめ
;　よく使う条件が増えたらその都度追加
;　条件=わかりやすそうな条件名 エル_対象=略すと主人公
;　CHECK_K7("面識", エル_対象)……既知と扱うキャラか、面識はあるかの確認
;　CHECK_K7("陥落", エル_対象)……エル_対象が主人公か＆恋慕系服従系の陥落があるか確認する
;　CHECK_K7("活力")……エルの気力体力があるまたはエルに主導権がある
;─────────────────────────────────────── 
@CHECK_K7(条件, エル_対象)
#FUNCTION
#DIMS 条件
#DIM エル_対象
#DIM エル

;エル_対象は未指定だと主人公
IF !エル_対象
	エル_対象 = MASTER
ENDIF

エル = NAME_TO_CHARA("エル")

;面識
SELECTCASE 条件
	CASE  "面識"
	;エル_対象があなたでエルと面識がある（面識を得るデイリーの発生も含む）
		IF エル_対象 == MASTER && CFLAG:エル:面識
			RETURNF 1
	;それ以外
		ELSE
			RETURNF 0
		ENDIF
;陥落
	CASE "陥落"
	;エル_対象があなたで恋慕系か服従系の陥落
		IF エル_対象 == MASTER && (IS_SLAVE(エル) || IS_LOVER(エル))
			RETURNF 1
		ENDIF
;深陥落
	CASE "深陥落"
	;エル_対象があなたで親愛か所有、隷属の陥落
		IF エル_対象 == MASTER && IS_MASTER_UP(エル)
			RETURNF 1
		ENDIF
;活力（気力体力1/3以上または主導権持ち）
	CASE "活力"
		IF BASE:エル:気力 > (MAXBASE:エル:気力 / 3) && BASE:エル:体力 > (MAXBASE:エル:体力 / 3)
			RETURNF 1
		ENDIF
		IF IS_INITIATIVE(エル)
			RETURNF 1
		ENDIF
;ふたりきり 行為の対象がMASTERかつ調教対象が他に誰もいない
	CASE "ふたりきり"
		IF (IS_MTAR(エル_対象 == MASTER) || IS_MPLY(エル_対象 == MASTER) )&& TFLAG:44 == 2
			RETURNF 1
		ENDIF
ENDSELECT

RETURNF 0

@SET_STS_K7(KEY, PARAM)
#DIMS KEY
#DIMS PARAM
エル_状態 = %DIC_SET(エル_状態, KEY, PARAM)%
@REMOVE_STS_K7(KEY)
#DIMS KEY
エル_状態 = %DIC_REMOVE(エル_状態, KEY)%

;─────────────────────────────────────── 
;●エルの文末を決める
;　使い方：鍵括弧前は%BREAK_K7("末")%　そうでなければ%BREAK_K7("中")%
;　覚書　：文末というか読点・感嘆符・ハート
;　機嫌とか快楽度合いとかコマンド種を見て「。」つけるか「！」や「❤」つけるか決める
;　鍵括弧の直前以外は！や❤の後に全角スペースを入れるため、中か末かの指定がいる
;　促音「っ」をつけたりつけなかったりするので、元テキストの末尾につけてしまうと「っっ」になる
;─────────────────────────────────────── 
@BREAK_K7(位置, エル_対象)
#FUNCTIONS
#DIMS 位置
#DIMS 区切り
#DIMS 表示テキスト
#DIM エル
#DIM エル_対象
#DIMS エル機嫌
#DIM エル_最大快楽部位の値

;エル_対象は未指定だと主人公
IF !エル_対象
	エル_対象 = MASTER
ENDIF

エル = NAME_TO_CHARA("エル")
エル機嫌 '= TOSTR_EMOTION(エル)
エル_最大快楽部位の値 = MAX(PALAM:エル:快Ｃ, PALAM:エル:快Ｖ, PALAM:エル:快Ａ, PALAM:エル:快Ｂ, PALAM:エル:快Ｍ)

表示テキスト '= ""

;▼日常コマンド失敗時
IF TFLAG:18 == -1 || TFLAG:17 == -1
	表示テキスト '= SPLIT_R("……：：：：：")
	IF 位置 == "中"
		表示テキスト '= 表示テキスト + "。"
	ENDIF

;▼不機嫌
ELSEIF GROUPMATCH(エル機嫌,"恨","怒","憤","鬱","悲","憂","狂","恐","怯")
	表示テキスト '= SPLIT_R("……：：：：：")
	表示テキスト '= 表示テキスト + SPLIT_R("っ：！：：：：：")
	IF 位置 == "中"
		表示テキスト '= 表示テキスト + "。"
	ENDIF

;▼気力切れ/酔い限界
ELSEIF TCVAR:エル:52 || TCVAR:エル:53 == 1
	;エル_対象が主人公ではないか、陥落ではない、あるいは捕虜スカ触手系
	IF !CHECK_K7("陥落", エル_対象) || ((SELECTCOM >= 80 && SELECTCOM <= 99) || (SELECTCOM >= 130 && SELECTCOM <= 159) || (SELECTCOM >= 200 && SELECTCOM <= 219))
		表示テキスト '= SPLIT_R("……：：：：：")
		表示テキスト '= 表示テキスト + SPLIT_R("っ：：：：：")
		IF 位置 == "中"
			表示テキスト '= 表示テキスト + "。"
		ENDIF
	;エル_対象が主人公かつ陥落、捕虜スカ触手系ではない
	ELSE
		表示テキスト '= SPLIT_R("……：：：：：")
		表示テキスト '= 表示テキスト + SPLIT_R("っ：：：：：")
		IF 位置 == "中"
			表示テキスト '= 表示テキスト + SPLIT_R("。：❤　")
		ELSE
			表示テキスト '= 表示テキスト + SPLIT_R("：❤")
		ENDIF
	ENDIF

;▼体力切れ 
ELSEIF TCVAR:エル:51 || (BASE:エル:体力 <= (MAXBASE:エル:体力 / 3))
	IF エル_最大快楽部位の値 >= 9000
		表示テキスト '= SPLIT_R("……：")
		表示テキスト '= 表示テキスト + SPLIT_R("っ：")
		IF 位置 == "中"
			表示テキスト '= 表示テキスト + "。"
		ENDIF
	ELSE
		表示テキスト '= SPLIT_R("……：")
		表示テキスト '= 表示テキスト + SPLIT_R("っ：：：：：")
		IF 位置 == "中"
			表示テキスト '= 表示テキスト + "。"
		ENDIF
	ENDIF

;▼閨でエルが受け
;　受けかどうかはNIGHTのカテゴリ分岐で保存される
ELSEIF FLAG:ウフフフラグ && エル_エルが受け
	;▽～1500　あっ……ん……
	IF エル_最大快楽部位の値 < 1500
		;エル_対象が主人公ではないか、陥落ではない、あるいは捕虜スカ触手系
		IF !CHECK_K7("陥落", エル_対象) || ((SELECTCOM >= 80 && SELECTCOM <= 99) || (SELECTCOM >= 130 && SELECTCOM <= 159) || (SELECTCOM >= 200 && SELECTCOM <= 219))
			表示テキスト '= SPLIT_R("……：")
			表示テキスト '= 表示テキスト + SPLIT_R("っ：：：：：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + "。"
			ENDIF
		;エル_対象が主人公かつ陥落、捕虜スカ触手系ではない
		ELSE
			表示テキスト '= SPLIT_R("……：")
			表示テキスト '= 表示テキスト + SPLIT_R("っ：：：：：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + SPLIT_R("。：❤　")
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_R("：❤")
			ENDIF
		ENDIF

	;▽1500～5000　ああっ、う、あ❤　……っ、ん
	ELSEIF エル_最大快楽部位の値 >= 1500 && エル_最大快楽部位の値 < 5000
		;エル_対象が主人公ではないか、陥落ではない、あるいは捕虜スカ触手系
		IF !CHECK_K7("陥落", エル_対象) || ((SELECTCOM >= 80 && SELECTCOM <= 99) || (SELECTCOM >= 130 && SELECTCOM <= 159) || (SELECTCOM >= 200 && SELECTCOM <= 219))
			表示テキスト '= SPLIT_R("……：：：")
			表示テキスト '= 表示テキスト + SPLIT_R("っ：：：：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + "。"
			ENDIF
		;エル_対象が主人公かつ陥落、捕虜スカ触手系ではない
		ELSE
			表示テキスト '= SPLIT_R("……：：：")
			表示テキスト '= 表示テキスト + SPLIT_R("っ：：：：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + SPLIT_R("。：❤　")
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_R("：❤")
			ENDIF
		ENDIF

	;▽5000～9000　あっ。だめっ！　も、もうっ。はあぁぁん❤
	ELSEIF エル_最大快楽部位の値 >= 5000 && エル_最大快楽部位の値 < 9000
		;エル_対象が主人公ではないか、陥落ではない、あるいは捕虜スカ触手系
		IF !CHECK_K7("陥落", エル_対象) || ((SELECTCOM >= 80 && SELECTCOM <= 99) || (SELECTCOM >= 130 && SELECTCOM <= 159) || (SELECTCOM >= 200 && SELECTCOM <= 219))
			表示テキスト '= SPLIT_R("っ：：：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + SPLIT_R("。：。：。：！　")
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_R("：：：！")
			ENDIF
		;エル_対象が主人公かつ陥落、捕虜スカ触手系ではない
		ELSE
			表示テキスト '= SPLIT_R("っ：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + SPLIT_R("。：。：。：！　：❤　：❤　")
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_R("：：：！：❤：❤")
			ENDIF
		ENDIF

	;▽9000～　いくうううう❤　いっちゃうう～っ！
	ELSE
		;エル_対象が主人公ではないか、陥落ではない、あるいは捕虜スカ触手系
		IF !CHECK_K7("陥落", エル_対象) || ((SELECTCOM >= 80 && SELECTCOM <= 99) || (SELECTCOM >= 130 && SELECTCOM <= 159) || (SELECTCOM >= 200 && SELECTCOM <= 219))
			表示テキスト '= SPLIT_R("――：～：ー：……：：：：：：：：：：：：：：：")
			表示テキスト '= 表示テキスト + SPLIT_R("っ：っ：っ：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + SPLIT_R("。：！　")
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_R("：！")
			ENDIF
		;エル_対象が主人公かつ陥落、捕虜スカ触手系ではない
		ELSE
			表示テキスト '= SPLIT_R("――：～：ー：……：：：：：：：：：：：：：：：")
			表示テキスト '= 表示テキスト + SPLIT_R("っ：っ：っ：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + SPLIT_R("。：！　：！　：❤　：❤　：❤　")
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_R("：！：！：❤：❤：❤")
			ENDIF
		ENDIF
	ENDIF

;▼閨でエルが攻め
ELSEIF FLAG:ウフフフラグ
	;▽～5000
	IF エル_最大快楽部位の値 < 5000
		;エル_対象が主人公ではないか、陥落ではない、あるいは捕虜スカ触手系
		IF !CHECK_K7("陥落", エル_対象) || ((SELECTCOM >= 80 && SELECTCOM <= 99) || (SELECTCOM >= 130 && SELECTCOM <= 159) || (SELECTCOM >= 200 && SELECTCOM <= 219))
			表示テキスト '= SPLIT_R("……：……っ：：：：：：：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + "。"
			ENDIF
		;エル_対象が主人公かつ陥落、捕虜スカ触手系ではない
		ELSE
			表示テキスト '= SPLIT_R("……：：：：：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + SPLIT_R("。：❤　")
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_R("：❤")
			ENDIF
		ENDIF

	;▽5000～9000
	ELSEIF エル_最大快楽部位の値 >= 5000 && エル_最大快楽部位の値 < 9000
		;エル_対象が主人公ではないか、陥落ではない、あるいは捕虜スカ触手系
		IF !CHECK_K7("陥落", エル_対象) || ((SELECTCOM >= 80 && SELECTCOM <= 99) || (SELECTCOM >= 130 && SELECTCOM <= 159) || (SELECTCOM >= 200 && SELECTCOM <= 219))
			表示テキスト '= SPLIT_R("……っ：っ：：：：：：：：")
			IF 位置 == "中"
				表示テキスト '= "。"
			ENDIF
		;エル_対象が主人公かつ陥落、捕虜スカ触手系ではない
		ELSE
			表示テキスト '= SPLIT_R("っ：：：：：")
			IF 位置 == "中"
				表示テキスト '= SPLIT_R("。：❤　")
			ELSE
				表示テキスト '= SPLIT_R("：❤：❤❤")
			ENDIF
		ENDIF

	;▽9000～
	ELSE
		;エル_対象が主人公ではないか、陥落ではない、あるいは捕虜スカ触手系
		IF !CHECK_K7("陥落", エル_対象) || ((SELECTCOM >= 80 && SELECTCOM <= 99) || (SELECTCOM >= 130 && SELECTCOM <= 159) || (SELECTCOM >= 200 && SELECTCOM <= 219))
			表示テキスト '= SPLIT_R("っ：：：：：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + SPLIT_R("。：。：。：。：。：！")
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_R("：：：：：！")
			ENDIF
		;エル_対象が主人公かつ陥落、捕虜スカ触手系ではない
		ELSE
			表示テキスト '= SPLIT_R("っ：：：：：")
			IF 位置 == "中"
				表示テキスト '= 表示テキスト + SPLIT_R("。：。：。：！：❤　：❤　：❤　")
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_R("：：：！：❤：❤：❤：❤❤：❤❤❤")
			ENDIF
		ENDIF
	ENDIF

;▼日常
ELSE
	;エル_対象が主人公ではないか、陥落ではない
	IF !CHECK_K7("陥落", エル_対象)
		表示テキスト '= SPLIT_R("……：：：：：")
		IF 位置 == "中"
			表示テキスト '= 表示テキスト + "。"
		ENDIF
	;エル_対象が主人公かつ陥落
	ELSE
		表示テキスト '= SPLIT_R("……：：：：：")
		IF 位置 == "中"
			表示テキスト '= 表示テキスト + SPLIT_R("。：❤　")
		ELSE
			表示テキスト '= 表示テキスト + SPLIT_R("：❤")
		ENDIF
	ENDIF
ENDIF

RETURNF 表示テキスト

;─────────────────────────────────────── 
;●エルの淫語
;　使い方：%CALL_DIRTY_K7("Ｐ", "ぁ")%
;　覚書　：第二引数に"ぁ"をつけるとプレイヤーの入力した淫語に
;　小書き母音をつけて甘えボイス感を出す
;─────────────────────────────────────── 
@CALL_DIRTY_K7(部位, 小書き)
#FUNCTIONS
#DIMS 部位
#DIMS 小書き
#DIMS 表示テキスト

#DIM エル_淫語頻度
#DIMS エル_淫語Ｐ
#DIMS エル_淫語Ｖ
#DIMS エル_淫語Ｃ
#DIMS エル_淫語Ａ
#DIMS エル_淫語Ｂ

表示テキスト '= ""

;初期化
エル_淫語頻度 = 1
エル_淫語Ｐ '= "ペニス"
エル_淫語Ｖ '= "おまんこ"
エル_淫語Ｃ '= "おまんこ"
エル_淫語Ａ '= "アナル"
エル_淫語Ｂ '= "おっぱい"

IF 部位 == "Ｐ"
	IF エル_淫語頻度 != 2
		SELECTCASE RAND:3
			CASE 1
				表示テキスト '= エル_淫語Ｐ
			CASE 2
				表示テキスト '= エル_淫語Ｐ
			CASEELSE
				表示テキスト '= "おちんちん"
		ENDSELECT
	ELSE
		表示テキスト '= エル_淫語Ｐ
	ENDIF
ELSEIF 部位 == "Ｖ"
	IF エル_淫語頻度 != 2
		SELECTCASE RAND:3
			CASE 2
				表示テキスト '= エル_淫語Ｖ
			CASE 1
				表示テキスト '= "お腹"
			CASEELSE
				表示テキスト '= "なか"
		ENDSELECT
	ELSE
		表示テキスト '= エル_淫語Ｖ
	ENDIF
ELSEIF 部位 == "Ｃ"
	IF エル_淫語頻度 != 2
		SELECTCASE RAND:3
			CASE 2
				表示テキスト '= エル_淫語Ｃ
			CASE 1
				表示テキスト '= "クリ"
			CASEELSE
				表示テキスト '= "あそこ"
		ENDSELECT
	ELSE
		表示テキスト '= エル_淫語Ｃ
	ENDIF
ELSEIF 部位 == "Ａ"
	IF エル_淫語頻度 != 2
		SELECTCASE RAND:3
			CASE 1
				表示テキスト '= エル_淫語Ａ
			CASEELSE
				表示テキスト '= "お尻"
		ENDSELECT
	ELSE
		表示テキスト '= エル_淫語Ａ
	ENDIF
ELSEIF 部位 == "Ｂ"
	IF エル_淫語頻度 != 2
		SELECTCASE RAND:3
			CASE 1
				表示テキスト '= エル_淫語Ｂ
			CASEELSE
				表示テキスト '= "胸"
		ENDSELECT
	ELSE
		表示テキスト '= エル_淫語Ｂ
	ENDIF
ENDIF
RETURNF 表示テキスト

;─────────────────────────────────────── 
;●口上用の選択肢表示用関数
;　選択肢0～5に選択肢を入力。0番～5番まで1～6個の選択肢を作れる
;　結果は呼び出し後に分岐させて処理するためRESULTに返す
;　選択肢のない数字を入力したら選択肢に戻される
;─────────────────────────────────────── 
@KOJO_ASK_K7(選択肢:0, 選択肢:1, 選択肢:2, 選択肢:3, 選択肢:4, 選択肢:5)
#DIMS 選択肢, 6
#DIM SAVE_REDRAW
#DIM SAVE_COLOR
#DIM SAVE_LINE

;REDRAW状態を保存
CURRENTREDRAW
SAVE_REDRAW = RESULT
REDRAW 0

;現在の文字色を保存
GETCOLOR
SAVE_COLOR = RESULT
RESETCOLOR

;質問文の下に空行
PRINTL 

;現在行を保存（質問文の下の空行は残す）
SAVE_LINE = LINECOUNT

;選択肢表示（文字列が空でなければ）
FOR SAVE_REDRAW, 0, 6
	IF 選択肢:(SAVE_REDRAW) != ""
		PRINTBUTTON @"{SAVE_REDRAW, 2, RIGHT}[%選択肢:(SAVE_REDRAW)%]", SAVE_REDRAW
		PRINTL 
	ENDIF
NEXT

$INPUT_LOOP
;初期値0
INPUT 0

;指定外
IF RESULT < 0 || RESULT > 5
	;入力値の表示をクリア
	CLEARLINE 1
	GOTO INPUT_LOOP
;指定内
ELSE
	;選択肢と入力値の表示をクリアして選択結果のみ表示する
	;入力クリック直後の入力値表示代わりなのでWAITしない
	CLEARLINE LINECOUNT - SAVE_LINE
	SETCOLOR カラー_選択不可
	PRINTFORML ➡%選択肢:(RESULT)%
ENDIF

PRINTL 

;REDRAW状態と文字色を戻す
REDRAW SAVE_REDRAW
SETCOLOR SAVE_COLOR

RETURN RESULT

;●PRINTDATA文の中で口上カラーを無効にして出力
@PRINT_DESC_K7(ARG1)
#FUNCTIONS
#DIMS ARG1
#DIMS 表示テキスト
表示テキスト '= ""

PRINTFORMD %ARG1%
RETURNF 表示テキスト

;●対象が何回射精したか数えて数値で返す
@SUM_CUM_TO_COUNT_K7(ARG1)
#FUNCTION
#DIM ARG1
#DIM SUM 

SUM = 0

FOR COUNT, 0, CUM_SLOT_NUM
	SUM = SUM + CUM_TO_COUNT:(ARG1):COUNT
NEXT
RETURNF SUM

;●対象の衣装名を文字列で取得する
@GET_CLOTH_NAME_K7(対象)
#DIM 対象

FOR LOCAL, 0, CLOTH_PART_NUM
	CALL GET_CLOTH_NAME(LOCAL, CLOTH:(対象):LOCAL)
	エル_衣装:LOCAL '= RESULTS
NEXT
RETURN 0

;GET_CLOTH_NAME_K7とセットで使用する
@STR_CLOTH_K7(対象, 衣装部位, 状況描写オフ = 0)
#FUNCTIONS
#DIM 衣装部位
#DIM 状況描写オフ
#DIM 対象

SELECTCASE 衣装部位
	CASE 衣装部位_下着下
		IF 状況描写オフ == 0
			IF PALAM:対象:潤滑 >= PALAMLV:5
				LOCALS:0 = %SPLIT_RAND("ぐっしょりと濡れた/愛液をたっぷりと含んだ",1)%
			ELSEIF PALAM:対象:潤滑 >= PALAMLV:3
				LOCALS:0 = %SPLIT_RAND("愛液で濡れた/ねっとりと湿った",1)%
			ELSEIF PALAM:対象:潤滑 >= PALAMLV:2
				LOCALS:0 = %SPLIT_RAND("薄っすらと湿った/かすかに湿り気を帯びた",1)%
			ENDIF
		ENDIF 
		LOCALS:0 += エル_衣装:衣装部位_下着下
	CASEELSE
ENDSELECT
RETURNF LOCALS:0

;─────────────────────────────────────── 
;オノマトペ生成用のプリセット
; 第1引数は呼出す際のシチュエーション
; 第2引数 平仮名 = 0, カナ = 1
; 第3引数 ハート無し = 1　ハートマークをつけたくない時に
; @ONOMATOPE_K7()のメモ
; 第2 ~ 6引数は0~10で指定
; 濁音、促音、付帯音、端音、テンポ
;─────────────────────────────────────── 
@ONOMATOPE_PRESET_K7(種類,カナ,ハート無し)
#FUNCTIONS
#DIMS 種類
#DIM カナ
#DIM ハート無し


#DIMS 表示テキスト
表示テキスト '= ""

SELECTCASE 種類
	CASE "くちゅ音短"
		表示テキスト '= ONOMATOPE_K7(@"%SPLIT_RAND("くちゅ/ちゅっ/ぬちゅ",1)%/%SPLIT_RAND("くちゅ/ぬちゃ/ちゅぷ",1)%/%SPLIT_RAND("ちゅっ/じゅっ/ぬちゅ",1)%",5,8,1,1,0,カナ,ハート無し)
	CASE "くちゅ音長"
		表示テキスト '= ONOMATOPE_K7(@"%SPLIT_RAND("くちゅ/ちゅっ/ぬちゅ",1)%/%SPLIT_RAND("くちゅ/ぬちゃ/ちゅぷ",1)%/%SPLIT_RAND("ちゅっ/じゅっ/ぬちゅ",1)%",5,8,1,1,0,カナ,ハート無し)
		表示テキスト '= ARRANGE_ARG_K7(表示テキスト,"文中") ;音節の末尾を整形
		表示テキスト += ONOMATOPE_K7(@"%SPLIT_RAND("くちゅ/ちゅっ/ぬちゅ",1)%/%SPLIT_RAND("くちゅ/ぬちゃ/ちゅぷ",1)%/%SPLIT_RAND("ちゅく/くちゅ/ぬちゅ",1)%",5,3,1,5,0,カナ,ハート無し)
	CASE "足コキ_潤"
		表示テキスト '= ONOMATOPE_K7(@"%SPLIT_RAND("ぐじゅ/じゅっ/ぬちゅ",1)%/%SPLIT_RAND("しゅる/じゅる！/ぬちゅ",1)%/%SPLIT_RAND("ちゅる/じゅっ/ぬちゅ",1)%",5,8,5,1,1,カナ,ハート無し)
		表示テキスト '= ARRANGE_ARG_K7(表示テキスト,"文中") ;音節の末尾を整形
		表示テキスト += ONOMATOPE_K7(@"%SPLIT_RAND("ぐじゅ/じゅっ❤/ぬちゅ",1)%/%SPLIT_RAND("ぐじゅ！/じゅる❤/ぬちゅ",1)%/%SPLIT_RAND("ちゅる❤/じゅっ/ぬちゅ❤",1)%",5,3,5,5,0,カナ,ハート無し)
	CASE "髪コキ_潤"
		表示テキスト '= ONOMATOPE_K7(@"%SPLIT_RAND("しゅる/しゅっ/しゅる",1)%/%SPLIT_RAND("しゅる！/じゅる❤/ぬちゅ/",1)%/%SPLIT_RAND("しゅっ/じゅっ/しゅる❤/",1)%",2,5,7,1,1,カナ,ハート無し)
		表示テキスト '= ARRANGE_ARG_K7(表示テキスト,"文中") ;音節の末尾を整形
		表示テキスト += ONOMATOPE_K7(@"%SPLIT_RAND("しゅる/じゅっ❤/ぬちゅ",1)%/%SPLIT_RAND("じゅる❤/しゅる/ぬちゅ",1)%/%SPLIT_RAND("しゅる❤/じゅっ/ぬちゅ❤",1)%",2,5,7,1,1,カナ,ハート無し)
	CASEELSE
ENDSELECT

RETURNF 表示テキスト

;─────────────────────────────────────── 
;機械的に生成した文字列を接続する際、文として自然になるように整形して返す
; 第二引数は"文中"か"文末"を指定(未実装)
;─────────────────────────────────────── 
@ARRANGE_ARG_K7(文字列,位置)
#FUNCTIONS 
#DIMS 文字列
#DIMS 位置
;末尾が以下の文字に該当する場合は処理しない
#DIMS CONST 区切り文字 = "…、。！❤♥♪"

STRLENFORMU %文字列%
LOCAL:0 = RESULT
IF STRFINDU(区切り文字, SUBSTRINGU(文字列, LOCAL:0 - 1, LOCAL:0) ) == -1
	文字列 '= 文字列 + "、"
ENDIF

RETURNF 文字列
;─────────────────────────────────────── 
;与えられた4文字までの文字列をもとにオノマトペを生成し文字列を返す
; ・文字列は平仮名で指定
; ・文字列は"/"で区切り3候補まで指定可
; ・４文字目は記号指定にのみ使用(！❤♥♪)
; ・第2 ~ 6引数は0~10で指定
; ・濁音頻度	1文字目が清音の場合どの程度濁音に置換するか
; ・促音頻度	"っ"をどの程度付加するか
; ・付帯音頻度	3文字が"る"の時に音を足す。びゅるるっ
; ・端音頻度	3文字目をどの程度の頻度で出力するか
; ・テンポ　通常 = 0,2個以上の3点リーダを付加しない = 1
; ・カナ 平仮名 = 0 カタカナ = 1
; ・ハート無し = 1 でハートマークを追加しない
;─────────────────────────────────────── 
@ONOMATOPE_K7(文字列, 濁音頻度, 促音頻度, 付帯音頻度, 端音頻度, テンポ, カナ, ハート無し = 0)
#FUNCTIONS
#DIMS 文字列
#DIM テンポ
#DIM カナ
#DIM ハート無し

#DIMS 表示テキスト, 2
#DIM 表示テキスト文字数
#DIMS 基本音, 3 
#DIM 候補数
#DIMS 選択基本音
#DIM 濁音頻度
#DIM 促音頻度
#DIM 付帯音頻度
#DIM 端音頻度

#DIM 子音
#DIM 促音フラグ
#DIM 濁音フラグ
#DIM 端音フラグ

#DIMS CHAR, 4
#DIM  CNT_A
#DIM  CNT_B

#DIMS CONST 濁音変換候補 = "くしちぴ"
#DIMS CONST 濁音変換対応文字列 = "ぐじぢび"
#DIMS CONST 拗音表 = "ゃゅょ"
#DIMS CONST 半濁音表, 3 = "ぱ","ぷ","ぽ"
#DIMS CONST 付帯音表, 3 = "る","るっ","るぅ"
#DIMS CONST 記号表 = "！❤♥♪"

候補数 = 0
VARSET 表示テキスト, ""

;生成のベースとする基本音を配列に格納
SPLIT 文字列, "/", 基本音
FOR CNT_A, 0, 3
	IF 基本音:CNT_A == ""
		ARRAYREMOVE 基本音, CNT_A, 1
	ENDIF
NEXT
FOR CNT_A, 0, 3
	SIF 基本音:CNT_A != ""
		候補数 += 1
NEXT


FOR CNT_A, 0, 候補数
	VARSET CHAR:0, ""
	選択基本音 '= 基本音:CNT_A 
	促音フラグ = 0
	濁音フラグ = 0
	端音フラグ = 0

	FOR CNT_B, 0, STRLENSU(選択基本音)
		CHAR:(CNT_B) '= SUBSTRINGU(選択基本音, CNT_B, 1) 
	NEXT

	;1文字目の処理
	;特定の文字のみ確率で濁音に変換する
	LOCAL = STRFINDU(濁音変換候補, CHAR:0) 
	IF RAND:10 <　濁音頻度 && LOCAL != -1
		CHAR:0 '= CHARATU(濁音変換対応文字列,LOCAL)
		SIF STRFINDU(濁音変換対応文字列, CHAR:0) != -1
			濁音フラグ = 1
	ENDIF
	表示テキスト '= 表示テキスト + CHAR:0


	表示テキスト '= 表示テキスト + CHAR:1
	;基本音の2音目が拗音（ゃ、ゅ、ょ）以外の場合;確率で2音目の後に促音（っ）を付加
	IF STRFINDU(拗音表, CHAR:1) != -1 && FINDELEMENT(付帯音表, CHAR:1) != -1 
		IF RAND:10 < 促音頻度
			表示テキスト '= 表示テキスト + "っ"
			促音フラグ = 1
		ENDIF
	ELSE
		;例えば「ちゅぱ」と「くちゅ」では3文字目の処理を変えないと不自然になるのでこのフラグで制御する
		端音フラグ = 1
	ENDIF

	;３音目の処理
	;確率で３文字目を消去
	;子音をランダムでずらす。ex.ちゅぷ -> ちゅぱ or ちゅぽ
	{
		SELECTCASE IFRAND(
			"99",1,
			"D99,1", 端音フラグ == 1,
			"D99,1",RAND:10 < (端音頻度 && 濁音フラグ != 1) && 端音フラグ != 1
			)
	}
		CASE 1
			IF FINDELEMENT(半濁音表, CHAR:2) != -1
				子音 = FINDELEMENT(半濁音表, CHAR:2)
				IF 子音 != -1 && RAND:3 
					IF 子音　== 1
						IF RAND:3 
							子音 += 1
						ELSEIF RAND:2
							子音 -= 1
						ENDIF
					ELSEIF 子音 == 0
						SIF RAND:3 
							子音 += 1
					ELSEIF 子音 != 0
						SIF RAND:3 
							子音 -= 1
					ENDIF
				ENDIF
				CHAR:2 '= 半濁音表:子音 
			ENDIF
			表示テキスト '= 表示テキスト + CHAR:2
		CASEELSE
	ENDSELECT 

	;3文字目以降に付帯する音の処理(る、るる)
	IF FINDELEMENT(付帯音表, CHAR:2) != -1 && 促音フラグ == 0  ;ちゅっるるのような音は不自然なので出現しないように
		IF RAND:10 < 付帯音頻度
			表示テキスト '= 表示テキスト + SPLIT_RAND(@"%付帯音表:0%/%付帯音表:1%/%付帯音表:2%",1)
		ENDIF
	ENDIF
	;確率で末尾に促音を負荷
	IF RAND:10 < 促音頻度 && 促音フラグ == 0
		表示テキスト '= 表示テキスト + SPLIT_RAND("っ/っ/っ/っ/っっ",1)
		促音フラグ = 1
	ENDIF

	;4文字目が存在しない場合、句点か三点リーダを付加
	IF CHAR:3 == ""
		;テンポに応じて三点リーダの量を調整する
		IF テンポ == 0;通常
			表示テキスト '= 表示テキスト + SPLIT_RAND("、/、/、/…/…/……/……/……/……………",1)
		ELSE ;早い(二個以上の三点リーダを打たない)
			表示テキスト '= 表示テキスト + SPLIT_RAND("/、/、/…/…/…/……/……",1)
		ENDIF
	ENDIF 
	;4文字目の処理
	;特定の記号が指定さている場合は0～3個つける
	IF  CHAR:3 != ""
		IF (CHAR:3 == "❤" || CHAR:3 == "♥") && ハート無し != 1
			表示テキスト '= 表示テキスト + SPLIT_RAND("、/、/❤/❤/❤/…❤/……❤/……❤/❤❤/…❤❤/……❤❤/❤❤❤",1)
		ELSEIF FINDELEMENT(記号表, CHAR:3) != -1 
			表示テキスト '= 表示テキスト + SPLIT_RAND(@"、/、/%CHAR:3%/%CHAR:3%/%CHAR:3%%CHAR:3%",1)
		ENDIF
		IF CNT_A:0 < 候補数 - 1 
			IF テンポ == 0;通常
				表示テキスト '= 表示テキスト + SPLIT_RAND("/…/……/……/…………",1)
			ELSE
				表示テキスト '= 表示テキスト + SPLIT_RAND("//…/…/…/……/……",1)
			ENDIF

		ENDIF
	ENDIF
	;音節の末尾に応じた処理
	STRLENFORMU %表示テキスト%
	表示テキスト文字数 = RESULT
	IF SUBSTRINGU(表示テキスト, 表示テキスト文字数 - 1, 表示テキスト文字数) == "っ"
		表示テキスト '= 表示テキスト + "、"
	ENDIF
NEXT

;生成文字列の末尾が句点なら除去
STRLENFORMU %表示テキスト%
表示テキスト文字数 = RESULT
IF SUBSTRINGU(表示テキスト,  表示テキスト文字数 - 1, 表示テキスト文字数) == "、"
	表示テキスト '= SUBSTRINGU(表示テキスト,0 , 表示テキスト文字数 - 1)
ENDIF

IF カナ == 1
	表示テキスト = %TOKANA_K7(表示テキスト)%
ENDIF

RETURNF 表示テキスト


;●平仮名カナ変換
@TOKANA_K7(ARGS:0)
#FUNCTIONS 
#DIMS CONST 平仮名対応表 	= "ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろゎわゐゑをん"
#DIMS CONST カナ対応表	= "ァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモャヤュユョヨラリルレロヮワヰヱヲン"

#DIM CNT_A	
#DIM IDX
#DIMS 対象文字　
#DIMS 変換後文字列

対象文字 '= ""
変換後文字列 '= "" 

FOR CNT_A, 0, STRLENSU(ARGS:0)
	対象文字 '= SUBSTRINGU(ARGS:0, CNT_A, 1)
	IDX = STRFINDU(平仮名対応表, 対象文字)
	IF IDX != -1 
		対象文字 '= CHARATU(カナ対応表, IDX)
	ENDIF
	変換後文字列 '= 変換後文字列 + 対象文字
NEXT
変換後文字列 '= 変換後文字列

RETURNF 変換後文字列

