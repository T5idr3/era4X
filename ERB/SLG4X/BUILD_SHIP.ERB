;--------------------------
; 独立モジュール建造
;--------------------------
; 建設
@CREATE_SPACE_MODULE(_BUILDPOSID)
#DIM _BUILDPOSID
#DIM _COUNTER
#DIM _INPUT_VALUE
#DIM CONST _BUILDINGS = 下級汎用独立モジュール
#DIM CONST _BUILDING_TYPE_COUNT = 1


FOR LOCAL, 0, MAX_SPACE_BUILDING
    SIF SPACE_BUILD_POSITION:LOCAL != -1
        CONTINUE
    PRINTL
    DRAWLINE
    PRINTL 　どの建造物を建造しますか？
    DRAWLINE
    PRINTL
    FOR _COUNTER, 0, _BUILDING_TYPE_COUNT
        TRYCALLFORM GET_SHIP_NAME_{_BUILDINGS}
        PRINT 　
        PRINTBUTTON @"[%RESULTS%]", _COUNTER
        PRINTL
    NEXT
    FOR _COUNTER, 0, MAX_SHIP
        SIF IS_SPACE_BUILDING_UPDATABLE(_COUNTER) == 0
            CONTINUE
        PRINT 　
        PRINTBUTTON @"[%SHIP_NAME:_COUNTER%]の更新", _COUNTER + _BUILDING_TYPE_COUNT
        PRINTL
    NEXT
    PRINT 　
    PRINTBUTTON "[キャンセル]", _BUILDING_TYPE_COUNT + MAX_SHIP
    $INPUT_LOOP
    INPUT
    _INPUT_VALUE = RESULT
    IF RESULT >= 0 && RESULT < _BUILDING_TYPE_COUNT
        SELECTCASE RESULT
            CASE 0
                SPACE_BUILD_BUILDING_TARGET_ID:LOCAL = 下級汎用独立モジュール
        ENDSELECT
    ; キャンセル
    ELSEIF RESULT == _BUILDING_TYPE_COUNT + MAX_SHIP
        RETURN
    ELSEIF INRANGE(_INPUT_VALUE, 0, _BUILDING_TYPE_COUNT + MAX_SHIP) && IS_SPACE_BUILDING_UPDATABLE(_INPUT_VALUE - _BUILDING_TYPE_COUNT)
        CALL UPDATE_SPACE_BUILDING(_INPUT_VALUE - _BUILDING_TYPE_COUNT)
        RETURN
    ELSE
        CLEARLINE 1
        GOTO INPUT_LOOP
    ENDIF
    FOR LOCAL:1, 0, ITEM_LENGTH
        SPACE_BUILD_RESOURCES:LOCAL:(LOCAL:1) = 0
    NEXT
    SPACE_BUILD_POSITION:LOCAL = _BUILDPOSID
    CALL CONTINUE_SPACE_BUILD(LOCAL)
    BREAK
NEXT

@IS_SPACE_BUILDING_UPDATABLE(_SHIP_ID)
#FUNCTION
#DIM _SHIP_ID

SIF SHIP_COUNTRY:_SHIP_ID != 国家ID_プレイヤー
    RETURNF 0
SIF SHIP_POSITION:_SHIP_ID != CHARACTER_POSITION:MASTER
    RETURNF 0
SIF SHIP_CATEGORY:_SHIP_ID != 建造物
    RETURNF 0

; 建築再開
@CONTINUE_SPACE_BUILD(_ID)
#DIM _ID
#DIM _USE_RESOURCES, ITEM_LENGTH
#DIM _IS_COMPLETE
#DIM _REMOVE_RESOURCE_NUM

VARSET _USE_RESOURCES, 0
CALL GET_SHIP_RESOURCE_145(_USE_RESOURCES)

$INPUT_LOOP

_IS_COMPLETE = 1

PRINTL
DRAWLINE
PRINTL 　現在の進捗
DRAWLINE
PRINTL
FOR LOCAL, 0, ITEM_LENGTH
    CALL GET_ITEM_NAME(LOCAL)
    SIF _USE_RESOURCES:LOCAL == 0
        CONTINUE
    IF _USE_RESOURCES:LOCAL == SPACE_BUILD_RESOURCES:_ID:LOCAL
        SETCOLOR 0X99FF99
    ELSE
        _IS_COMPLETE = 0
    ENDIF
    PRINTFORML 　%RESULTS, 18, LEFT%: {SPACE_BUILD_RESOURCES:_ID:LOCAL, 5, LEFT} / {_USE_RESOURCES:LOCAL, 5, LEFT}
    RESETCOLOR
NEXT
PRINTL
DRAWLINE
PRINT 　
IF _IS_COMPLETE
    PRINTBUTTON "[建造開始]", 0
ELSE
    PRINTBUTTON "[資材の納入]", 1
ENDIF
PRINTL
PRINT 　
PRINTBUTTON "[キャンセル]", 2
PRINTL

INPUT
IF RESULT == 0 && _IS_COMPLETE
    CALL INIT_PRESET_SHIP(国家ID_プレイヤー, SPACE_BUILD_POSITION:_ID, 下級汎用独立モジュール, "下級汎用独立モジュール", 下級汎用独立モジュール)
    SPACE_BUILD_POSITION:_ID = -1
    FOR LOCAL, 0, ITEM_LENGTH
        SPACE_BUILD_RESOURCES:_ID:LOCAL = 0
    NEXT
    SPACE_BUILD_BUILDING_TARGET_ID:_ID = -1
    PRINTW ……
    PRINTW …………
    PRINTW ………………
    PRINTW 建造完了しました
    CALL UPDATE_SPACE_BUILDING(RESULT)
    RETURN
ELSEIF RESULT == 1 && _IS_COMPLETE == 0
    FOR LOCAL, 0, ITEM_LENGTH
        SIF _USE_RESOURCES:LOCAL == 0
            CONTINUE
        SIF GET_RESOURCE_NUM(SPACE_BUILD_POSITION:_ID, 国家ID_プレイヤー, LOCAL) == 0
            CONTINUE
        _REMOVE_RESOURCE_NUM = _USE_RESOURCES:LOCAL - SPACE_BUILD_RESOURCES:_ID:LOCAL
        _REMOVE_RESOURCE_NUM -= REMOVE_RESOURCE(SPACE_BUILD_POSITION:_ID, 国家ID_プレイヤー, LOCAL, _REMOVE_RESOURCE_NUM)
        SPACE_BUILD_RESOURCES:_ID:LOCAL += _REMOVE_RESOURCE_NUM
    NEXT
ELSEIF RESULT == 2
    RETURN
ENDIF
GOTO INPUT_LOOP

;-------------------------
; 指定座標で建造物が建造できるか判定する
;-------------------------
@IS_ABLE_BUILD(_POSITION_ID)
#FUNCTION
#DIM _POSITION_ID
#DIM _ENABLE_BUILD
#DIM _STAR_ID
#DIM _PORT_ID

_ENABLE_BUILD = 0

FOR LOCAL, 0, MAX_SHIP
    SIF SHIP_COUNTRY:LOCAL != 国家ID_プレイヤー
        CONTINUE
    SIF SHIP_POSITION:LOCAL != _POSITION_ID
        CONTINUE
    SIF SHIP_CATEGORY:LOCAL != 作業船
        CONTINUE
    _ENABLE_BUILD = 1
NEXT
FOR _STAR_ID, 0, MAX_STAR
    SIF STAR_OWNER:_STAR_ID != 国家ID_プレイヤー
        CONTINUE
    RETURNF 1
NEXT
FOR _PORT_ID, 0, MAX_PORT
    SIF PORT_OWNER:_PORT_ID != 国家ID_プレイヤー
        CONTINUE
    SIF PORT_COMPLETE:_PORT_ID != 1
        CONTINUE
    SIF PORT_POSITION_ID:_PORT_ID != CHARACTER_POSITION
        CONTINUE
    FINDELEMENT STAR_POSITION_ID, _POSITION_ID
    SIF RESULT != -1
        CONTINUE
    RETURNF 1
NEXT

RETURNF 0

;-------------------------
; 指定された宇宙の建造物をアップデートする
;-------------------------
@UPDATE_SPACE_BUILDING(_SHIP_ID)
#DIM _SHIP_ID
#DIM _COUNTER
#DIM _STATUS, SHIP_STATUS_LENGTH
#DIM _WEAPON_STATUS, STATUS_LENGTH
#DIM _INPUT_VALUE
#DIM _SELECTED_EQUIOP
#DIMS _WEAPON_NAME
#DIM _CATEGORY

TRYCALLFORM GET_SHIP_STATUS_{SHIP_MODEL:_SHIP_ID}(_STATUS)

DRAWLINE
PRINTFORML 　装備更新 - %SHIP_NAME:_SHIP_ID%
DRAWLINE
PRINTL
PRINTL ■ 主砲
FOR _COUNTER, 0, _STATUS:SHIP_MAIN_WEAPON_SLOT
    TRYCALLFORM GET_MAIN_WEAPON_NAME_{SHIP_EQUIP:主砲:_COUNTER:_SHIP_ID}
    _WEAPON_NAME = %RESULTS%
    PRINT 　
    TRYCALLFORM GET_MAIN_WEAPON_STATUS_{SHIP_EQUIP:主砲:_COUNTER:_SHIP_ID}(_WEAPON_STATUS)
    PRINTBUTTON @"[スロット{_COUNTER + 1}] %_WEAPON_NAME, 24, LEFT% %GET_MAIN_WEAPON_STATUS_STR(_WEAPON_STATUS)%", _COUNTER
    PRINTL
NEXT
PRINTL
PRINTL ■ 副砲
FOR _COUNTER, 0, _STATUS:SHIP_SUB_WEAPON_SLOT
    TRYCALLFORM GET_SUB_WEAPON_NAME_{SHIP_EQUIP:副砲:_COUNTER:_SHIP_ID}
    _WEAPON_NAME = %RESULTS%
    PRINT 　
    TRYCALLFORM GET_SUB_WEAPON_STATUS_{SHIP_EQUIP:副砲:_COUNTER:_SHIP_ID}(_WEAPON_STATUS)
    PRINTBUTTON @"[スロット{_COUNTER + 1}] %_WEAPON_NAME, 24, LEFT% %GET_SUB_WEAPON_STATUS_STR(_WEAPON_STATUS)%", _COUNTER + MAX_SLOT
    PRINTL
NEXT
PRINTL
PRINTL ■ シールド
FOR _COUNTER, 0, _STATUS:SHIP_SIELD_SLOT
    TRYCALLFORM GET_SIELD_NAME_{SHIP_EQUIP:シールド:_COUNTER:_SHIP_ID}
    _WEAPON_NAME = %RESULTS%
    PRINT 　
    TRYCALLFORM GET_SIELD_STATUS_{SHIP_EQUIP:シールド:_COUNTER:_SHIP_ID}(_WEAPON_STATUS)
    PRINTBUTTON @"[スロット{_COUNTER + 1}] %_WEAPON_NAME, 24, LEFT% %GET_SIELD_STATUS_STR(_WEAPON_STATUS)%", _COUNTER + MAX_SLOT * 2
    PRINTL
NEXT
PRINTL
PRINTL ■ 装甲
FOR _COUNTER, 0, _STATUS:SHIP_ARMOR_SLOT
    TRYCALLFORM GET_ARMOR_NAME_{SHIP_EQUIP:装甲:_COUNTER:_SHIP_ID}
    _WEAPON_NAME = %RESULTS%
    PRINT 　
    TRYCALLFORM GET_ARMOR_STATUS_{SHIP_EQUIP:装甲:_COUNTER:_SHIP_ID}(_WEAPON_STATUS)
    PRINTBUTTON @"[スロット{_COUNTER + 1}] %_WEAPON_NAME, 24, LEFT% %GET_ARMOR_STATUS_STR(_WEAPON_STATUS)%", _COUNTER + MAX_SLOT * 3
    PRINTL
NEXT
PRINTL
PRINTL ■ オプション
FOR _COUNTER, 0, _STATUS:SHIP_OPTION_SLOT
    TRYCALLFORM GET_OPTION_NAME_{SHIP_EQUIP:オプション:_COUNTER:_SHIP_ID}
    _WEAPON_NAME = %RESULTS%
    PRINT 　
    TRYCALLFORM MODULE_DESCRIPTION_{SHIP_EQUIP:オプション:_COUNTER:_SHIP_ID}
    IF RESULT == 1
        PRINTBUTTON @"[スロット{_COUNTER + 1}] %_WEAPON_NAME, 24, LEFT% %RESULTS%", _COUNTER + MAX_SLOT * 4
    ELSE
        PRINTBUTTON @"[スロット{_COUNTER + 1}] %_WEAPON_NAME, 24, LEFT%", _COUNTER + MAX_SLOT * 4
    ENDIF
    PRINTL
NEXT
PRINTL 　
PRINTBUTTON "[キャンセル]", 9999
PRINTL 

$INPUT_LOOP
INPUT
_INPUT_VALUE = RESULT
IF INRANGE(_INPUT_VALUE, 0, MAX_SLOT - 1)
    TRYCALLFORM GET_MAIN_WEAPON_STATUS_{_INPUT_VALUE}(_WEAPON_STATUS)
    _CATEGORY = 主砲
ELSEIF INRANGE(_INPUT_VALUE, MAX_SLOT, MAX_SLOT * 2 - 1)
    _INPUT_VALUE = _INPUT_VALUE - MAX_SLOT
    TRYCALLFORM GET_SUB_WEAPON_STATUS_{_INPUT_VALUE}(_WEAPON_STATUS)
    _CATEGORY = 副砲
ELSEIF INRANGE(_INPUT_VALUE, MAX_SLOT * 2, MAX_SLOT * 3 - 1)
    _INPUT_VALUE = _INPUT_VALUE - MAX_SLOT * 2
    TRYCALLFORM GET_SIELD_STATUS_{_INPUT_VALUE}(_WEAPON_STATUS)
    _CATEGORY = シールド
ELSEIF INRANGE(_INPUT_VALUE, MAX_SLOT * 3, MAX_SLOT * 4 - 1)
    _INPUT_VALUE = _INPUT_VALUE - MAX_SLOT * 3
    TRYCALLFORM GET_ARMOR_STATUS_{_INPUT_VALUE}(_WEAPON_STATUS)
    _CATEGORY = 装甲
ELSEIF INRANGE(_INPUT_VALUE, MAX_SLOT * 4, MAX_SLOT * 5 - 1)
    _INPUT_VALUE = _INPUT_VALUE - MAX_SLOT * 4
    TRYCALLFORM GET_OPTION_STATUS_{_INPUT_VALUE}(_WEAPON_STATUS)
    _CATEGORY = オプション
ELSEIF RESULT == 9999
    RETURN
ENDIF
CALL SELECT_BUILDING_MODUE(_WEAPON_STATUS, _INPUT_VALUE, _SHIP_ID, _CATEGORY)
RESTART


;-------------------------
; 装備の更新
;-------------------------
@SELECT_BUILDING_MODUE(_WEAPON_STATUS, _SLOT_ID, _SHIP_ID, _CATEGORY)
#DIM REF _WEAPON_STATUS
#DIM _SLOT_ID
#DIM _SHIP_ID
#DIM _CATEGORY
#DIM _WEAPON_ID
#DIMS _WEAPON_NAME
#DIM _INPUT_VALUE
#DIM _NEW_WEAPON_STATUS, STATUS_LENGTH
#DIM CONST _BUFFER = 1000

PRINTL
DRAWLINE
PRINTL 装備選択 - 変更後の装備を選択してください
DRAWLINE
PRINTL

SELECTCASE _CATEGORY
    CASE 主砲
        FOR _WEAPON_ID, 216, 230
            TRYCALLFORM IS_MODULE_MAIN_WEAPON_{_WEAPON_ID}
            SIF RESULT != 1
                CONTINUE
            TRYCALLFORM GET_MAIN_WEAPON_NAME_{_WEAPON_ID}
            _WEAPON_NAME = %RESULTS%
            TRYCALLFORM GET_MAIN_WEAPON_STATUS_{_WEAPON_ID}(_NEW_WEAPON_STATUS)
            PRINT 　
            PRINTBUTTON @"%_WEAPON_NAME, 24, LEFT% %GET_MAIN_WEAPON_STATUS_STR(_NEW_WEAPON_STATUS)%", _WEAPON_ID
            PRINTL
        NEXT
    CASE 副砲
        FOR _WEAPON_ID, 100, 120
            TRYCALLFORM IS_MODULE_SUB_WEAPON_{_WEAPON_ID}
            SIF RESULT != 1
                CONTINUE
            TRYCALLFORM GET_SUB_WEAPON_NAME_{_WEAPON_ID}
            _WEAPON_NAME = %RESULTS%
            TRYCALLFORM GET_SUB_WEAPON_STATUS_{_WEAPON_ID}(_NEW_WEAPON_STATUS)
            PRINT 　
            PRINTBUTTON @"%_WEAPON_NAME, 24, LEFT% %GET_SUB_WEAPON_STATUS_STR(_NEW_WEAPON_STATUS)%", _WEAPON_ID
            PRINTL
        NEXT
    CASE シールド
        FOR _WEAPON_ID, 35, 55
            TRYCALLFORM IS_MODULE_SIELD_{_WEAPON_ID}
            SIF RESULT != 1
                CONTINUE
            TRYCALLFORM GET_SIELD_NAME_{_WEAPON_ID}
            _WEAPON_NAME = %RESULTS%
            TRYCALLFORM GET_SIELD_STATUS_{_WEAPON_ID}(_NEW_WEAPON_STATUS)
            PRINT 　
            PRINTBUTTON @"%_WEAPON_NAME, 24, LEFT% %GET_SIELD_STATUS_STR(_NEW_WEAPON_STATUS)%", _WEAPON_ID
            PRINTL
        NEXT
    CASE 装甲
        FOR _WEAPON_ID, 40, 60
            TRYCALLFORM IS_MODULE_ARMOR_{_WEAPON_ID}
            SIF RESULT != 1
                CONTINUE
            TRYCALLFORM GET_ARMOR_NAME_{_WEAPON_ID}
            _WEAPON_NAME = %RESULTS%
            TRYCALLFORM GET_ARMOR_STATUS_{_WEAPON_ID}(_NEW_WEAPON_STATUS)
            PRINT 　
            PRINTBUTTON @"%_WEAPON_NAME, 24, LEFT% %GET_ARMOR_STATUS_STR(_NEW_WEAPON_STATUS)%", _WEAPON_ID
            PRINTL
        NEXT
    CASE オプション
        FOR _WEAPON_ID, 10, 30
            ; なぜこいつだけTRYCALLFORMがおかしくなるのか
            TRYCCALLFORM IS_MODULE_OPTION_{_WEAPON_ID}
                TRYCALLFORM GET_OPTION_NAME_{_WEAPON_ID}
                _WEAPON_NAME = %RESULTS%
                TRYCALLFORM GET_OPTION_STATUS_{_WEAPON_ID}(_NEW_WEAPON_STATUS)
                TRYCALLFORM MODULE_DESCRIPTION_{_WEAPON_ID}
                PRINT 　
                PRINTBUTTON @"%_WEAPON_NAME, 24, LEFT% %RESULTS%", _WEAPON_ID
                PRINTL
            CATCH
                CONTINUE
            ENDCATCH
        NEXT
ENDSELECT
PRINT 　
PRINTBUTTON "キャンセル", 9999
PRINTL

INPUT
_INPUT_VALUE = RESULT
SELECTCASE _CATEGORY
    CASE 主砲
        TRYCALLFORM IS_MODULE_MAIN_WEAPON_{_INPUT_VALUE}
    CASE 副砲
        TRYCALLFORM IS_MODULE_SUB_WEAPON_{_INPUT_VALUE}
    CASE シールド
        TRYCALLFORM IS_MODULE_SIELD_{_INPUT_VALUE}
    CASE 装甲
        TRYCALLFORM IS_MODULE_ARMOR_{_INPUT_VALUE}
    CASE オプション
        TRYCALLFORM IS_MODULE_OPTION_{_INPUT_VALUE}
    CASEELSE
        RETURN 0
ENDSELECT
SIF RESULT != 1
    RETURN 0
CALL SPEC_DISPLAY(_CATEGORY, _SHIP_ID, 国家ID_プレイヤー, SHIP_EQUIP:_CATEGORY:_SLOT_ID:_SHIP_ID, _SLOT_ID, _NEW_WEAPON_STATUS)
PRINTL こちらでよろしいですか?
CALL ASK_YN
IF RESULT == 0
    SHIP_EQUIP:_CATEGORY:_SLOT_ID:_SHIP_ID = _INPUT_VALUE
    RETURN 1
ELSE
    RESTART
ENDIF


;-------------------------
; 指定された武装のスペック文字列を返却
;-------------------------
@GET_MAIN_WEAPON_STATUS_STR(_WEAPON_STATUS)
#FUNCTIONS
#DIM REF _WEAPON_STATUS
#DIMS _WEAPON_STATUS_STR

_WEAPON_STATUS_STR = ダメージ: {_WEAPON_STATUS:DAMAGE}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% 射撃レート: {_WEAPON_STATUS:FIRE_RATE}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% 命中率: {_WEAPON_STATUS:HIT_RATE}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% 射程: {_WEAPON_STATUS:FIRE_RANGE}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% 予測DPS: {_WEAPON_STATUS:DAMAGE * _WEAPON_STATUS:FIRE_RATE * _WEAPON_STATUS:HIT_RATE / 100}
RETURNF _WEAPON_STATUS_STR

@GET_SUB_WEAPON_STATUS_STR(_WEAPON_STATUS)
#FUNCTIONS
#DIM REF _WEAPON_STATUS
#DIMS _WEAPON_STATUS_STR

_WEAPON_STATUS_STR = ダメージ: {_WEAPON_STATUS:DAMAGE}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% 射撃レート: {_WEAPON_STATUS:FIRE_RATE}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% 命中率: {_WEAPON_STATUS:HIT_RATE}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% 射程: {_WEAPON_STATUS:FIRE_RANGE}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% 予測DPS: {_WEAPON_STATUS:DAMAGE * _WEAPON_STATUS:FIRE_RATE * _WEAPON_STATUS:HIT_RATE / 100}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% 対空火力: {_WEAPON_STATUS:ANTI_AIR}
RETURNF _WEAPON_STATUS_STR

@GET_SIELD_STATUS_STR(_WEAPON_STATUS)
#FUNCTIONS
#DIM REF _WEAPON_STATUS
#DIMS _WEAPON_STATUS_STR

_WEAPON_STATUS_STR = シールド値: {_WEAPON_STATUS:SIELD}
_WEAPON_STATUS_STR = %_WEAPON_STATUS_STR% シールド自然回復: {_WEAPON_STATUS:SIELD_RECOVER}
RETURNF _WEAPON_STATUS_STR

@GET_ARMOR_STATUS_STR(_WEAPON_STATUS)
#FUNCTIONS
#DIM REF _WEAPON_STATUS
#DIMS _WEAPON_STATUS_STR

_WEAPON_STATUS_STR = 装甲値: {_WEAPON_STATUS:ARMOR}
RETURNF _WEAPON_STATUS_STR