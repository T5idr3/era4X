;------------------------
;交易
;------------------------
@SET_TRADE_RULE(SHIP_ID)
#DIM TRADE_TO_POS
#DIM ITEM_ID, 2
#DIM SHIP_ID

TRADE_TO_POS = -1
ITEM_ID:0 = -1
ITEM_ID:1 = -1

IF SHIP_CATEGORY:SHIP_ID != 輸送船
	PRINTFORML 輸送船でないとこの任務には付けません
	RETURN -1
ENDIF

$TRADE_LOOP

DRAWLINE
PRINTL ◆交易ルール設定
PRINTL 交易は出発地点でアイテムを購入し、目的地で売却する。その後目的地でアイテムを購入し、出発地点に戻り売却する
DRAWLINE
CALL ID2POS(CHARACTER_POSITION)
PRINTL 出発地点
PRINTFORML 　セクター＃{RESULT:0}, X: {RESULT:1}, Y: {RESULT:2}
PRINTL
PRINTL 出発地点で買い付けるアイテム
IF ITEM_ID:0 == -1
	PRINTFORM 　%NO_ITEM, 20, LEFT%
ELSE
	CALL GET_ITEM_NAME(ITEM_ID)
	PRINTFORM 　%RESULTS, 20, LEFT%
ENDIF
PRINTBUTTON "[0] 変更", 0
PRINTL
PRINTL
PRINTL
PRINTL 目的地点
IF TRADE_TO_POS == -1
	PRINTFORM %"　未設定", 20, LEFT%
ELSE
	CALL ID2POS(TRADE_TO_POS)
	PRINTFORM 　セクター＃{RESULT:0}, X: {RESULT:1}, Y: {RESULT:2} 
ENDIF
PRINTBUTTON "[1] 変更", 1
PRINTL
PRINTL
PRINTL 目的地点で買い付けるアイテム
IF ITEM_ID:1 == -1
	PRINTFORM 　%NO_ITEM, 20, LEFT%
ELSE
	CALL GET_ITEM_NAME(ITEM_ID:1)
	PRINTFORM 　%RESULTS, 20, LEFT%
ENDIF
PRINTBUTTON "[2] 変更", 2
PRINTL
PRINTL
PRINTL
PRINTBUTTON "[3] 決定", 3
PRINT  
PRINTBUTTON "[4] 戻る", 4

INPUT
IF RESULT == 0
	CALL SELECT_ITEM_LIST
	SIF RESULT != -1
		ITEM_ID:0 = RESULT
	GOTO TRADE_LOOP
ELSEIF RESULT == 1
	CALL SELECT_POS_FROM_MAP
	SIF RESULT != -1
		TRADE_TO_POS = RESULT
	GOTO TRADE_LOOP
ELSEIF RESULT == 2
	CALL SELECT_ITEM_LIST
	SIF RESULT != -1
		ITEM_ID:1 = RESULT
	GOTO TRADE_LOOP
ELSEIF RESULT == 3
	IF TRADE_TO_POS == -1
		PRINTW 交易先が設定されていません
		GOTO TRADE_LOOP
	ELSEIF ITEM_ID:0 == -1
		PRINTW 出発地点で買い付ける品物が設定されていません
		GOTO TRADE_LOOP
	ELSEIF ITEM_ID:1 == -1
		PRINTW 到着地点で買い付ける品物が設定されていません
		GOTO TRADE_LOOP
	ENDIF
	SHIP_MISSION:SHIP_ID = 交易
	FROM_POS:SHIP_ID = CHARACTER_POSITION
	MOVING_POS:SHIP_ID = TRADE_TO_POS
	TRADE_ITEM:0:SHIP_ID = ITEM_ID:0
	TRADE_ITEM:1:SHIP_ID = ITEM_ID:1
	RETURN
ELSEIF RESULT == 4
	RETURN
ENDIF
GOTO TRADE_LOOP

; アイテムの選択
@SELECT_ITEM_LIST
#DIM ITEM_ID
#DIMS ITEM_NAME
#DIM SELECTABLE_ITEM, ITEM_LENGTH

VARSET SELECTABLE_ITEM, 0

FOR ITEM_ID, 0, ITEM_LENGTH
	CALL GET_ITEM_NAME(ITEM_ID)
	SIF RESULT == -1
		CONTINUE
	ITEM_NAME = %RESULTS%
	SELECTABLE_ITEM:ITEM_ID = 1
	PRINTBUTTON @"[{ITEM_ID, 2, RIGHT}] %ITEM_NAME%", ITEM_ID
	PRINTL
NEXT
PRINTBUTTON "[99] 戻る", 99
$INPUT_LOOP
INPUT
IF RESULT >= 0 && RESULT < ITEM_LENGTH
	SIF SELECTABLE_ITEM:RESULT != 1
		GOTO INPUT_LOOP
	RETURN RESULT
ELSEIF RESULT == 99
	RETURN -1
ELSE
	GOTO INPUT_LOOP
ENDIF

@SELECT_POS_FROM_MAP
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
#DIM PORT_ID
#DIM TARGET_POS
#DIM SLOT_ID
#DIM CAN_SALE

TARGET_POS = -1
CAN_SALE = 0
DRAWLINE
PRINTL 移動させる座標を選択
CALL ID2POS(CHARACTER_POSITION)
SECTOR_ID = RESULT:0
$MAP_LOOP
CALL DRAW_MAP(SECTOR_ID)
INPUT
IF RESULT < 0
	RESULT += 1000
	RESULT *= -1
	SECTOR_ID = RESULT
	GOTO MAP_LOOP
ENDIF

; 星系港
FOR PORT_ID, 0, 星系数
	SIF 星系座標ID:PORT_ID != RESULT
		CONTINUE
	TARGET_POS = RESULT
NEXT

; 独立港
IF TARGET_POS != -1
	FOR PORT_ID, 0, MAX_PORT
		SIF PORT_POSITION_ID:PORT_ID != RESULT
			CONTINUE
		CAN_SALE = 0
		FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
			SIF PORT_SLOT:PORT_ID:SLOT_ID != コンテナ
				CONTINUE
			CAN_SALE = 1
			BREAK
		NEXT
		SIF CAN_SALE != 1
			CONTINUE
		TARGET_POS = RESULT
		BREAK
	NEXT
ENDIF
SIF TARGET_POS == -1
	GOTO MAP_LOOP

CALL ID2POS(TARGET_POS)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2
PRINTFORML セクター＃{SECTOR_ID}, X: {X_POS}, Y: {Y_POS}でよろしいですか？
PRINTBUTTON "[0] はい", 0
PRINTL
PRINTBUTTON "[1] いいえ", 1
PRINTL
PRINTBUTTON "[2] キャンセル", 2
PRINTL

INPUT
IF RESULT == 0
	RETURN TARGET_POS
ELSEIF RESULT == 1
	TARGET_POS = -1
	GOTO MAP_LOOP
ELSEIF RESULT == 2
	RETURN -1
ENDIF
GOTO MAP_LOOP


@TRADE(SHIP_ID)
#DIM SHIP_ID
#DIM SOLD_NUM
#DIM OWNER
#DIM PORT_ID
#DIM SHIP_STATUS, SHIP_STATUS_LENGTH
#DIM UNIT_PRICE
#DIM ITEM_ID

VARSET SHIP_STATUS, 0
OWNER = -1

;船の積載量と所持金から購入量を決定
CALL GET_LOADABLE_ITEM_NUM(SHIP_ID, TRADE_ITEM:0:SHIP_ID)

SOLD_NUM = RESULT
UNIT_PRICE = GET_RESOURCE_PRICE(SHIP_POSITION:SHIP_ID, TRADE_ITEM:0:SHIP_ID)
IF SHIP_COUNTRY:SHIP_ID == PLAYER_COUNTRY
	IF SOLD_NUM * UNIT_PRICE > MONEY
		SOLD_NUM = MONEY / UNIT_PRICE
	ENDIF
ELSE
	IF SOLD_NUM * UNIT_PRICE > MONEY:(SHIP_COUNTRY:SHIP_ID)
		SOLD_NUM = MONEY / UNIT_PRICE
	ENDIF
ENDIF

; 宇宙港の所有者を割り出す
FOR PORT_ID, 0, 星系数
	SIF 星系座標ID:PORT_ID != SHIP_POSITION:SHIP_ID
		CONTINUE
	OWNER = STAR_OWNER:PORT_ID
	BREAK
NEXT
IF OWNER == -1
	FOR PORT_ID, 0, MAX_PORT
		SIF PORT_POSITION_ID:PORT_ID != SHIP_POSITION:SHIP_ID
			CONTINUE
		OWNER = PORT_OWNER:PORT_ID
		BREAK
	NEXT
ENDIF

; 出発地点で商品を買う
IF SHIP_POSITION:SHIP_ID == FROM_POS:SHIP_ID
	IF SHIP_COUNTRY:SHIP_ID == PLAYER_COUNTRY
		MONEY -= SOLD_NUM * UNIT_PRICE
		MONEY:OWNER += SOLD_NUM * UNIT_PRICE
	ELSEIF OWNER == PLAYER_COUNTRY
		MONEY:(SHIP_COUNTRY:SHIP_ID) -= SOLD_NUM * UNIT_PRICE
		MONEY += SOLD_NUM * UNIT_PRICE
	ELSE
		MONEY:(SHIP_COUNTRY:SHIP_ID) -= SOLD_NUM * UNIT_PRICE
		MONEY:OWNER += SOLD_NUM + UNIT_PRICE
	ENDIF
	LOCAL = REMOVE_RESOURCE(SHIP_POSITION:SHIP_ID, OWNER, TRADE_ITEM:0:SHIP_ID, SOLD_NUM)
	CALL LOAD_TO_SHIP(SHIP_ID, TRADE_ITEM:0:SHIP_ID, SOLD_NUM - LOCAL)
ENDIF

; 未着だったら交易目標まで移動
IF SHIP_POSITION:SHIP_ID != MOVING_POS:SHIP_ID
	CALL MOVE_SHIP(MOVING_POS:SHIP_ID, SHIP_ID)
	RETURN
ENDIF

; 到着していたら商品の売買を行う
SOLD_NUM = GET_CARGO_ITEM_NUM(SHIP_ID, TRADE_ITEM:0:SHIP_ID)
; 売買
IF SHIP_COUNTRY:SHIP_ID == PLAYER_COUNTRY
	MONEY += SOLD_NUM * UNIT_PRICE
	MONEY:OWNER -= SOLD_NUM * UNIT_PRICE
ELSEIF OWNER == PLAYER_COUNTRY
	MONEY:(SHIP_COUNTRY:SHIP_ID) += SOLD_NUM * UNIT_PRICE
	MONEY -= SOLD_NUM * UNIT_PRICE
ELSE
	MONEY:(SHIP_COUNTRY:SHIP_ID) += SOLD_NUM * UNIT_PRICE
	MONEY:OWNER -= SOLD_NUM + UNIT_PRICE
ENDIF
CALLF UNLOAD_FROM_SHIP(SHIP_ID, TRADE_ITEM:0:SHIP_ID, SOLD_NUM)
CALL ADD_RESOURCE(SHIP_POSITION:SHIP_ID, OWNER, TRADE_ITEM:0:SHIP_ID, SOLD_NUM)

; 出発地点と到着地点を交換
LOCAL = TRADE_ITEM:0:SHIP_ID
TRADE_ITEM:0:SHIP_ID = TRADE_ITEM:1:SHIP_ID
TRADE_ITEM:1:SHIP_ID = LOCAL

LOCAL = MOVING_POS:SHIP_ID
MOVING_POS:SHIP_ID = FROM_POS:SHIP_ID
FROM_POS:SHIP_ID = LOCAL
