;-------------------------
; 商店
;-------------------------
@SPACE_SHOP(STAR_ID = -1, PORT_ID = -1)
#DIM STAR_ID
#DIM PORT_ID
#DIM _SHOP_ID
#DIM DYNAMIC _MODE
#DIM DYNAMIC _DISPLAY_COUNT
#DIM CONST _MANUAL = 0
#DIM CONST _AUTO = 1
#DIM CONST _JURNAL = 2
#DIM CONST _IN_CHARGE = 3
#DIM CONST _SALE_TARGET = 4

_SHOP_ID = GET_SHOP_ID(STAR_ID, PORT_ID)

$INPUT_LOOP
PRINTL ■ 商店
DRAWLINE
IF _MODE == _MANUAL
  SETCOLOR 0X00FF00
  PRINT [在庫手動管理]
  RESETCOLOR
ELSE
  PRINTBUTTON "[在庫手動管理]", -1
ENDIF
IF _MODE == _AUTO
  SETCOLOR 0X00FF00
  PRINT [在庫自動管理]
  RESETCOLOR
ELSE
  PRINTBUTTON "[在庫自動管理]", -2
ENDIF
; IF _MODE == _JURNAL
;   SETCOLOR 0X00FF00
;   PRINT [売り上げ履歴]
;   RESETCOLOR
; ELSE
;   PRINTBUTTON "[売り上げ履歴]", -3
; ENDIF
IF _MODE == _IN_CHARGE
  SETCOLOR 0X00FF00
  PRINT [担当者設定]
  RESETCOLOR
ELSE
  PRINTBUTTON "[担当者設定]", -4
ENDIF
IF _MODE == _SALE_TARGET
  SETCOLOR 0X00FF00
  PRINT [販売対象国設定]
  RESETCOLOR
ELSE
  PRINTBUTTON "[販売対象国設定]", -5
ENDIF
PRINTL
DRAWLINE
SELECTCASE _MODE
  CASE _MANUAL
    CALL MANUAL_INVENTORY_CONTROL(_SHOP_ID)
    _MODE = RESULT
  CASE _AUTO
    CALL AUTO_INVENTORY_CONTROL(_SHOP_ID)
    _MODE = RESULT
  CASE _IN_CHARGE
    CALL APPOINMENT_IN_CHARGE(_SHOP_ID)
    _MODE = RESULT
  CASE _SALE_TARGET
    CALL SETTING_SALE_TARGET(_SHOP_ID)
    _MODE = RESULT
  CASEELSE
    INPUT
    IF RESULT == -1
      _MODE = _MANUAL
    ELSEIF RESULT == -2
      _MODE = _AUTO
    ELSEIF RESULT == -3
      _MODE = _JURNAL
    ELSEIF RESULT == -4
      _MODE = _IN_CHARGE
    ENDIF
ENDSELECT
SIF _MODE == -1
  RETURN
GOTO INPUT_LOOP
;-------------------------
; 手動在庫管理
;-------------------------
@MANUAL_INVENTORY_CONTROL(SHOP_ID)
#DIM SHOP_ID
#DIM DYNAMIC _ITEM_NUM
#DIM 入力値

PRINTFORML %"名前", 30, LEFT% 在庫                                       所持数
SETCOLOR 0X666666
DRAWLINE
RESETCOLOR
FOR LOCAL, 0, ITEM_LENGTH
  _ITEM_NUM = GET_RESOURCE_NUM(CHARACTER_POSITION, 国家ID_プレイヤー, LOCAL)
  IF _ITEM_NUM > 0 || SHOP_ITEMS:LOCAL:SHOP_ID > 0 
    CALL GET_ITEM_NAME(LOCAL)
    IF SHOP_ITEMS:LOCAL:SHOP_ID == 0
      PRINTFORM %RESULTS, 30, LEFT% {0, 8, RIGHT}
    ELSE
      PRINTFORM %RESULTS, 30, LEFT% %TOSTR(SHOP_ITEMS:LOCAL:SHOP_ID, "###,###"), 8, RIGHT%
    ENDIF
    PRINTBUTTON "[<<<<]", LOCAL
    PRINTBUTTON "[<<<]", LOCAL + ITEM_LENGTH
    PRINTBUTTON "[<<]", LOCAL + ITEM_LENGTH * 2
    PRINTBUTTON "[<]", LOCAL + ITEM_LENGTH * 3
    PRINTBUTTON "[>]", LOCAL + ITEM_LENGTH * 4
    PRINTBUTTON "[>>]", LOCAL + ITEM_LENGTH * 5
    PRINTBUTTON "[>>>]", LOCAL + ITEM_LENGTH * 6
    PRINTBUTTON "[>>>>]", LOCAL + ITEM_LENGTH * 7
  ELSE
    CONTINUE
  ENDIF
  IF _ITEM_NUM == 0
    PRINTFORML {0, 8, RIGHT}
  ELSE
    PRINTFORML %TOSTR(_ITEM_NUM, "###,###"), 8, RIGHT%
  ENDIF
NEXT
PRINTBUTTON "[戻る]", -10
PRINTL
INPUT
入力値 = RESULT
IF 入力値 == -10
  RETURN -1
ELSEIF 入力値 == -2
  RETURN 1
ELSEIF 入力値 == -3
  RETURN 2
ELSEIF 入力値 == -4
  RETURN 3
ELSEIF RESULT == -5
  RETURN 4
ELSEIF 入力値 >= 0 && 入力値 < ITEM_LENGTH
  LOCAL = REMOVE_RESOURCE(CHARACTER_POSITION, 国家ID_プレイヤー, 入力値, 1000)
  SHOP_ITEMS:入力値:SHOP_ID += 1000 - LOCAL
ELSEIF 入力値 >= ITEM_LENGTH && 入力値 < ITEM_LENGTH * 2
  LOCAL = REMOVE_RESOURCE(CHARACTER_POSITION, 国家ID_プレイヤー, 入力値 - ITEM_LENGTH, 100)
  SHOP_ITEMS:(入力値 - ITEM_LENGTH):SHOP_ID += 100 - LOCAL
ELSEIF 入力値 >= ITEM_LENGTH * 2 && 入力値 < ITEM_LENGTH * 3
  LOCAL = REMOVE_RESOURCE(CHARACTER_POSITION, 国家ID_プレイヤー, 入力値 - ITEM_LENGTH * 2, 10)
  SHOP_ITEMS:(入力値 - ITEM_LENGTH * 2):SHOP_ID += 10 - LOCAL
ELSEIF 入力値 >= ITEM_LENGTH * 3 && 入力値 < ITEM_LENGTH * 4
  LOCAL = REMOVE_RESOURCE(CHARACTER_POSITION, 国家ID_プレイヤー, 入力値 - ITEM_LENGTH * 3, 1)
  SHOP_ITEMS:(入力値 - ITEM_LENGTH * 3):SHOP_ID += 1 - LOCAL
ELSEIF 入力値 >= ITEM_LENGTH * 4 && 入力値 < ITEM_LENGTH * 5
  LOCAL = MIN(1, SHOP_ITEMS:(入力値 - ITEM_LENGTH * 4):SHOP_ID)
  SHOP_ITEMS:(入力値 - ITEM_LENGTH * 4):SHOP_ID -= LOCAL
  CALL ADD_RESOURCE(CHARACTER_POSITION, 国家ID_プレイヤー, 入力値 - ITEM_LENGTH * 4, LOCAL)
ELSEIF 入力値 >= ITEM_LENGTH * 5 && 入力値 < ITEM_LENGTH * 6
  LOCAL = MIN(10, SHOP_ITEMS:(入力値 - ITEM_LENGTH * 5):SHOP_ID)
  SHOP_ITEMS:(入力値 - ITEM_LENGTH * 5):SHOP_ID -= LOCAL
  CALL ADD_RESOURCE(CHARACTER_POSITION, 国家ID_プレイヤー, 入力値 - ITEM_LENGTH * 5, LOCAL)
ELSEIF 入力値 >= ITEM_LENGTH * 6 && 入力値 < ITEM_LENGTH * 7
  LOCAL = MIN(100, SHOP_ITEMS:(入力値 - ITEM_LENGTH * 6):SHOP_ID)
  SHOP_ITEMS:(入力値 - ITEM_LENGTH * 6):SHOP_ID -= LOCAL
  CALL ADD_RESOURCE(CHARACTER_POSITION, 国家ID_プレイヤー, 入力値 - ITEM_LENGTH * 6, LOCAL)
ELSEIF 入力値 >= ITEM_LENGTH * 7 && 入力値 < ITEM_LENGTH * 8
  LOCAL = MIN(1000, SHOP_ITEMS:(入力値 - ITEM_LENGTH * 7):SHOP_ID)
  SHOP_ITEMS:(入力値 - ITEM_LENGTH * 7):SHOP_ID -= LOCAL
  CALL ADD_RESOURCE(CHARACTER_POSITION, 国家ID_プレイヤー, 入力値 - ITEM_LENGTH * 7, LOCAL)
ENDIF
RETURN 0

;-------------------------
; 自動在庫管理
;-------------------------
@AUTO_INVENTORY_CONTROL(SHOP_ID)
#DIM SHOP_ID
#DIM DYNAMIC _ITEM_NUM
#DIM 入力値

$INPUT_LOOP
SETCOLOR 0X666666
CUSTOMDRAWLINE ///
RESETCOLOR
IF AUTO_SALE:SHOP_ID
  PRINTBUTTON "[自動販売オフ]", -100
ELSE
  SETCOLOR 0X00FF00
  PRINT [自動販売オフ]
  RESETCOLOR
ENDIF
IF !AUTO_SALE:SHOP_ID
  PRINTBUTTON "[自動販売オン]", -101
ELSE
  SETCOLOR 0X00FF00
  PRINT [自動販売オン]
  RESETCOLOR
ENDIF
PRINTL
PRINTL 自動販売をオンにすると、保持ボーダーを超えたリソースを自動的に在庫(販売対象)に回します
SETCOLOR 0X666666
CUSTOMDRAWLINE ///
RESETCOLOR
PRINTFORML 販売対象 %"名前", 30, LEFT%                                        保持ボーダー
SETCOLOR 0X666666
DRAWLINE
RESETCOLOR
FOR LOCAL, 0, ITEM_LENGTH
  _ITEM_NUM = GET_RESOURCE_NUM(CHARACTER_POSITION, 国家ID_プレイヤー, LOCAL)
  IF _ITEM_NUM > 0 || SHOP_ITEMS:LOCAL:SHOP_ID > 0
    IF IS_SALE:LOCAL:SHOP_ID
      PRINTBUTTON "[○]", LOCAL + ITEM_LENGTH * 8
    ELSE
      PRINTBUTTON "[ ]", LOCAL + ITEM_LENGTH * 8
      SETCOLOR 0X666666
    ENDIF 
    CALL GET_ITEM_NAME(LOCAL)
    IF SHOP_ITEMS:LOCAL:SHOP_ID == 0
      PRINTFORM %RESULTS, 30, LEFT% 
    ELSE
      PRINTFORM %RESULTS, 30, LEFT% 
    ENDIF
    PRINTBUTTON "[<<<<]", LOCAL
    PRINTBUTTON "[<<<]", LOCAL + ITEM_LENGTH
    PRINTBUTTON "[<<]", LOCAL + ITEM_LENGTH * 2
    PRINTBUTTON "[<]", LOCAL + ITEM_LENGTH * 3
    PRINTBUTTON "[>]", LOCAL + ITEM_LENGTH * 4
    PRINTBUTTON "[>>]", LOCAL + ITEM_LENGTH * 5
    PRINTBUTTON "[>>>]", LOCAL + ITEM_LENGTH * 6
    PRINTBUTTON "[>>>>]", LOCAL + ITEM_LENGTH * 7
    RESETCOLOR
  ELSE
    CONTINUE
  ENDIF
  IF ITEM_NUM_BORDER:LOCAL:SHOP_ID == 0
    PRINTFORML {0, 8, RIGHT}
  ELSE
    PRINTFORML %TOSTR(ITEM_NUM_BORDER:LOCAL:SHOP_ID, "###,###"), 8, RIGHT%
  ENDIF
NEXT
PRINTBUTTON "[戻る]", -10
PRINTL
INPUT
入力値 = RESULT
IF 入力値 == -10
  RETURN -1
ELSEIF 入力値 == -1
  RETURN 0
ELSEIF 入力値 == -3
  RETURN 2
ELSEIF 入力値 == -4
  RETURN 3
ELSEIF 入力値 == -5
  RETURN 4
ELSEIF 入力値 == -100
  AUTO_SALE:SHOP_ID = 0
ELSEIF 入力値 == -101
  AUTO_SALE:SHOP_ID = 1
ELSEIF 入力値 >= 0 && 入力値 < ITEM_LENGTH
  ITEM_NUM_BORDER:入力値:SHOP_ID += 1000
ELSEIF 入力値 >= ITEM_LENGTH && 入力値 < ITEM_LENGTH * 2
  ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 1):SHOP_ID += 100
ELSEIF 入力値 >= ITEM_LENGTH * 2 && 入力値 < ITEM_LENGTH * 3
  ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 2):SHOP_ID += 10
ELSEIF 入力値 >= ITEM_LENGTH * 3 && 入力値 < ITEM_LENGTH * 4
  ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 3):SHOP_ID += 1
ELSEIF 入力値 >= ITEM_LENGTH * 4 && 入力値 < ITEM_LENGTH * 5
  ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 4):SHOP_ID = LIMIT(ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 4):SHOP_ID - 1, 0, 9999999)
ELSEIF 入力値 >= ITEM_LENGTH * 5 && 入力値 < ITEM_LENGTH * 6
  ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 5):SHOP_ID = LIMIT(ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 5):SHOP_ID - 10, 0, 9999999)
ELSEIF 入力値 >= ITEM_LENGTH * 6 && 入力値 < ITEM_LENGTH * 7
  ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 6):SHOP_ID = LIMIT(ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 6):SHOP_ID - 100, 0, 9999999)
ELSEIF 入力値 >= ITEM_LENGTH * 7 && 入力値 < ITEM_LENGTH * 8
  ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 7):SHOP_ID = LIMIT(ITEM_NUM_BORDER:(入力値 - ITEM_LENGTH * 7):SHOP_ID - 1000, 0, 9999999)
ELSEIF 入力値 >= ITEM_LENGTH * 8 && 入力値 < ITEM_LENGTH * 9
  IS_SALE:(入力値 - ITEM_LENGTH * 8):SHOP_ID = !IS_SALE:(入力値 - ITEM_LENGTH * 8):SHOP_ID
ENDIF
RETURN 1

;-------------------------
; ショップID返却
;-------------------------
@GET_SHOP_ID(STAR_ID = -1, PORT_ID = -1)
#FUNCTION
#DIM STAR_ID
#DIM PORT_ID
#DIM SHOP_ID

IF STAR_ID != -1
  RETURNF STAR_ID
ELSE
  RETURNF PORT_ID + MAX_STAR
ENDIF

;-------------------------
; ショップにおけるアイテム在庫の取得
;-------------------------
@GET_SHOP_ITEM_NUM(_SHOP_ID, _ITEM_ID)
#FUNCTION
#DIM _SHOP_ID
#DIM _ITEM_ID
#DIM _PORT_ID

IF AUTO_SALE:_SHOP_ID
  IF IS_SALE:_ITEM_ID:_SHOP_ID
    IF _SHOP_ID >= MAX_STAR
      _PORT_ID = _SHOP_ID - MAX_STAR
      RETURNF LIMIT(GET_RESOURCE_NUM(PORT_POSITION_ID:_PORT_ID, PORT_OWNER:_PORT_ID, _ITEM_ID) - ITEM_NUM_BORDER:_ITEM_ID:_SHOP_ID, 0, 9999999)
    ELSE
      RETURNF LIMIT(GET_RESOURCE_NUM(STAR_POSITION_ID:_STAR_ID, STAR_OWNER:_SHOP_ID, _ITEM_ID) - ITEM_NUM_BORDER:_ITEM_ID:_SHOP_ID, 0, 999999)
    ENDIF
  ELSE
    RETURNF 0
  ENDIF
ELSE
  RETURNF SHOP_ITEMS:_ITEM_ID:_SHOP_ID
ENDIF

;-------------------------
; ショップにおけるアイテムの価格の取得
;-------------------------
@GET_SHOP_ITEM_PRICE(_SPACE_PORT_ID, _ITEM_ID)
#DIM _SPACE_PORT_ID
#DIM _ITEM_ID
#DIM _ITEM_DATA, STATUS_LENGTH
#DIM _PRICE

TRYCALLFORM GET_ITEM_INFO_{_ITEM_ID}(_ITEM_DATA)
_PRICE = _ITEM_DATA:PRICE
SIF SHOP_IN_CHARGE:_SPACE_PORT_ID
  _PRICE = _PRICE * (ABL:(SHOP_IN_CHARGE:_SPACE_PORT_ID):知略 + 50) / 100
RETURN _PRICE

;-------------------------
; ショップにおけるアイテムの価格の取得
;-------------------------
@APPOINMENT_IN_CHARGE(SHOP_ID)
#DIM SHOP_ID

$INPUT_LOOP
PRINTL
PRINTFORML 担当を選択してください
PRINTL
FOR LOCAL, 1, CHARANUM
  SIF CFLAG:LOCAL:所属 != CFLAG:MASTER:所属
    CONTINUE
  SIF SHOP_IN_CHARGE:SHOP_ID == LOCAL
    SETCOLOR 0X00FF00
  PRINTBUTTON @"[{LOCAL, 2, RIGHT}] %CALLNAME:LOCAL% 知略: {ABL:LOCAL:知略}", LOCAL
  RESETCOLOR
  PRINTL
NEXT
PRINTBUTTON "[戻る]", CHARANUM
INPUT
IF RESULT == CHARANUM
  RETURN -1
ELSEIF RESULT == -1
  RETURN 0
ELSEIF RESULT == -2
  RETURN 1
ELSEIF RESULT == -3
  RETURN 2
ELSEIF RESULT == -4
  RETURN 3
ELSEIF RESULT == -5
  RETURN 4
ELSEIF RESULT > 0 && RESULT < CHARANUM
  IF SHOP_IN_CHARGE:SHOP_ID == RESULT
    SHOP_IN_CHARGE:SHOP_ID = 0
  ELSE
    SHOP_IN_CHARGE:SHOP_ID = RESULT
  ENDIF
ENDIF
RETURN 3

;-------------------------
; 販売対象の勢力
;-------------------------
@SETTING_SALE_TARGET(SHOP_ID)
#DIM SHOP_ID

$INPUT_LOOP
PRINTL
PRINTFORML 販売対象の国を選択してください
PRINTL
FOR LOCAL, 1, MAX_COUNTRY
  IF !SALE_TARGET:LOCAL:SHOP_ID
    SETCOLOR 0X666666
    PRINTBUTTON "[ ]", LOCAL
  ELSE
    PRINTBUTTON "[○]", LOCAL
  ENDIF
  PRINTFORML [{LOCAL, 2, RIGHT}] %COUNTRY_NAME:LOCAL% 友好度: {REL_LIKE_COUNTRY:LOCAL:国家ID_プレイヤー}
  RESETCOLOR
NEXT
PRINTBUTTON "[戻る]", CHARANUM
INPUT
IF RESULT == CHARANUM
  RETURN -1
ELSEIF RESULT == -1
  RETURN 0
ELSEIF RESULT == -2
  RETURN 1
ELSEIF RESULT == -3
  RETURN 2
ELSEIF RESULT == -4
  RETURN 3
ELSEIF RESULT == -5
  RETURN 4
ELSEIF RESULT > 0 && RESULT < MAX_COUNTRY
  SALE_TARGET:RESULT:SHOP_ID = !SALE_TARGET:RESULT:SHOP_ID
ENDIF
RETURN 4

@BUY_RESOURCE_FROM_STAR(_STAR_ID, _ITEM_ID, _BUY_NUM)
#DIM _STAR_ID
#DIM _ITEM_ID
#DIM _BUY_NUM
#DIM _SHOP_ID
#DIM _PORT_ID
#DIM _店在庫
#DIM _購入数
#DIM _BUYER
#DIM _SELLER
#DIM _SHOP_POSITION

; 変数の事前準備
CALL SEARCH_SPACE_SHOP(_STAR_ID, _ITEM_ID)
SIF RESULT == -1
  RETURN
_SHOP_ID = RESULT
_BUYER = STAR_OWNER:_STAR_ID
IF _SHOP_ID < MAX_STAR
  _店在庫 = GET_SHOP_ITEM_NUM(_SHOP_ID, _ITEM_ID)
  _SELLER = STAR_OWNER:_SHOP_ID
  _SHOP_POSITION = STAR_POSITION_ID:_SHOP_ID
ELSE
  _店在庫 = GET_SHOP_ITEM_NUM(_SHOP_ID, _ITEM_ID)
  _SELLER = PORT_OWNER:(_SHOP_ID - MAX_STAR)
  _SHOP_POSITION = PORT_POSITION_ID:(_SHOP_ID - MAX_STAR)
ENDIF
_購入数 = MIN(_BUY_NUM, _店在庫)

; リソースのやり取り
IF AUTO_SALE:_SHOP_ID
    CALLF REMOVE_RESOURCE(_SHOP_POSITION, _SELLER, _ITEM_ID, _購入数)
ELSE
    SHOP_ITEMS:_ITEM_ID:_SHOP_ID -= _購入数
ENDIF
CALL ADD_RESOURCE(_SHOP_POSITION, _BUYER, _ITEM_ID, _購入数)

;金額の処理
CALL GET_SHOP_ITEM_PRICE(_STAR_ID, _ITEM_ID)
IF _BUYER == 国家ID_プレイヤー
  MONEY -= RESULT * _購入数
ELSE
  MONEY:_BUYER -= RESULT * _購入数
ENDIF
IF _SELLER == 国家ID_プレイヤー
  MONEY += RESULT * _購入数
ELSE
  MONEY:_SELLER += RESULT * _購入数
ENDIF

;購入後の経験値、好感度の処理
CALL PRINT_ADD_EXP(SHOP_IN_CHARGE:_SHOP_ID, EXPNAME:(GET_EXP(GETNUM(ABL, "知略"))), 5, 1)
REL_LIKE_COUNTRY:_BUYER:_SELLER = LIMIT(REL_LIKE_COUNTRY:_BUYER:_SELLER + 1 , -1000, 1000)

;--------------------------------------------
; 一番近い取引可能なショップを返却
;--------------------------------------------
@SEARCH_SPACE_SHOP(_STAR_ID, _ITEM_ID)
#DIM _STAR_ID
#DIM _ITEM_ID
#DIM _SHOP_ID
#DIM _COUNTRY_ID
#DIM _SEARCH_PORT_ID
#DIM _SALE_COUNTRY
#DIM DYNAMIC _NEAREST_SHOP_ID = -1
#DIM DYNAMIC _NEAREST_SHOP_DISTANCE = 0
#DIM _SECTOR_ID, 2
#DIM _X_POS, 2
#DIM _Y_POS, 2
#DIM CONST _BUYER = 0
#DIM CONST _SELLER = 1

_COUNTRY_ID = STAR_OWNER:_STAR_ID

FOR _SHOP_ID, 0, MAX_STAR + MAX_PORT
  _SEARCH_PORT_ID = _SHOP_ID
  IF _SHOP_ID >= MAX_STAR
    _SEARCH_PORT_ID -= MAX_STAR
    _SALE_COUNTRY = PORT_OWNER:_SEARCH_PORT_ID
  ELSE
    _SALE_COUNTRY = STAR_OWNER:_SEARCH_PORT_ID
  ENDIF
  ; 未定義の国、自国、あるいは嫌われている国からの販売は行わない
  SIF _SALE_COUNTRY == 0 || REL_LIKE_COUNTRY:_SALE_COUNTRY:(STAR_OWNER:_STAR_ID) < -900
    CONTINUE
  ; 商店が設置されていない場合は弾く
  SIF IS_RELEASED_SPACE_PORT_SHOP(_SHOP_ID) == 0
    CONTINUE
  ; 商店に在庫がない場合は弾く
  SIF GET_SHOP_ITEM_NUM(_SHOP_ID, _ITEM_ID) <= 0
    CONTINUE
  CALL ID2POS(STAR_POSITION_ID:_STAR_ID)
  _SECTOR_ID:_BUYER = RESULT
  _X_POS:_BUYER = RESULT:1
  _Y_POS:_BUYER = RESULT:2
  IF _SHOP_ID >= MAX_STAR
    CALL ID2POS(PORT_POSITION_ID:_SEARCH_PORT_ID)
  ELSE
    CALL ID2POS(STAR_POSITION_ID:_SEARCH_PORT_ID)
  ENDIF
  CALL ID2POS(STAR_POSITION_ID:_STAR_ID)
  _SECTOR_ID:_SELLER = RESULT
  _X_POS:_SELLER = RESULT:1
  _Y_POS:_SELLER = RESULT:2
  ;最寄りの座標を計算し、_NEAREST_SHOP_IDに代入OR更新していく
  LOCAL = ABS(_SECTOR_ID:_BUYER - _SECTOR_ID:_SELLER) * MAP_WIDTH + ABS(_X_POS:_BUYER - _X_POS:_SELLER) + ABS(_Y_POS:_BUYER - _Y_POS:_SELLER)
  IF _NEAREST_SHOP_DISTANCE == 0 || _NEAREST_SHOP_DISTANCE < LOCAL
    _NEAREST_SHOP_DISTANCE = LOCAL
    _NEAREST_SHOP_ID = _SHOP_ID
  ENDIF
NEXT
;_NEAREST_SHOP_IDを返却
RETURN _NEAREST_SHOP_ID

