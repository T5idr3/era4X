;-------------------------------------------------
; SLG SHOP画面
;-------------------------------------------------
@SLG_SHOP
#DIM SELECTED = -1				;;クリックした座標データ
#DIM ITER
#DIM CURRENT_STAR_PORTID
#DIM CURRENT_PORTID
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
#DIM PREV_CHARACTER_SECTOR_ID
#DIM STATUS, STATUS_LENGTH
#DIMS strInputResult
#DIM Wnd4_LINES					;;window4展開用　行数
#DIM Wnd4FLAG = 30				;;window4展開用　最大行数制限
#DIM PREV_CHARACTER_POSID
#DIM CONST MQ_LINK_ID = 1000000

CALL ID2POS(CHARACTER_POSITION)
SECTOR_ID = RESULT:0
PREV_CHARACTER_SECTOR_ID = SECTOR_ID
PREV_CHARACTER_POSID = CHARACTER_POSITION
$INPUT_LOOP

REDRAW 0
IF PREV_CHARACTER_POSID != CHARACTER_POSITION
	PREV_CHARACTER_POSID = CHARACTER_POSITION
	SELECTED = -1	;移動したなら選択マスをリセット
	CALL ID2POS(CHARACTER_POSITION)
	IF RESULT != PREV_CHARACTER_SECTOR_ID
		PREV_CHARACTER_SECTOR_ID = RESULT
		SECTOR_ID = RESULT
	ENDIF
ENDIF

;CALL DRAW_MAP(SECTOR_ID)
CALL DRAW_WINDOW(SECTOR_ID, SELECTED, BOARDING_SHIP_ID , 1)
;;;window4 展開用に数値保持
Wnd4_LINES = RESULT
SIF FLAG:500 >= 5
	Wnd4FLAG = FLAG:500 +2

; 変数初期化
CURRENT_STAR_PORTID = -1
CURRENT_PORTID = -1

;MESSAGE QUE 表示
CALL SHOW_MESSAGE_QUE_LINK(MQ_LINK_ID)

;状態表示とCONTROL表示
IF BOARDING_SHIP_ID != -1 && SHIP_MISSION:BOARDING_SHIP_ID == 待機
	PRINTFORML 現在%SHIP_NAME:BOARDING_SHIP_ID%に搭乗しています
	TRYCALLFORM GET_ENGIN_STATUS_{SHIP_EQUIP:エンジン:0:BOARDING_SHIP_ID}(STATUS)
	IF STATUS:SPEED == 1
		PRINTBUTTON "   [w]↑", "w"
		PRINTL 
		PRINTBUTTON "[a]←", "a"
		PRINT     
		PRINTBUTTON "→[d]", "d"
		PRINTL 
		PRINTBUTTON "   [s]↓", "s"
		PRINTL 
	ELSEIF STATUS:SPEED == 2
		PRINTBUTTON "     [W]↑", "W"
		PRINTBUTTON "[w]↑↑", "w"
		PRINTL 
		PRINTBUTTON "[A]←", "A"
		PRINTBUTTON "[a]←←", "a"
		PRINT     
		PRINTBUTTON "→→[d]", "d"
		PRINTBUTTON "→[D]", "D"
		PRINTL 
		PRINTBUTTON "     [S]↓", "S"
		PRINTBUTTON "[s]↓↓", "s"
		PRINTL 
	ENDIF
ELSEIF BOARDING_SHIP_ID != -1 && SHIP_MISSION:BOARDING_SHIP_ID == 移動
	PRINTFORML 現在%SHIP_NAME:BOARDING_SHIP_ID%に搭乗しています
	PRINTFORML 現在自動航行中です
;	PRINTBUTTON "[v] 時間を進める", "v"
;	PRINT 　
	PRINTBUTTON "[c] 自動航行中止", "c"
	PRINTL
ELSEIF BOARDING_SHIP_ID != -1 && SHIP_MISSION:BOARDING_SHIP_ID == パトロール
	PRINTFORML 現在%SHIP_NAME:BOARDING_SHIP_ID%に搭乗しています
	PRINTFORML 現在パトロール中です
;	PRINTBUTTON "[v] 時間を進める", "v"
;	PRINT 　
	PRINTBUTTON "[c] パトロール中止", "c"
	PRINTL
ELSEIF BOARDING_SHIP_ID != -1 && SHIP_MISSION:BOARDING_SHIP_ID == 交易
	PRINTFORML 現在%SHIP_NAME:BOARDING_SHIP_ID%に搭乗しています
	PRINTFORML 現在交易中です
;	PRINTBUTTON "[v] 時間を進める", "v"
;	PRINT 　
	PRINTBUTTON "[c] 交易中止", "c"
	PRINTL
ELSEIF BOARDING_SHIP_ID != -1 && SHIP_MISSION:BOARDING_SHIP_ID == 採掘
	PRINTFORML 現在%SHIP_NAME:BOARDING_SHIP_ID%に搭乗しています
	PRINTFORML 現在採掘中です
;	PRINTBUTTON "[v] 時間を進める", "v"
;	PRINT 　
	PRINTBUTTON "[c] 採掘中止", "c"
	PRINTL
ELSEIF BOARDING_SHIP_ID != -1 && SHIP_MISSION:BOARDING_SHIP_ID == 追従
	PRINTFORML 現在%SHIP_NAME:(SHIP_FOLLOW:BOARDING_SHIP_ID)%を追従しています
;	PRINTBUTTON "[v] 時間を進める", "v"
;	PRINT 　
	PRINTBUTTON "[c] 追従中止", "c"
	PRINTL
ENDIF

PRINT 　　　
PRINTBUTTON "[q] 調教画面へ", "q"
PRINT 　

PRINTBUTTON "[v] 時間を進める", "v"
PRINT 　

PRINTBUTTON "[z] 任務/人員の設定", "z"
PRINT 　

PRINTBUTTON "[l] 艦船一覧", "l"
PRINT 　

FOR ITER, 0, MAX_STAR
	IF STAR_POSITION_ID:ITER == CHARACTER_POSITION
		PRINTBUTTON "[f] 宇宙港", "f"
		CURRENT_STAR_PORTID = ITER
		PRINT 　
	ENDIF
NEXT
FOR ITER, 0, MAX_PORT
	IF PORT_POSITION_ID:ITER == CHARACTER_POSITION
		PRINTBUTTON "[f] 宇宙港", "f"
		CURRENT_PORTID = ITER
		PRINT 　
	ENDIF
NEXT

; 資源回収
CALL IS_MINING(CHARACTER_POSITION)
IF RESULT == 1
	PRINTBUTTON "[r] 採掘", "r"
	PRINT 　
ENDIF

; アノマリー
CALL ID2POS(CHARACTER_POSITION)
STRLENFORM %ANOMALY_MAP:RESULT:(RESULT:1):(RESULT:2)%
IF RESULT != 0
	PRINTBUTTON "[e] アノマリーを調査", "e"
	PRINT　
ENDIF

; クエスト対象座標
IF IS_QUEST(CHARACTER_POSITION:MASTER ) != -1
	TRYCALLFORM QUEST_SHOW_COMMAND_{ IS_QUEST( CHARACTER_POSITION:MASTER)}
	IF RESULT == 1
		PRINTBUTTON "[Q] "+ RESULTS, "Q"
		RESETCOLOR
		PRINT　
	ENDIF
ENDIF

; 指定座標への自動航行
IF SELECTED != -1 && SELECTED != CHARACTER_POSITION && BOARDING_SHIP_ID:MASTER != -1 && SHIP_COUNTRY:(BOARDING_SHIP_ID:MASTER) == 国家ID_プレイヤー
	CALL ID2POS(SELECTED)
	SECTOR_ID = RESULT:0
	X_POS = RESULT:1
	Y_POS = RESULT:2
	IF X_POS <= MAP_WIDTH && Y_POS <= MAP_HEIGHT
		PRINTBUTTON "[m] 指定座標まで自動航行", "m"
		PRINT 　
	ENDIF
ENDIF

; 他マス攻撃コマンド
IF SELECTED != -1 && SELECTED != CHARACTER_POSITION && BOARDING_SHIP_ID:MASTER != -1 && SELECTED / 10000 == CHARACTER_POSITION / 10000
	CALL ID2POS(SELECTED)
	SECTOR_ID = RESULT:0
	X_POS = RESULT:1
	Y_POS = RESULT:2
	IF X_POS <= MAP_WIDTH && Y_POS <= MAP_HEIGHT
		PRINTBUTTON "[O] 遠隔攻撃", "O"
		PRINT 　
	ENDIF
ENDIF

; ジャンプドライブ開発
IF SELECTED != -1 && SELECTED != CHARACTER_POSITION && BOARDING_SHIP_ID:MASTER != -1 && SHIP_COUNTRY:(BOARDING_SHIP_ID:MASTER) == 国家ID_プレイヤー
	FOR LOCAL, 0, MAX_SLOT
		SIF SHIP_EQUIP:オプション:LOCAL:(BOARDING_SHIP_ID:MASTER) != 11
			CONTINUE
		PRINTBUTTON "[j] 指定座標までワープ", "j"
		PRINT 　
		BREAK
	NEXT
ENDIF
;PRINTL
;IF SELECTED != -1
;	CALL ID2POS(SELECTED)
;	SECTOR_ID = RESULT:0
;	X_POS = RESULT:1
;	Y_POS = RESULT:2
;	IF X_POS <= MAP_WIDTH && Y_POS <= MAP_HEIGHT
;		PRINTBUTTON "[P] 移動距離確認", "P"
;		PRINT　
;	ENDIF
;ENDIF
;PRINTBUTTON "[YP] 多勢力指定遠方船確認", "YP"
;PRINT　
;PRINTBUTTON "[XP] 勢力指定近傍船確認", "XP"
;PRINT　
;PRINTBUTTON "[ZP] 多勢力指定近傍船確認", "ZP"
;PRINT　

;建造物建造
IF SELECTED == -1 && IS_ABLE_BUILD(CHARACTER_POSITION)
	PRINTBUTTON "[y] 建造物建造", "y"
	PRINT 　
ENDIF
; 宇宙港建造
CALL IS_BUILDING(CHARACTER_POSITION)
IF RESULT == 1 && SELECTED == -1
	PRINTBUTTON "[t] 宇宙港建造", "t"
	PRINT 　
ENDIF

CALL IS_BUILDUP(CHARACTER_POSITION)
IF RESULT == 1 && SELECTED == -1
	PRINTBUTTON "[t] 宇宙港建造", "t"
	PRINT 　
ENDIF

PRINTL
DRAWLINE
;入力

$INPUT_LOOP2
REDRAW 2
ONEINPUTS
REDRAW 0


strInputResult '= RESULTS
;;; "_"入力はwindow背景クリックした際の動作なのでほっとく
IF strInputResult == "_"
	CLEARLINE 1
	GOTO INPUT_LOOP2
ENDIF

CLEARLINE 2

;;数字解析できた場合
;;セクター内の特定地点をクリックした場合、もしくはセクターマップ切り替え操作した場合のどちらか
ISNUMERIC strInputResult
IF RESULT:0
	TOINT strInputResult
	IF RESULT == MQ_LINK_ID
		CALL PRINT_MESSAGE_QUE
		GOTO INPUT_LOOP
	ELSEIF RESULT >= 0 && RESULT <= 999999
		SECTOR_ID = RESULT / 10000
		IF RESULT % 10000 == 9999	;;セクター切り替え操作
			SELECTED = RESULT		;; SECTOR_ID + 9999 のまま描画にもどる
			GOTO INPUT_LOOP
		ELSE						;;同セクター内で何かをクリック
			SELECTED = RESULT		;; SELECTEDに入力値を入れ描画にもどる	
			;CALL ID2POS(SELECTED)
			;X_POS = LIMIT(RESULT:1, 0, MAP_WIDTH - 1)
			;Y_POS = LIMIT(RESULT:2, 0, MAP_HEIGHT - 1)
			GOTO INPUT_LOOP
		ENDIF
	ENDIF
ENDIF

;;;　以下、INPUTSが数字でない。文字列照合

SELECTCASE strInputResult
	; 調教画面へ戻る
	CASE "q"
		RETURN
	; 資源回収
	CASE "r"
		CALL MINING(CHARACTER_POSITION, 国家ID_プレイヤー)
		CALL SLG_TURN_END(1)
		GOTO INPUT_LOOP
	; アノマリー
	CASE "e"
		IF BOARDING_SHIP_ID:MASTER == -1
			PRINTFORMW アノマリーの調査は%CALLNAME:MASTER%が艦長の時のみ可能です
			GOTO INPUT_LOOP
		ENDIF
		CALL ID2POS(SHIP_POSITION:BOARDING_SHIP_ID)
		SECTOR_ID = RESULT:0
		X_POS = RESULT:1
		Y_POS = RESULT:2
		STRLENFORM %ANOMALY_MAP:SECTOR_ID:X_POS:Y_POS%
		IF RESULT != 0
			TRYCALLFORM ANOMALY_BODY_%ANOMALY_MAP:SECTOR_ID:X_POS:Y_POS%
		ENDIF
		GOTO INPUT_LOOP
	; クエスト対象座標
	CASE "Q"
		IF IS_QUEST(CHARACTER_POSITION:MASTER) != -1
			TRYCALLFORM QUEST_BODY_{IS_QUEST( CHARACTER_POSITION:MASTER)}
			SIF RESULT == 1
				CALL SLG_TURN_END(1)
		ENDIF
	; 宇宙港建造
	CASE "t"
		CALL IS_BUILDING(CHARACTER_POSITION)
		IF RESULT == 1 && SELECTED == -1
			CALL CREATE_STAR_PORT(CHARACTER_POSITION, 国家ID_プレイヤー)
			SIF RESULT == 1
				CALL SLG_TURN_END(1)
		ENDIF
		CALL IS_BUILDUP(CHARACTER_POSITION)
		IF RESULT == 1
			CALL BUILD_PORT(CHARACTER_POSITION, 国家ID_プレイヤー)
			SIF RESULT == 1
				CALL SLG_TURN_END(1)
		ENDIF
		GOTO INPUT_LOOP
	; 建造物建造
	CASE "y"
		IF IS_ABLE_BUILD(CHARACTER_POSITION) == 0 || SELECTED != -1
			GOTO INPUT_LOOP
		ELSE
			CALL CREATE_SPACE_MODULE(CHARACTER_POSITION:MASTER)
			SIF RESULT == 0
				GOTO INPUT_LOOP
			CALL SLG_TURN_END(1)
		ENDIF
	; 宇宙港へ
	CASE "f"
		IF CURRENT_STAR_PORTID != -1
			CALL STAR_MENU(CURRENT_STAR_PORTID)
			SIF RESULT == 1
				RETURN
			GOTO INPUT_LOOP
		ELSEIF CURRENT_PORTID != -1 && PORT_COMPLETE:CURRENT_PORTID == 1
			CALL PORT_MENU(CURRENT_PORTID)
			SIF RESULT == 1
				RETURN
		ENDIF
		GOTO INPUT_LOOP
	;ターンを進める
	CASE "v"
		CALL SLG_TURN_END(1)
		GOTO INPUT_LOOP
	;タスクを中断する
	CASE "c"
		SIF BOARDING_SHIP_ID != -1 && SHIP_MISSION:BOARDING_SHIP_ID != 待機
			SHIP_MISSION:BOARDING_SHIP_ID = 待機
		GOTO INPUT_LOOP
	CASE "z"
		CALL SHOW_INFO_ASSET()
		GOTO INPUT_LOOP
	;移動量の切り替え　FLAG:502
	CASE "x"
		FLAG:502 ++
		SIF FLAG:502 >= 2
			FLAG:502 = 0
	;艦船一覧ウィンドウを表示
	CASE "l"
		CALL CREATE_WINDOW_INMAP_SHIPLIST
	;window4メッセージ枠の拡張表示
	;基本4行＋枠２のタテ６マスのwindowとしている
	;[一覧表示 / 戻す]　の操作で必要行数まで拡張するための処理。それでも最大100行。これ以上は
	;;WindowDrawer.ERH の変更が必要。ここだけ増やすとおちる。
	;; 表示最大行数をflag:500で変更可能にした　Wnd4FLAG = flag:500 +2(枠) 行
	CASE "L"
		CALL WndMgr_Exist( 4 )
		IF RESULT:0
			CALL WndMgr_GetRectangle( 4 )
			IF RESULT:3 == 6
				CALL WndMgr_Rectangle( 4, RESULT:0, RESULT:1, RESULT:2, Wnd4FLAG, RESULT:6 )
			ELSE
				CALL WndMgr_DestroyWindow( 4 )
			ENDIF
		ENDIF

		GOTO INPUT_LOOP
	CASE "m"
		IF SELECTED != CHARACTER_POSITION && SHIP_COUNTRY:(BOARDING_SHIP_ID:MASTER) == 国家ID_プレイヤー
			CALL ID2POS(SELECTED)
			SECTOR_ID = RESULT:0
			X_POS = RESULT:1
			Y_POS = RESULT:2
			IF X_POS <= MAP_WIDTH && Y_POS <= MAP_HEIGHT
				SHIP_MISSION:(BOARDING_SHIP_ID:MASTER) = 移動
				MOVING_POS:(BOARDING_SHIP_ID:MASTER) = SELECTED
			ENDIF
		ENDIF
		GOTO INPUT_LOOP
	;他マス攻撃
	CASE "O"
		IF SELECTED != -1 && SELECTED != CHARACTER_POSITION
			CALL IS_OTHER_GRID_ATTACK_GOING(CHARACTER_POSITION, SELECTED, 国家ID_プレイヤー)
			IF RESULT >= 4
				CALL OTHER_GRID_TARGETING(CHARACTER_POSITION, SELECTED, 国家ID_プレイヤー, RESULT)
			ELSEIF RESULT == 0
				PRINTW 攻撃できる武器がありません
			ENDIF
			SIF RESULT == -1
				PRINTW 攻撃目標が存在しません
			SIF RESULT == 1
				CALL RETIRE_BROKEN_SHIP
				CALL SLG_TURN_END(1)
		ENDIF
		GOTO INPUT_LOOP
	CASE "j"
		IF SELECTED != -1 && SELECTED != CHARACTER_POSITION && BOARDING_SHIP_ID:MASTER != -1 && SHIP_COUNTRY:(BOARDING_SHIP_ID:MASTER) == 国家ID_プレイヤー
			FOR LOCAL, 0, MAX_SLOT
				SIF SHIP_EQUIP:オプション:LOCAL:(BOARDING_SHIP_ID:MASTER) != 11
					CONTINUE
				CALL ID2POS(SELECTED)
				SECTOR_ID = RESULT:0
				X_POS = RESULT:1
				Y_POS = RESULT:2
				IF X_POS <= MAP_WIDTH && Y_POS <= MAP_HEIGHT
					SHIP_POSITION:(BOARDING_SHIP_ID:MASTER) = SELECTED
					SHIP_MISSION = 待機
					FOR ITER, 0, MAX_SHIP
						SIF SHIP_COUNTRY:ITER == 国家ID_プレイヤー && SHIP_MISSION:ITER == 追従 && SHIP_FOLLOW:ITER == BOARDING_SHIP_ID:MASTER
							SHIP_POSITION:ITER = SELECTED
					NEXT
					CALL UPDATE_CHARACTER_POSITION
				ENDIF
				BREAK
			NEXT
		ENDIF
		GOTO INPUT_LOOP
;	CASE "P"
;		CALL ID2POS(SELECTED)
;		SECTOR_ID = RESULT:0
;		X_POS = RESULT:1
;		Y_POS = RESULT:2
;		IF X_POS <= MAP_WIDTH && Y_POS <= MAP_HEIGHT
;			IF SELECTED != -1
;				CALL MOVING_DISTANCE_SHOW(SELECTED)
;			ENDIF
;			GOTO INPUT_LOOP
;		ENDIF
;	CASE "YP"
;		CALL FURTHEST_MULTIPLE_ANY_COUNTRY_SHIP_SHOW
;		GOTO INPUT_LOOP
;	CASE "XP"
;		CALL NEAREST_ANY_COUNTRY_SHIP_SHOW
;		GOTO INPUT_LOOP
;	CASE "ZP"
;		CALL NEAREST_MULTIPLE_ANY_COUNTRY_SHIP_SHOW
;		GOTO INPUT_LOOP
	CASEELSE
ENDSELECT

; 船による移動
; エンジン性能STATUS:SPEED と低速移動フラグFLAG:502により wasdの移動量が決まる。 WASDは常に１．
IF BOARDING_SHIP_ID != -1 && (RESULTS == "w" || RESULTS == "d" || RESULTS == "a" || RESULTS == "s" || RESULTS == "W" || RESULTS == "D" || RESULTS == "A" || RESULTS == "S") && SHIP_MISSION:BOARDING_SHIP_ID == 待機
	TRYCALLFORM GET_ENGIN_STATUS_{SHIP_EQUIP:エンジン:0:BOARDING_SHIP_ID}(STATUS)
	SIF STATUS:SPEED < 2
		FLAG:502 = 0	;低速移動フラグ 0= 無制限 / 1= 低速モード移動量１

	SELECTCASE RESULTS
		CASE "w"
			CALL SHIP_MOVE_FOR(8, BOARDING_SHIP_ID, FLAG:502)
		CASE "d"
			CALL SHIP_MOVE_FOR(6, BOARDING_SHIP_ID, FLAG:502)
		CASE "a"
			CALL SHIP_MOVE_FOR(4, BOARDING_SHIP_ID, FLAG:502)
		CASE "s"
			CALL SHIP_MOVE_FOR(2, BOARDING_SHIP_ID, FLAG:502)
		CASE "W"
			CALL SHIP_MOVE_FOR(8, BOARDING_SHIP_ID, 1)
		CASE "D"
			CALL SHIP_MOVE_FOR(6, BOARDING_SHIP_ID, 1)
		CASE "A"
			CALL SHIP_MOVE_FOR(4, BOARDING_SHIP_ID, 1)
		CASE "S"
			CALL SHIP_MOVE_FOR(2, BOARDING_SHIP_ID, 1)
	ENDSELECT

	CALL ID2POS(SHIP_POSITION:BOARDING_SHIP_ID)
	X_POS = RESULT:1
	Y_POS = RESULT:2
	CALL SLG_TURN_END(1)
	GOTO INPUT_LOOP
ENDIF

;クエストやアノマリーで調教遷移フラグが立っていた場合、SLG4Xの入力受付ループを抜けSHOPに制御を戻す
IF FLAG:SLG4X調教開始フラグ == 1
	FLAG:SLG4X調教開始フラグ = 0
	RETURN
ENDIF

;; 宇宙港へ
;IF RESULTS == "f" && CURRENT_STAR_PORTID != -1
;	CALL STAR_MENU(CURRENT_STAR_PORTID)
;	SIF RESULT == 1
;		RETURN
;	GOTO INPUT_LOOP
;ELSEIF RESULTS == "f" && CURRENT_PORTID != -1 && PORT_COMPLETE:CURRENT_PORTID == 1
;	CALL PORT_MENU(CURRENT_PORTID)
;	SIF RESULT == 1
;		RETURN
;	GOTO INPUT_LOOP
;ENDIF


; マップ選択
;SELECTCASE GET_MAP(SELECTED)
;	CASE 無
;		PRINTFORML 未探索地域
;	CASE 明瞭
;		PRINTFORML 空白宙域
;		CALL SHOW_POSITION_INFO(SELECTED)
;	CASE 星
;		CALL MAP_POS_ID2PORTID(SELECTED)
;		PRINTFORML 中立星(所属: %COUNTRY_NAME:(STAR_OWNER:RESULT)%)
;		;今いる星じゃなかったら返す
;		CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
;		IF RESULT != CHARACTER_POSITION
;			GOTO INPUT_LOOP
;		ENDIF
;		CALL MAP_POS_ID2PORTID(SELECTED)
;		CALL STAR_MENU(RESULT)
;		SIF RESULT == 1
;			RETURN
;	CASE 宇宙港
;		PRINTFORML 宇宙港
;		CALL SHOW_POSITION_INFO(SELECTED)
;	CASE 資源
;		PRINTFORML ◆資源採掘可能エリア
;		CALL SHOW_POSITION_INFO(SELECTED)
;	CASE ANOMALY
;		PRINTFORML ◆アノマリー
;		CALL SHOW_POSITION_INFO(SELECTED)
;	CASE ワープゲート
;		PRINTFORML ◆ワープゲート
;		CALL SHOW_POSITION_INFO(SELECTED)
;ENDSELECT
;
GOTO INPUT_LOOP

;-------------------------------------------------
; 宙域詳細表示
;-------------------------------------------------
@SHOW_POSITION_INFO(POSID)
#DIM POSID
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
#DIMS ITEM_NAME
#DIMS ITEM_DESCRIPTION
CALL ID2POS(POSID)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2

CALL GET_SHIP_LIST_FROM_POS(POSID)
IF MAP:SECTOR_ID:X_POS:Y_POS == 資源
	CALL GET_ITEM_NAME(RESOURCE_MAP:SECTOR_ID:X_POS:Y_POS)
	ITEM_NAME = %RESULTS%
	CALL GET_ITEM_DESCRIPTION(RESOURCE_MAP:SECTOR_ID:X_POS:Y_POS)
	ITEM_DESCRIPTION = %RESULTS%
	PRINTFORML %ITEM_NAME%: %ITEM_DESCRIPTION%
ENDIF

IF MAP:SECTOR_ID:X_POS:Y_POS == ワープゲート
	SIF X_POS == 0 && Y_POS == MAP_HEIGHT / 2
		PRINTFORML セクター{SECTOR_ID - 1}へ通じるゲート
	SIF X_POS == MAP_WIDTH - 1 && Y_POS == MAP_HEIGHT / 2
		PRINTFORML セクター{SECTOR_ID + 1}へ通じるゲート
	SIF X_POS == MAP_WIDTH / 2 && Y_POS == 0
		PRINTFORML セクター{SECTOR_ID - 10}へ通じるゲート
	SIF X_POS == MAP_WIDTH / 2 && Y_POS == MAP_HEIGHT - 1
		PRINTFORML セクター{SECTOR_ID + 10} へ通じるゲート
ENDIF

SIF SHIP_LIST_LENGTH > 0
	PRINTL ◆宙域艦隊
FOR LOCAL, 0, SHIP_LIST_LENGTH
	PRINTFORM %COUNTRY_NAME:(SHIP_COUNTRY:(SHIP_LIST:LOCAL))%所属 %SHIP_NAME:(SHIP_LIST:LOCAL)%
	IF SHIP_MISSION:(SHIP_LIST:LOCAL) == パトロール
		PRINTL (パトロール任務中)
	ELSEIF SHIP_MISSION:(SHIP_LIST:LOCAL) == 採掘
		PRINTL (採掘中)
	ELSE
		PRINTL
	ENDIF
NEXT

;-------------------------------------------------
; 星メニュー
;-------------------------------------------------
@STAR_MENU(PORTID)
#DIM PORTID
#DIMS LEFT_COLUMNS, MAX_SHIP
#DIM LEFT_COLUMNS_BUTTON_VALUE, MAX_SHIP
#DIM CURRENT_MODE
#DIM LINE_ITER
#DIM HAS_WRECKED_SHIP
#DIM DYNAMIC _DIFFENCE_SIDE_COUNT

CURRENT_MODE = 0

$INPUT_LOOP
VARSET LEFT_COLUMNS, " "
VARSET LEFT_COLUMNS_BUTTON_VALUE, NONE_LINE
LINE_ITER = 0
LEFT_COLUMNS:LINE_ITER = %"　宇宙港", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = WHITE_LINE
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"---------------------", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GRAY_LINE
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"　[0] 宇宙港", LEFT_COLUMN_LENGTH, LEFT%
IF CURRENT_MODE == 0
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
ELSE
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 0
ENDIF
LINE_ITER ++
IF REL_LIKE_COUNTRY:(PORT_OWNER:PORTID):国家ID_プレイヤー != -1000
	LEFT_COLUMNS:LINE_ITER = %"　[1] 艦船購入", LEFT_COLUMN_LENGTH, LEFT%
	IF CURRENT_MODE == 1
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
	ELSE
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 1
	ENDIF
	LINE_ITER ++
	LEFT_COLUMNS:LINE_ITER = %"　[2] 装備更新", LEFT_COLUMN_LENGTH, LEFT%
	IF CURRENT_MODE == 2
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
	ELSE
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 2
	ENDIF
	LINE_ITER ++
	;LEFT_COLUMNS:LINE_ITER = %"　[3] タスクの割り振り", LEFT_COLUMN_LENGTH, LEFT%
	;IF CURRENT_MODE == 3
	;	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
	;ELSE
	;	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 3
	;ENDIF
ENDIF
LEFT_COLUMNS:LINE_ITER = %"　[3] 任務/人員の設定", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 3
LINE_ITER ++
IF REL_LIKE_COUNTRY:(PORT_OWNER:PORTID):国家ID_プレイヤー != -1000
	LEFT_COLUMNS:LINE_ITER = %"　[4] クエスト", LEFT_COLUMN_LENGTH, LEFT%
	IF CURRENT_MODE == 4
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
	ELSE
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 4
	ENDIF
	LINE_ITER ++
	IF HUMAN_LAB == CHARACTER_POSITION && QUEST_PROGRESS:0 >= 3
		LEFT_COLUMNS:LINE_ITER = %"　[5] 人体研究所", LEFT_COLUMN_LENGTH, LEFT%
		IF CURRENT_MODE == 5
			LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
		ELSE
			LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 5
		ENDIF
		LINE_ITER ++
	ENDIF
	LEFT_COLUMNS:LINE_ITER = %"　[6] 素材販売", LEFT_COLUMN_LENGTH, LEFT%
	IF CURRENT_MODE == 6
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
	ELSE
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 6
	ENDIF
	LINE_ITER ++
	LEFT_COLUMNS:LINE_ITER = %"　[7] 加工工場", LEFT_COLUMN_LENGTH, LEFT%
	IF CURRENT_MODE == 7
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
	ELSE
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 7
	ENDIF
	LINE_ITER ++
	LEFT_COLUMNS:LINE_ITER = %"　[8] 艦船売却", LEFT_COLUMN_LENGTH, LEFT%
	IF CURRENT_MODE == 8
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
	ELSE
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 8
	ENDIF
	HAS_WRECKED_SHIP = 0
	FOR LOCAL, 0, MAX_SHIP
		IF SHIP_COUNTRY:LOCAL == 国家ID_プレイヤー && SHIP_CONDITION:LOCAL == 艦船状態_大破 && SHIP_POSITION:LOCAL == STAR_POSITION_ID:PORTID
			HAS_WRECKED_SHIP = 1
			BREAK
		ENDIF
	NEXT
	IF HAS_WRECKED_SHIP == 1
		LINE_ITER ++
		LEFT_COLUMNS:LINE_ITER = %"　[9] 大破した艦の修復", LEFT_COLUMN_LENGTH, LEFT%
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 9
	ENDIF
	LINE_ITER ++
ENDIF
LEFT_COLUMNS:LINE_ITER = %"　[10] ｲﾝﾌｫﾒｰｼｮﾝ", LEFT_COLUMN_LENGTH, LEFT%
IF CURRENT_MODE == 10
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
ELSE
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 10
ENDIF
LINE_ITER ++

_DIFFENCE_SIDE_COUNT = 0
FOR LOCAL, 0, MAX_SHIP
	SIF STAR_POSITION_ID:PORTID == SHIP_POSITION:LOCAL && SHIP_COUNTRY:LOCAL == 国家ID_社会主義
		_DIFFENCE_SIDE_COUNT ++
NEXT
IF REL_LIKE_COUNTRY:(STAR_OWNER:PORTID):国家ID_プレイヤー == -1000 && !_DIFFENCE_SIDE_COUNT
	LEFT_COLUMNS:LINE_ITER = %"　[13] 地上戦", LEFT_COLUMN_LENGTH, LEFT%
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 13
	LINE_ITER ++
ENDIF
IF STAR_OWNER:PORTID == 国家ID_プレイヤー
	IF RELEASED_LAB
		LEFT_COLUMNS:LINE_ITER = %"　[14] 技術研究", LEFT_COLUMN_LENGTH, LEFT%
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 14
		LINE_ITER ++
	ENDIF
	LEFT_COLUMNS:LINE_ITER = %"　[15] 宇宙港スロット", LEFT_COLUMN_LENGTH, LEFT%
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 15
	LINE_ITER ++
	LEFT_COLUMNS:LINE_ITER = %"　[16] 艦船設計", LEFT_COLUMN_LENGTH, LEFT%
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 16
	LINE_ITER ++
	LEFT_COLUMNS:LINE_ITER = %"　[17] 国家運営", LEFT_COLUMN_LENGTH, LEFT%
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 17
	LINE_ITER ++
	IF IS_RELEASED_SPACE_FORCE_BASE_MODULE(PORTID)
		LEFT_COLUMNS:LINE_ITER = %"　[18] 宇宙軍基地", LEFT_COLUMN_LENGTH, LEFT%
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 18
		LINE_ITER ++
	ENDIF
	IF IS_RELEASED_RESEARCH_MODULE(PORTID)
		LEFT_COLUMNS:LINE_ITER = %"　[19] 資源探索", LEFT_COLUMN_LENGTH, LEFT%
		LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 19
		LINE_ITER ++
	ENDIF
ENDIF
LEFT_COLUMNS:LINE_ITER = %"　[20] 戦術設定", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 20
LINE_ITER ++
IF IS_COMPLETE_TECH:5
	LEFT_COLUMNS:LINE_ITER = %"　[21] テレポート", LEFT_COLUMN_LENGTH, LEFT%
	LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 21
	LINE_ITER ++
ENDIF
LEFT_COLUMNS:LINE_ITER = %"　[11] 宙域画面へ", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 11
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"　[12] 仲間と交流", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 12
LINE_ITER ++



DRAWLINE
PRINTFORML 　星(%COUNTRY_NAME:(STAR_OWNER:PORTID)%統治 - %STAR_NAME:PORTID%)

IF CURRENT_MODE == 0
	CALL SPACE_PORT(PORTID, 0, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 1
	CALL SLG_SHIP_SHOP(STAR_POSITION_ID:PORTID, STAR_OWNER:PORTID)
ELSEIF CURRENT_MODE == 2
	CALL SLG_EQUIP_SHOP(STAR_POSITION_ID:PORTID, STAR_OWNER:PORTID, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 3
	CALL SHOW_INFO_ASSET
ELSEIF CURRENT_MODE == 4
	CALL QUEST_LIST(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 5
	CALL HUMAN_LAB
ELSEIF CURRENT_MODE == 6
	CALL SLG_ITEM_SHOP(PORTID, 0)
ELSEIF CURRENT_MODE == 7
	CALL FACTORY(PORTID, 国家ID_プレイヤー, 0)
ELSEIF CURRENT_MODE == 8
	CALL SLG_SALE_SHIP(STAR_POSITION_ID:PORTID, STAR_OWNER:PORTID, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 9
	CALL SLG_REPAIR_WRECKED_SHIP(STAR_POSITION_ID:PORTID, STAR_OWNER:PORTID, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 10
	CALL INFORMATION_INDEX
ELSEIF CURRENT_MODE == 13 && REL_LIKE_COUNTRY:(STAR_OWNER:PORTID):国家ID_プレイヤー == -1000 && !_DIFFENCE_SIDE_COUNT
	CALL GROUND_BATTLE_BEGIN(PORTID)
ELSEIF CURRENT_MODE == 14 && STAR_OWNER:PORTID == 国家ID_プレイヤー && RELEASED_LAB
	CALL TECHNOLOGY_LAB
ELSEIF CURRENT_MODE == 15 && STAR_OWNER:PORTID == 国家ID_プレイヤー
	CALL EDIT_PORT_SLOT(PORTID, 1)
ELSEIF CURRENT_MODE == 16 && STAR_OWNER:PORTID == 国家ID_プレイヤー
	CALL SHIP_DESIGN
ELSEIF CURRENT_MODE == 17 && STAR_OWNER:PORTID == 国家ID_プレイヤー
	CALL STARCRAFT(PORTID)
ELSEIF CURRENT_MODE == 18 && STAR_OWNER:PORTID == 国家ID_プレイヤー && IS_RELEASED_SPACE_FORCE_BASE_MODULE(PORTID)
	CALL SPACE_FORCE_BASE
ELSEIF CURRENT_MODE == 19 && STAR_OWNER:PORTID == 国家ID_プレイヤー && IS_RELEASED_RESEARCH_MODULE(PORTID)
	CALL RESOURCE_FINDER
ELSEIF CURRENT_MODE == 20
	CALL DOCTRINE_MENU
ELSEIF CURRENT_MODE == 21 && IS_COMPLETE_TECH:5
	CALL TELEPORT(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ENDIF

IF RESULT == 0
	CURRENT_MODE = 0
	GOTO INPUT_LOOP
ELSEIF RESULT == 1
	CURRENT_MODE = 1
	GOTO INPUT_LOOP
ELSEIF RESULT == 2
	CURRENT_MODE = 2
	GOTO INPUT_LOOP
ELSEIF RESULT == 3
	CURRENT_MODE = 3
	GOTO INPUT_LOOP
ELSEIF RESULT == 4
	CURRENT_MODE = 4
	GOTO INPUT_LOOP
ELSEIF RESULT == 5 && HUMAN_LAB == CHARACTER_POSITION && QUEST_PROGRESS:0 >= 3
	CURRENT_MODE = 5
	GOTO INPUT_LOOP
ELSEIF RESULT == 6
	CURRENT_MODE = 6
	GOTO INPUT_LOOP
ELSEIF RESULT == 7
	CURRENT_MODE = 7
	GOTO INPUT_LOOP
ELSEIF RESULT == 8
	CURRENT_MODE = 8
	GOTO INPUT_LOOP
ELSEIF RESULT == 9
	CURRENT_MODE = 9
	GOTO INPUT_LOOP
ELSEIF RESULT == 10
	CURRENT_MODE = 10
	GOTO INPUT_LOOP
ELSEIF RESULT == 11
	RETURN 0
ELSEIF RESULT == 12
	RETURN 1
ELSEIF RESULT == 13
	CURRENT_MODE = 13
	GOTO INPUT_LOOP
ELSEIF RESULT == 14
	CURRENT_MODE = 14
	GOTO INPUT_LOOP
ELSEIF RESULT == 15
	CURRENT_MODE = 15
	GOTO INPUT_LOOP
ELSEIF RESULT == 16
	CURRENT_MODE = 16
	GOTO INPUT_LOOP
ELSEIF RESULT == 17
	CURRENT_MODE = 17
	GOTO INPUT_LOOP
ELSEIF RESULT == 18
	CURRENT_MODE = 18
	GOTO INPUT_LOOP
ELSEIF RESULT == 19
	CURRENT_MODE = 19
	GOTO INPUT_LOOP
ELSEIF RESULT == 20
	CURRENT_MODE = 20
	GOTO INPUT_LOOP
ELSEIF RESULT == 21
	CURRENT_MODE = 21
	GOTO INPUT_LOOP
ELSE
	GOTO INPUT_LOOP
ENDIF

;-------------------------------------------------
; 宇宙港
;-------------------------------------------------
@SPACE_PORT(PORTID, IS_NOT_STAR_PORT, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
#DIM PORTID
#DIM IS_NOT_STAR_PORT
#DIMS REF LEFT_COLUMNS
#DIM REF LEFT_COLUMNS_BUTTON_VALUE
#DIM SELECTED
#DIMS LOCAL_SHIP_NAME
#DIM POSID
#DIM LINE_ITER
#DIM ITER
#DIM TOTAL_SHIP_COUNT
#DIM SHIP_COUNTER
#DIM CONST MAX_SHOW_LIST = 30
#DIM CURRENT_PAGE
#DIM MAX_PAGE
#DIM CURRENT_SHIP_LIST, MAX_SHIP
#DIM PAGE_START
#DIM PAGE_END
#DIM LEFT_COLUMN_SIZE
#DIM SHIP_STATUS, SHIP_STATUS_LENGTH

#DIM PREVIOUS_LINECOUNT

#DIM COLUMN_ORDER = データ_艦名, データ_艦種, データ_所属, データ_任務, データ_HP, データ_シールド, データ_実体弾, データ_レーザー, データ_ミサイル, データ_艦載機, データ_魚雷, データ_ビーム, データ_対空, データ_回避
#DIM DATA_WIDTH, 船舶一覧データ数 
#DIM INDEX
;列幅
DATA_WIDTH:データ_艦名 = 20
DATA_WIDTH:データ_艦種 = 10
DATA_WIDTH:データ_所属 = 16
DATA_WIDTH:データ_任務 = 4
DATA_WIDTH:データ_HP = 11
DATA_WIDTH:データ_シールド = 11
DATA_WIDTH:データ_実体弾 = 4
DATA_WIDTH:データ_レーザー = 4
DATA_WIDTH:データ_ミサイル = 4
DATA_WIDTH:データ_艦載機 = 4
DATA_WIDTH:データ_魚雷 = 4
DATA_WIDTH:データ_ビーム = 4
DATA_WIDTH:データ_対空 = 4
DATA_WIDTH:データ_回避 = 4
INDEX = 1

TOTAL_SHIP_COUNT = 0
SHIP_COUNTER = 0
CURRENT_PAGE = 0
VARSET CURRENT_SHIP_LIST, -1

POSID = IS_NOT_STAR_PORT == 0 ? STAR_POSITION_ID:PORTID # PORT_POSITION_ID:PORTID

PREVIOUS_LINECOUNT = LINECOUNT
$INPUT_LOOP
FINDELEMENT LEFT_COLUMNS_BUTTON_VALUE, NONE_LINE
LEFT_COLUMN_SIZE = RESULT
LINE_ITER = 0
VARSET CURRENT_SHIP_LIST, -1

; UI
DRAWLINE
CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
PRINTFORML %"　停泊中の艦船", RIGHT_COLUMN_LENGTH, LEFT%
LINE_ITER ++

CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
CALL CREATE_HEADLINE_FOR_SHIP_LIST(INDEX, COLUMN_ORDER, DATA_WIDTH)
LINE_ITER ++

CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
CALL DRAW_RIGHT_COLUMN_GRAY_LINE
LINE_ITER ++
; UI以上

; CURRENT_SHIP_LISTに現在停泊中の船を入れる
FOR LOCAL, 0, MAX_SHIP
	IF SHIP_POSITION:LOCAL == POSID
		FINDELEMENT CURRENT_SHIP_LIST, -1
		CURRENT_SHIP_LIST:RESULT = LOCAL
	ENDIF
NEXT
CALL SORT_STAR_PORT_SHIPS(CURRENT_SHIP_LIST)

FINDELEMENT CURRENT_SHIP_LIST, -1
TOTAL_SHIP_COUNT = RESULT
PAGE_START = CURRENT_PAGE * MAX_SHOW_LIST
PAGE_END = PAGE_START + MAX_SHOW_LIST > TOTAL_SHIP_COUNT ? TOTAL_SHIP_COUNT # PAGE_START + MAX_SHOW_LIST
MAX_PAGE = TOTAL_SHIP_COUNT / MAX_SHOW_LIST

; 描画
FOR LOCAL, PAGE_START, PAGE_END
	CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)

	CALL CREATE_COLUMN_FOR_SHIP_LIST(CURRENT_SHIP_LIST:LOCAL, INDEX, COLUMN_ORDER, DATA_WIDTH)
	SIF SHIP_COUNTRY:(CURRENT_SHIP_LIST:LOCAL) == 国家ID_プレイヤー
		SETCOLOR 0X00FF00
	PRINTBUTTON @"　%RESULTS%", (CURRENT_SHIP_LIST:LOCAL) + 100
	RESETCOLOR
	PRINTL
	LINE_ITER ++
NEXT
;)
; 左カラムが右絡むより長かった場合の処理
FOR LOCAL, LINE_ITER, LEFT_COLUMN_SIZE
	CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
	PRINTL
	LINE_ITER ++
NEXT
PRINTFORM %"", LEFT_COLUMN_LENGTH, LEFT%
CALL DRAW_RIGHT_COLUMN_GRAY_LINE
; 描画以上
;-----------------------------------------------------
;)DISPLAY CONTROL
;-----------------------------------------------------
IF CURRENT_PAGE > 0 || CURRENT_PAGE < MAX_PAGE
	PRINTFORM %"", LEFT_COLUMN_LENGTH, LEFT%
	IF CURRENT_PAGE > 0
		LOCALS = %"[<]", 30, RIGHT%
		PRINTBUTTON @"%LOCALS%", -9999
	ELSE
		PRINTFORM %"", 30, RIGHT%
	ENDIF
	IF CURRENT_PAGE < MAX_PAGE
		PRINTBUTTON "[>]", 9999
	ENDIF
	PRINTL
	PRINTFORM %"", LEFT_COLUMN_LENGTH, LEFT%
	CALL DRAW_RIGHT_COLUMN_GRAY_LINE
ENDIF

INPUT
SELECTED = RESULT

IF RESULT == 9999
	CURRENT_PAGE ++
	CLEARLINE (LINECOUNT - PREVIOUS_LINECOUNT)
	GOTO INPUT_LOOP
ELSEIF RESULT == -9999
	CURRENT_PAGE --
	CLEARLINE (LINECOUNT - PREVIOUS_LINECOUNT)
	GOTO INPUT_LOOP
ELSEIF RESULT <= LEFT_COLUMNS_BUTTON_VALUE:(LEFT_COLUMN_SIZE - 1) || GROUPMATCH(RESULT, 20, 21)
	RETURN RESULT
ENDIF

IF RESULT >= 10000 && RESULT < 20000
	RESULT -= 10000
	;同じSORTKEYを選択された場合、ソート順を変更する
	IF RESULT == SORTKEY
		IF DESC_SORT == 1
			DESC_SORT = 0
		ELSE
			DESC_SORT = 1
		ENDIF
	ENDIF

	SORTKEY = RESULT
	CLEARLINE (LINECOUNT - PREVIOUS_LINECOUNT)
	GOTO INPUT_LOOP
ENDIF

IF RESULT == 20000
	INDEX --
	SIF INDEX < 1
		INDEX = 1
	CLEARLINE (LINECOUNT - PREVIOUS_LINECOUNT)
	GOTO INPUT_LOOP
ELSEIF RESULT == 20001
	INDEX ++
	DEBUGPRINTFORML INDEX{INDEX}
	SIF INDEX > VARSIZE("COLUMN_ORDER")
		INDEX = VARSIZE("COLUMN_ORDER")
	CLEARLINE (LINECOUNT - PREVIOUS_LINECOUNT)
	GOTO INPUT_LOOP
ENDIF

RESULT -= 100
IF SHIP_COUNTRY:RESULT == 国家ID_プレイヤー
	FOR LOCAL, 0, CHARANUM
		IF BOARDING_SHIP_ID:LOCAL == RESULT
			PRINTFORML 搭乗者: %CALLNAME:LOCAL%
			BREAK
		ENDIF
	NEXT
	CALL CREATE_WINDOW_SHIPINFO(RESULT)
	RETURN 0
ELSEIF RESULT >= 0 && RESULT < MAX_SHIP
	CALL CREATE_WINDOW_SHIPINFO(RESULT)
	RETURN 0
ELSE
	RETURN 0
ENDIF

;-----------------------------------------------------
;船舶一覧の見出し行
;PRINTBUTTONで作ったボタンの整列ってできるの・・・？
;-----------------------------------------------------
@CREATE_HEADLINE_FOR_SHIP_LIST(INDEX, COLUMN_ORDER, DATA_WIDTH)
#DIM INDEX
#DIM REF COLUMN_ORDER
#DIM REF DATA_WIDTH
#DIM TOTAL_COLUMN_WIDTH

;オフセット分 + 先頭列
TOTAL_COLUMN_WIDTH = 2 + DATA_WIDTH:データ_艦名 

IF INDEX == 1
	SETCOLORBYNAME GRAY
	PRINTPLAIN <<
	RESETCOLOR
ELSE
	PRINTBUTTON "<<", 20000
ENDIF

;先頭行は固定
PRINTFORM %"艦名", DATA_WIDTH:データ_艦名, LEFT%
PRINT  

FOR LOCAL, INDEX, VARSIZE("COLUMN_ORDER")
	SIF LOCAL == 0
		CONTINUE
	;各列のデータ長+半角スペース
	TOTAL_COLUMN_WIDTH += DATA_WIDTH:(COLUMN_ORDER:LOCAL) + 1
	SIF TOTAL_COLUMN_WIDTH > RIGHT_COLUMN_LENGTH
		BREAK
	SELECTCASE COLUMN_ORDER:LOCAL
		CASE データ_艦名
			PRINTFORM %"艦名", DATA_WIDTH:データ_艦名, LEFT%
		CASE データ_艦種
			PRINTBUTTON "   艦種   ", 10000 + ソート_艦種
		CASE データ_所属
			PRINTBUTTON "      所属      ", 10000 + SORT_AFFILIATION
		CASE データ_任務
			PRINTBUTTON "任務", 10000 + ソート_任務
		CASE データ_HP
			PRINTBUTTON "   耐久    ", 10000 + ソート_MAXHP
		CASE データ_シールド
			PRINTBUTTON "  シールド ", 10000 + ソート_MAXシールド
		CASE データ_実体弾
			PRINTBUTTON "実体弾", 10000 + ソート_実体弾
		CASE データ_レーザー
			PRINTBUTTON "ﾚｰｻﾞｰ", 10000 + ソート_レーザー
		CASE データ_ミサイル
			PRINTBUTTON "ﾐｻｲﾙ", 10000 + ソート_ミサイル
		CASE データ_艦載機
			PRINTBUTTON "航空", 10000 + ソート_艦載機
		CASE データ_魚雷
			PRINTBUTTON "雷撃", 10000 + ソート_魚雷
		CASE データ_ビーム
			PRINTBUTTON "ﾋﾞｰﾑ", 10000 + ソート_ビーム
		CASE データ_対空
			PRINTBUTTON "対空", 10000 + ソート_対空
		CASE データ_回避
			PRINTBUTTON "回避", 10000 + ソート_回避
	ENDSELECT
	PRINT  
NEXT

IF INDEX == VARSIZE("COLUMN_ORDER")
	SETCOLORBYNAME GRAY
	PRINTPLAIN >>
	RESETCOLOR
ELSE
	PRINTBUTTON ">>", 20001
ENDIF

PRINTFORML
;-----------------------------------------------------
;船舶一覧に表示する一行分の文字列を作成
;-----------------------------------------------------
@CREATE_COLUMN_FOR_SHIP_LIST(SHIP_ID, INDEX, COLUMN_ORDER, DATA_WIDTH)
#DIM SHIP_ID
#DIM INDEX
#DIM REF COLUMN_ORDER
#DIM REF DATA_WIDTH
#DIM TOTAL_COLUMN_WIDTH
#DIM FIREPOWER_LIST, 6

#DIMS COLUMN_DATA
CALL GET_TOTAL_FIREPOWER(SHIP_ID, FIREPOWER_LIST)

;先頭列の固定表示
TOTAL_COLUMN_WIDTH = 2 + DATA_WIDTH:データ_艦名
COLUMN_DATA =   %SHIP_NAME:(SHIP_ID), DATA_WIDTH:データ_艦名, LEFT%
COLUMN_DATA += "|"
FOR LOCAL, INDEX, VARSIZE("COLUMN_ORDER")
	;各列のデータ長+半角スペース
	SIF LOCAL == 0
		CONTINUE
	TOTAL_COLUMN_WIDTH += DATA_WIDTH:(COLUMN_ORDER:LOCAL) + 1
	SIF TOTAL_COLUMN_WIDTH > RIGHT_COLUMN_LENGTH
		BREAK
	SELECTCASE COLUMN_ORDER:LOCAL
		CASE データ_艦名
			COLUMN_DATA += @"%SHIP_NAME:(SHIP_ID), DATA_WIDTH:(COLUMN_ORDER:LOCAL), LEFT%"
		CASE データ_艦種
			COLUMN_DATA += @"%SHIP_CATEGORY_NAME:(SHIP_CATEGORY:SHIP_ID), DATA_WIDTH:(COLUMN_ORDER:LOCAL), LEFT%"
		CASE データ_所属
			COLUMN_DATA += @"%COUNTRY_NAME:(SHIP_COUNTRY:(SHIP_ID)), DATA_WIDTH:(COLUMN_ORDER:LOCAL), LEFT%"
		CASE データ_任務
			COLUMN_DATA += @"%GET_SHIP_MISSION_STR(SHIP_ID), DATA_WIDTH:(COLUMN_ORDER:LOCAL), LEFT%"
		CASE データ_HP
			CALL GET_SHIP_HP(SHIP_ID)
			COLUMN_DATA += @"{RESULT, 5, RIGHT}"
			COLUMN_DATA += "/"
			COLUMN_DATA += @"{RESULT + (SHIP_DAMAGE:SHIP_ID), 5, RIGHT}"
		CASE データ_シールド
			CALL GET_SHIP_SIELD(SHIP_ID)
			COLUMN_DATA += @"{RESULT, 5, RIGHT}"
			COLUMN_DATA += "/"
			CALL GET_SHIP_TOTAL_SIELD(SHIP_ID)
			COLUMN_DATA += @"{RESULT, 5, RIGHT}"
		CASE データ_実体弾
			COLUMN_DATA += @"{FIREPOWER_LIST:実体弾, 4, RIGHT}"
		CASE データ_レーザー
			COLUMN_DATA += @"{FIREPOWER_LIST:レーザー, 4, RIGHT}"
		CASE データ_ミサイル
			COLUMN_DATA += @"{FIREPOWER_LIST:ミサイル, 4, RIGHT}"
		CASE データ_艦載機
			COLUMN_DATA += @"{FIREPOWER_LIST:艦載機, 4, RIGHT}"
		CASE データ_魚雷
			COLUMN_DATA += @"{FIREPOWER_LIST:魚雷, 4, RIGHT}" 
		CASE データ_ビーム
			COLUMN_DATA += @"{FIREPOWER_LIST:ビーム, 4, RIGHT}" 
		CASE データ_対空
			CALL GET_SUB_ANTI_AIR(SHIP_ID)
			COLUMN_DATA += @"{RESULT, 4, RIGHT}" 
		CASE データ_回避
			CALL GET_AVOID(SHIP_ID)
			COLUMN_DATA += @"{RESULT, 4, RIGHT}" 
	ENDSELECT
	COLUMN_DATA += " " 
NEXT

RESULTS = %COLUMN_DATA%
;-------------------------------------------------
; CURRENT_SHIP_LISTのソート
;-------------------------------------------------
@SORT_STAR_PORT_SHIPS(CURRENT_SHIP_LIST)
#DIM REF CURRENT_SHIP_LIST
#DIM SORT_VALUE, MAX_SHIP
#DIM SORT_LIST, MAX_SHIP
#DIM COUNT_I
#DIM COUNT_J
#DIM COMPARED_A
#DIM COMPARED_B
#DIM SORT_END
#DIM FIREPOWER_LIST, 6
VARSET SORT_VALUE, -1
VARSET SORT_LIST, -1
SORT_END = 0
FOR LOCAL, 0, MAX_SHIP
	SIF CURRENT_SHIP_LIST:LOCAL == -1
		BREAK
	SELECTCASE SORTKEY
		CASE SORT_NO
			SORT_VALUE:LOCAL = CURRENT_SHIP_LIST:LOCAL
		CASE SORT_AFFILIATION
			SORT_VALUE:LOCAL = SHIP_COUNTRY:(CURRENT_SHIP_LIST:LOCAL)
		CASE ソート_艦種
			SORT_VALUE:LOCAL = SHIP_CATEGORY:(CURRENT_SHIP_LIST:LOCAL)
		CASE ソート_任務
			SORT_VALUE:LOCAL = SHIP_MISSION:(CURRENT_SHIP_LIST:LOCAL)
		CASE ソート_HP
			CALL GET_SHIP_HP(CURRENT_SHIP_LIST:LOCAL)
			SORT_VALUE:LOCAL = RESULT
		CASE ソート_MAXHP
			CALL GET_SHIP_TOTAL_HP(CURRENT_SHIP_LIST:LOCAL)
			SORT_VALUE:LOCAL = RESULT
		CASE ソート_HP割合
			CALL GET_SHIP_HP_PERCENT(CURRENT_SHIP_LIST:LOCAL)
			SORT_VALUE:LOCAL = RESULT
		CASE ソート_シールド
			CALL GET_SHIP_SIELD(CURRENT_SHIP_LIST:LOCAL)
			SORT_VALUE:LOCAL = RESULT
		CASE ソート_MAXシールド
			CALL GET_SHIP_TOTAL_SIELD(CURRENT_SHIP_LIST:LOCAL)
			SORT_VALUE:LOCAL = RESULT
		CASE ソート_シールド割合
			CALL GET_SHIP_SHIELD_PERCENT(CURRENT_SHIP_LIST:LOCAL)
			SORT_VALUE:LOCAL = RESULT
		CASE ソート_実体弾
			CALL GET_TOTAL_FIREPOWER(CURRENT_SHIP_LIST:LOCAL, FIREPOWER_LIST)
			SORT_VALUE:LOCAL = FIREPOWER_LIST:実体弾
		CASE ソート_レーザー
			CALL GET_TOTAL_FIREPOWER(CURRENT_SHIP_LIST:LOCAL, FIREPOWER_LIST)
			SORT_VALUE:LOCAL = FIREPOWER_LIST:レーザー
		CASE ソート_ミサイル
			CALL GET_TOTAL_FIREPOWER(CURRENT_SHIP_LIST:LOCAL, FIREPOWER_LIST)
			SORT_VALUE:LOCAL = FIREPOWER_LIST:ミサイル
		CASE ソート_艦載機
			CALL GET_TOTAL_FIREPOWER(CURRENT_SHIP_LIST:LOCAL, FIREPOWER_LIST)
			SORT_VALUE:LOCAL = FIREPOWER_LIST:艦載機
		CASE ソート_魚雷
			CALL GET_TOTAL_FIREPOWER(CURRENT_SHIP_LIST:LOCAL, FIREPOWER_LIST)
			SORT_VALUE:LOCAL = FIREPOWER_LIST:魚雷
		CASE ソート_ビーム
			CALL GET_TOTAL_FIREPOWER(CURRENT_SHIP_LIST:LOCAL, FIREPOWER_LIST)
			SORT_VALUE:LOCAL = FIREPOWER_LIST:ビーム
		CASE ソート_対空
			CALL GET_SUB_ANTI_AIR(CURRENT_SHIP_LIST:LOCAL)
			SORT_VALUE:LOCAL = RESULT
		CASE ソート_回避
			CALL GET_AVOID(CURRENT_SHIP_LIST:LOCAL)
			SORT_VALUE:LOCAL = RESULT
	ENDSELECT
	SORT_LIST:LOCAL = CURRENT_SHIP_LIST:LOCAL
	SORT_END ++
NEXT

SIF SORT_END < 2
	RETURN 1

FOR COUNT_I, 0, SORT_END
	FOR COUNT_J, SORT_END - 1, COUNT_I, -1
		COMPARED_A = COUNT_J - 1
		COMPARED_B = COUNT_J
		;DEBUGPRINTFORML {COUNT_J-1}-{COUNT_J} {SORT_VALUE:(COMPARED_A)} vs {SORT_VALUE:(COMPARED_B)}
		IF (DESC_SORT && SORT_VALUE:(COMPARED_A) < SORT_VALUE:(COMPARED_B)) || (!DESC_SORT && SORT_VALUE:(COMPARED_A) > SORT_VALUE:(COMPARED_B))
			SWAP SORT_LIST:COUNT_J, SORT_LIST:(COUNT_J-1)
			SWAP SORT_VALUE:COUNT_J, SORT_VALUE:(COUNT_J-1)
		ENDIF
	NEXT	
NEXT
;DEBUGPRINTFORML ------
FOR LOCAL, 0, SORT_END
	CURRENT_SHIP_LIST:LOCAL = SORT_LIST:LOCAL
	;DEBUGPRINTFORM %SHIP_NAME:(CURRENT_SHIP_LIST:LOCAL)%
	;DEBUGPRINTFORML {SORT_VALUE:LOCAL}
NEXT

;-------------------------------------------------
; DRAW RIGHT COLUMN GRAY LINE
;-------------------------------------------------
@DRAW_RIGHT_COLUMN_GRAY_LINE
#DIM ITER

SETCOLOR 0X666666
FOR ITER, 0, RIGHT_COLUMN_LENGTH
	PRINT -
NEXT
RESETCOLOR
PRINTL

;-------------------------------------------------
; PRINT LEFT COLUMN
;-------------------------------------------------
@PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
#DIMS REF LEFT_COLUMNS
#DIM REF LEFT_COLUMNS_BUTTON_VALUE
#DIM LINE_ITER
IF LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER == NONE_LINE
	PRINTFORM %"", LEFT_COLUMN_LENGTH, LEFT%
ELSEIF LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER == WHITE_LINE
	PRINTFORM %LEFT_COLUMNS:LINE_ITER, LEFT_COLUMN_LENGTH, LEFT%
ELSEIF LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER == GRAY_LINE
	SETCOLOR 0X666666
	PRINTFORM %LEFT_COLUMNS:LINE_ITER, LEFT_COLUMN_LENGTH, LEFT%
	RESETCOLOR
ELSEIF LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER == GREEN_LINE
	SETCOLOR 0X00FF00
	PRINTFORM %LEFT_COLUMNS:LINE_ITER, LEFT_COLUMN_LENGTH, LEFT%
	RESETCOLOR
ELSE
	PRINTBUTTON @"%LEFT_COLUMNS:LINE_ITER%", LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER
ENDIF

;-------------------------------------------------
; 艦船購入メニュー
;-------------------------------------------------
@SLG_SHIP_SHOP(PORT_POSID, OWNER)
#DIM PORT_POSID
#DIM OWNER
#DIM DUMMY
#DIM SHIP_STATUS, SHIP_STATUS_LENGTH
#DIM SHIP_MODEL_ID
#DIMS TARGET_SHIP_NAME
#DIMS TARGET_SHIP_PURCHASE_CONDITION
#DIM 入力値

#DIM CAN_SALE_SHIP, MAX_SALE_TERMS

$INPUT_LOOP
PRINTL
CUSTOMDRAWLINE =
IF OWNER == 国家ID_プレイヤー
	PRINTFORML 　艦船の購入 - 所持金: %MONEY_FORMAT(MONEY)%
ELSE
	PRINTFORML 　艦船の購入 - 所持金: %MONEY_FORMAT(MONEY)%  %COUNTRY_NAME:OWNER%との友好度: {REL_LIKE_COUNTRY:OWNER:国家ID_プレイヤー}
ENDIF
DRAWLINE
FOR SHIP_MODEL_ID, 0, SHIP_CLASS_TOTAL_COUNT
	TRYCCALLFORM GET_SHIP_STATUS_{SHIP_MODEL_ID}(SHIP_STATUS)
		VARSET CAN_SALE_SHIP, -1
		CAN_SALE_SHIP:建造可能国家 = 0
		TRYCALLFORM IS_SALE_SHIP_{SHIP_MODEL_ID}(CAN_SALE_SHIP)
		IF OWNER == 国家ID_プレイヤー
		; 自国生産だったら必要技術を見て処理する(自国生産時の定型処理)
			IF CAN_SALE_SHIP:必要技術ID == 自国建造不可
				RESULT = 0
			ELSEIF CAN_SALE_SHIP:必要技術ID == 技術不要
				RESULT = 1
			ELSEIF IS_COMPLETE_TECH:(CAN_SALE_SHIP:必要技術ID)
				RESULT = 1
			ENDIF
		; 自国生産時の定型処理ここまで
		ELSE
		; 他国で購入するなら国家と好感度の制限に引っかからないか見る(他国購入時の定型処理)
			GETBIT CAN_SALE_SHIP:建造可能国家, OWNER + 国家ID_ビット演算ヘッダー調整
			SIF REL_LIKE_COUNTRY:OWNER:国家ID_プレイヤー < CAN_SALE_SHIP:必要好感度
				RESULT = 0
		; 他国購入時の定型処理ここまで
		ENDIF
		; 強制可不可判定が-1以上なら強制可不可判定でRESULTを上書き
		SIF CAN_SALE_SHIP:強制可不可判定 >= 0
			RESULT = CAN_SALE_SHIP:強制可不可判定
		IF RESULT != 1
		; 買えない場合
			TRYCALLFORM GET_SHIP_NAME_{SHIP_MODEL_ID}
			TARGET_SHIP_NAME = %RESULTS%
			GETBIT CAN_SALE_SHIP:建造可能国家, OWNER + 国家ID_ビット演算ヘッダー調整
			IF CAN_SALE_SHIP:特殊条件 == 1
			; 特殊条件フラグが立っているなら販売条件表示と表示するかの判断を貰ってくる
				TRYCALLFORM TERM_OF_SALE_{SHIP_MODEL_ID}
				SIF RESULT == 0
					CONTINUE
				TARGET_SHIP_PURCHASE_CONDITION = %RESULTS%
			ELSEIF RESULT == 1
			; この港で建造しうるのに買えず・特殊条件フラグが無いのなら定型文表示を出力する
				TARGET_SHIP_PURCHASE_CONDITION =
				FOR COUNT, 1, MAX_COUNTRY
					GETBIT CAN_SALE_SHIP:建造可能国家, COUNT + 国家ID_ビット演算ヘッダー調整
					IF RESULT == 1
						IF TARGET_SHIP_PURCHASE_CONDITION == ""
						; 建造可能なのが1国だけなら勢力名・複数国ならボカす
							TARGET_SHIP_PURCHASE_CONDITION = %COUNTRY_NAME:COUNT%
						ELSE
							TARGET_SHIP_PURCHASE_CONDITION = 発注する国家
							BREAK
							; 国家名を全部羅列したいなら
							;TARGET_SHIP_PURCHASE_CONDITION =%TARGET_SHIP_PURCHASE_CONDITION%・%COUNTRY_NAME:COUNT%
						ENDIF
					ENDIF
				NEXT
				TARGET_SHIP_PURCHASE_CONDITION = %TARGET_SHIP_PURCHASE_CONDITION%からの好感度が{CAN_SALE_SHIP:必要好感度}以上
				SIF CAN_SALE_SHIP:必要技術ID >= 0
					TARGET_SHIP_PURCHASE_CONDITION = %TARGET_SHIP_PURCHASE_CONDITION%、自国生産の場合は技術研究が
				TARGET_SHIP_PURCHASE_CONDITION = %TARGET_SHIP_PURCHASE_CONDITION%必要
			ELSE
			; この港で建造しえないのなら表示しない
				CONTINUE
			ENDIF
			TARGET_SHIP_PURCHASE_CONDITION = %TARGET_SHIP_NAME, 20, LEFT%[販売条件]: %TARGET_SHIP_PURCHASE_CONDITION%
			SETCOLOR 0X666666
			PRINTFORML 　 %TARGET_SHIP_PURCHASE_CONDITION%
			RESETCOLOR
			CONTINUE
		ENDIF
		;買えるなら表示処理
		IF OWNER == 国家ID_プレイヤー
			TRYCALLFORM GET_SHIP_NAME_{SHIP_MODEL_ID}
			PRINTBUTTON @"　%RESULTS, 20, LEFT% $0", SHIP_MODEL_ID
		ELSE
			TRYCALLFORM GET_SHIP_STATUS_{SHIP_MODEL_ID}(SHIP_STATUS)
			TRYCALLFORM GET_SHIP_NAME_{SHIP_MODEL_ID}
			PRINTBUTTON @"　 %RESULTS, 20, LEFT% %MONEY_FORMAT(SHIP_STATUS:SHIP_PRICE), 12, RIGHT%", SHIP_MODEL_ID
		ENDIF
		PRINTL
	CATCH
		CONTINUE
	ENDCATCH
NEXT
IF OWNER == 国家ID_プレイヤー
	FOR SHIP_MODEL_ID, 0, MAX_ORIGIN_SHIP
		SIF !ORIGIN_SHIPCATEGORY:SHIP_MODEL_ID
			CONTINUE
		PRINTBUTTON @"　%ORIGIN_SHIP_NAME:SHIP_MODEL_ID, 20, LEFT% $0", SHIP_MODEL_ID + SHIP_MODEL_BUFFER
		PRINTL
	NEXT
ENDIF
PRINTBUTTON "　 [9999] 戻る", 9999

INPUT
入力値 = RESULT
SIF RESULT == 9999
	RETURN
IF 入力値 >= SHIP_MODEL_BUFFER && 入力値 < SHIP_MODEL_BUFFER + MAX_ORIGIN_SHIP && OWNER == 国家ID_プレイヤー
	SIF !ORIGIN_SHIPCATEGORY:(入力値 - SHIP_MODEL_BUFFER)
		GOTO INPUT_LOOP
	CALL ORIGIN_SHIP_DESCRIPTION(入力値 - SHIP_MODEL_BUFFER)
	CALL BUILD_ORIGIN_SHIP(PORT_POSID, OWNER, 国家ID_プレイヤー, 入力値 - SHIP_MODEL_BUFFER)
	GOTO INPUT_LOOP
ENDIF

TRYCCALLFORM GET_SHIP_NAME_{入力値}
	RESULT = 1
	TRYCALLFORM IS_SALE_{入力値}
	SIF RESULT == 0
		GOTO INPUT_LOOP
	PRINTL
	PRINTL
	CUSTOMDRAWLINE =
	CALL SHIP_STATUS_DISPLAY(入力値)
	DRAWLINE
	CALL BUILD_SHIP(PORT_POSID, OWNER, 国家ID_プレイヤー, 入力値, RESULTS, DUMMY)
	GOTO INPUT_LOOP
CATCH
	GOTO INPUT_LOOP
ENDCATCH
;-------------------------------------------------
; 装備更新
;-------------------------------------------------
@SLG_EQUIP_SHOP(PORTPOSID, OWNER, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
#DIM PORTPOSID
#DIM OWNER
#DIMS REF LEFT_COLUMNS
#DIM REF LEFT_COLUMNS_BUTTON_VALUE
#DIM SHIP_ID
#DIM SELECTED
#DIM LINE_ITER
#DIM LEFT_COLUMN_SIZE
#DIM SLOT_ID
#DIM SHIP_STATUS, SHIP_STATUS_LENGTH

FINDELEMENT LEFT_COLUMNS_BUTTON_VALUE, NONE_LINE
LEFT_COLUMN_SIZE = RESULT

$INPUT_LOOP

LINE_ITER = 0
CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
PRINTL 　装備更新 - 古い装備は破棄されます
LINE_ITER ++

CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
CALL DRAW_RIGHT_COLUMN_GRAY_LINE
LINE_ITER ++


FOR SHIP_ID, 0, MAX_SHIP
	SIF SHIP_COUNTRY:SHIP_ID != 国家ID_プレイヤー
		CONTINUE
	SIF SHIP_POSITION:SHIP_ID != PORTPOSID
		CONTINUE
	CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
	PRINTBUTTON @"[{SHIP_ID, 3, RIGHT}] %SHIP_NAME:SHIP_ID, 30, LEFT%", SHIP_ID + 100
	PRINTL
	LINE_ITER ++
NEXT

; 左カラムが右絡むより長かった場合の処理
FOR LOCAL, LINE_ITER, LEFT_COLUMN_SIZE
	CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
	PRINTL
	LINE_ITER ++
NEXT
PRINTFORM %"", LEFT_COLUMN_LENGTH, LEFT%
CALL DRAW_RIGHT_COLUMN_GRAY_LINE

INPUT

IF (RESULT >= 0 && RESULT < LEFT_COLUMN_SIZE) || RESULT ==  20
	RETURN RESULT
ENDIF


SHIP_ID = RESULT - 100
IF SHIP_ID >= 0 && SHIP_ID < MAX_SHIP && SHIP_COUNTRY:SHIP_ID == 国家ID_プレイヤー && SHIP_POSITION:SHIP_ID == PORTPOSID
	$INPUT_LOOP2
	VARSET SHIP_STATUS, 0
	TRYCALLFORM GET_SHIP_STATUS_{SHIP_MODEL:SHIP_ID}(SHIP_STATUS)
	RESULTS = %NO_ITEM%
	PRINTBUTTON @"%"名称変更", 20, LEFT% %SHIP_NAME:SHIP_ID%", 0
	PRINTL
	SETCOLOR 0XFF7F7F
	FOR SLOT_ID, 0, SHIP_STATUS:SHIP_MAIN_WEAPON_SLOT
		TRYCALLFORM GET_MAIN_WEAPON_NAME_{SHIP_EQUIP:主砲:SLOT_ID:SHIP_ID}
		LOCALS = 主砲{SLOT_ID + 1}変更
		PRINTBUTTON @"%LOCALS, 20, LEFT% %RESULTS%", 10 + SLOT_ID
		PRINTL
	NEXT
	RESETCOLOR
	SETCOLOR 0XFF7FFF
	FOR SLOT_ID, 0, SHIP_STATUS:SHIP_SUB_WEAPON_SLOT
		TRYCALLFORM GET_SUB_WEAPON_NAME_{SHIP_EQUIP:副砲:SLOT_ID:SHIP_ID}
		LOCALS = 副砲{SLOT_ID + 1}変更
		PRINTBUTTON @"%LOCALS, 20, LEFT% %RESULTS%", 20 + SLOT_ID
		PRINTL
	NEXT
	RESETCOLOR
	SETCOLOR 0XBF7FFF
	FOR SLOT_ID, 0, SHIP_STATUS:SHIP_SIELD_SLOT
		TRYCALLFORM GET_SIELD_NAME_{SHIP_EQUIP:シールド:SLOT_ID:SHIP_ID}
		LOCALS = シールド{SLOT_ID + 1}変更
		PRINTBUTTON @"%LOCALS, 20, LEFT% %RESULTS%", 30 + SLOT_ID
		PRINTL
	NEXT
	RESETCOLOR
	SETCOLOR 0X7FBFFF
	FOR SLOT_ID, 0, SHIP_STATUS:SHIP_ARMOR_SLOT
		TRYCALLFORM GET_ARMOR_NAME_{SHIP_EQUIP:装甲:SLOT_ID:SHIP_ID}
		LOCALS = 装甲{SLOT_ID + 1}変更
		PRINTBUTTON @"%LOCALS, 20, LEFT% %RESULTS%", 40 + SLOT_ID
		PRINTL
	NEXT
	RESETCOLOR
	SETCOLOR 0X7FFFFF
	TRYCALLFORM GET_ENGIN_NAME_{SHIP_EQUIP:エンジン:0:SHIP_ID}
	PRINTBUTTON @"%"エンジン変更", 20, LEFT% %RESULTS%", 5
	PRINTL
	RESETCOLOR
	SETCOLOR 0X7FFFBF
	TRYCALLFORM GET_COMPUTER_NAME_{SHIP_EQUIP:AI:0:SHIP_ID}
	PRINTBUTTON @"%"AI変更", 20, LEFT% %RESULTS%", 6
	PRINTL
	RESETCOLOR
	SETCOLOR 0XFFFF7F
	TRYCALLFORM GET_SENSOR_NAME_{SHIP_EQUIP:センサー:0:SHIP_ID}
	PRINTBUTTON @"%"センサー変更", 20, LEFT% %RESULTS%", 7
	PRINTL
	RESETCOLOR
	SETCOLOR 0XFFBF7F
	FOR SLOT_ID, 0, SHIP_STATUS:SHIP_OPTION_SLOT
		RESULTS = %NO_ITEM%
		TRYCALLFORM GET_OPTION_NAME_{SHIP_EQUIP:オプション:SLOT_ID:SHIP_ID}
		LOCALS = オプション{SLOT_ID + 1}変更
		PRINTBUTTON @"%LOCALS, 20, LEFT% %RESULTS%", 80 + SLOT_ID
		PRINTL
	NEXT
	RESETCOLOR
	PRINTBUTTON "テンプレートで購入", 8
	PRINTL
	PRINTBUTTON "[9] 戻る", 9
ELSEIF RESULT == 9999
	RETURN
ELSE
	GOTO INPUT_LOOP
ENDIF
INPUT
SELECTCASE RESULT
	CASE 0
		CALL CHANGE_SHIP_NAME(SHIP_ID)
		GOTO INPUT_LOOP2
	CASE 10 TO SHIP_STATUS:SHIP_MAIN_WEAPON_SLOT - 1 + 10
		CALL EQUIP_UPDATE_0(SHIP_ID, OWNER, RESULT % 10)
		GOTO INPUT_LOOP2
	CASE 20 TO SHIP_STATUS:SHIP_SUB_WEAPON_SLOT - 1 + 20
		CALL EQUIP_UPDATE_1(SHIP_ID, OWNER, RESULT % 20)
		GOTO INPUT_LOOP2
	CASE 30 TO SHIP_STATUS:SHIP_SIELD_SLOT - 1 + 30
		CALL EQUIP_UPDATE_2(SHIP_ID, OWNER, RESULT % 30)
		GOTO INPUT_LOOP2
	CASE 40 TO SHIP_STATUS:SHIP_ARMOR_SLOT - 1 + 40
		CALL EQUIP_UPDATE_3(SHIP_ID, OWNER, RESULT % 40)
		GOTO INPUT_LOOP2
	CASE 5
		CALL EQUIP_UPDATE_4(SHIP_ID, OWNER)
		GOTO INPUT_LOOP2
	CASE 6
		CALL EQUIP_UPDATE_5(SHIP_ID, OWNER)
		GOTO INPUT_LOOP2
	CASE 7
		CALL EQUIP_UPDATE_6(SHIP_ID, OWNER)
		GOTO INPUT_LOOP2
	CASE 80 TO SHIP_STATUS:SHIP_OPTION_SLOT - 1 + 80
		CALL EQUIP_UPDATE_7(SHIP_ID, OWNER, RESULT % 80)
		GOTO INPUT_LOOP2
	CASE 8
		CALL EQUIP_UPDATE_BY_TEMPLATE(SHIP_ID, OWNER)
		GOTO INPUT_LOOP2
	CASE 9
		GOTO INPUT_LOOP
	CASEELSE
		GOTO INPUT_LOOP2
ENDSELECT

;-------------------------------------------------
; 艦船売却
;-------------------------------------------------
@SLG_SALE_SHIP(PORT_POSID, OWNER, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
#DIM PORT_POSID
#DIM OWNER
#DIMS REF LEFT_COLUMNS
#DIM REF LEFT_COLUMNS_BUTTON_VALUE
#DIM LINE_ITER
#DIM LEFT_COLUMN_SIZE
#DIM 入力値
#DIM SHIP_STATUS, SHIP_STATUS_LENGTH

FINDELEMENT LEFT_COLUMNS_BUTTON_VALUE, NONE_LINE
LEFT_COLUMN_SIZE = RESULT
$INPUT_LOOP
LINE_ITER = 0

CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
CALL DRAW_RIGHT_COLUMN_GRAY_LINE
LINE_ITER ++

CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
PRINTFORML 艦船売却 %CALLNAME:MASTER%のいる宇宙港に停泊中の船を売却できます。
LINE_ITER ++

CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
CALL DRAW_RIGHT_COLUMN_GRAY_LINE
LINE_ITER ++

; 艦船一覧
FOR LOCAL, 0, MAX_SHIP
	SIF SHIP_COUNTRY:LOCAL != 国家ID_プレイヤー
		CONTINUE
	SIF SHIP_POSITION:LOCAL != PORT_POSID
		CONTINUE
	CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
	IF SHIP_MODEL:LOCAL >= SHIP_MODEL_BUFFER
		LOCAL:1 = ORIGIN_SHIP_PRICE:(SHIP_MODEL:LOCAL - SHIP_MODEL_BUFFER)
	ELSE
		TRYCALLFORM GET_SHIP_STATUS_{SHIP_MODEL:LOCAL}(SHIP_STATUS)
		LOCAL:1 = SHIP_STATUS:SHIP_PRICE
	ENDIF 
	LOCAL:1 = LOCAL:1 / 10
	LOCALS = %TOSTR(LOCAL:1, "$###,###")%
	PRINTBUTTON @"%SHIP_NAME:LOCAL% %LOCALS%", LOCAL + 100
	PRINTL
	LINE_ITER++
NEXT

; 左カラムが右絡むより長かった場合の処理
FOR LOCAL, LINE_ITER, LEFT_COLUMN_SIZE
	CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
	PRINTL
	LINE_ITER ++
NEXT


INPUT
IF (RESULT >= 0 && RESULT < LEFT_COLUMN_SIZE) || GROUPMATCH(RESULT, 20, 21)
	RETURN RESULT
ENDIF
入力値 = RESULT - 100
IF 入力値 >= 0 && 入力値 < MAX_SHIP
	SIF SHIP_COUNTRY:入力値 != 国家ID_プレイヤー
		GOTO INPUT_LOOP
	SIF SHIP_POSITION:入力値 != PORT_POSID
		GOTO INPUT_LOOP
	PRINTL
	PRINTFORML %SHIP_NAME:入力値%を売却してよろしいですか?
	CALL ASK_YN
	SIF RESULT == 1
		GOTO INPUT_LOOP
	CALL GET_SHIP_TOTAL_HP(入力値)
	SHIP_DAMAGE:入力値 = RESULT
	CALL RETIRE_BROKEN_SHIP
	LOCAL:2 = -1
	FINDELEMENT BOARDING_SHIP_ID, 入力値
	SIF RESULT != -1
		BOARDING_SHIP_ID:RESULT = -1
	FOR LOCAL, 0, CHARANUM
		SIF RIDING_WITH:LOCAL == 入力値
			RIDING_WITH:LOCAL = -1
	NEXT
	FOR LOCAL, 0, MAX_SHIP
		IF SHIP_FOLLOW:LOCAL == 入力値
			SHIP_MISSION:LOCAL = 待機
			SHIP_FOLLOW:LOCAL = -1
		ENDIF
	NEXT
	MONEY += LOCAL:1
	MONEY:OWNER -= LOCAL:1
ENDIF
GOTO INPUT_LOOP


;-------------------------------------------------
; テレポート
;-------------------------------------------------
@TELEPORT(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, IS_PORT = -1)
#DIMS REF LEFT_COLUMNS
#DIM REF LEFT_COLUMNS_BUTTON_VALUE
#DIM IS_PORT
#DIM LINE_ITER
#DIM LEFT_COLUMN_SIZE
#DIM 入力値

FINDELEMENT LEFT_COLUMNS_BUTTON_VALUE, NONE_LINE
LEFT_COLUMN_SIZE = RESULT
$INPUT_LOOP
LINE_ITER = 0

CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
CALL DRAW_RIGHT_COLUMN_GRAY_LINE
LINE_ITER ++

CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
PRINTFORML テレポート 任意の星に移動できます
LINE_ITER ++

CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
CALL DRAW_RIGHT_COLUMN_GRAY_LINE
LINE_ITER ++

; ワープ先一覧を表示
FOR LOCAL, 0, MAX_STAR
	SIF STAR_OWNER:LOCAL != 国家ID_プレイヤー && REL_LIKE_COUNTRY:(STAR_OWNER:LOCAL):国家ID_プレイヤー < -900
		CONTINUE
	CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
	PRINTBUTTON @"[%COUNTRY_NAME:(STAR_OWNER:LOCAL), 18, LEFT%] セクション{STAR_POSITION_ID:LOCAL / 10000, 2, LEFT} %STAR_NAME:LOCAL%", LOCAL + 100
	PRINTL
	LINE_ITER++
NEXT
FOR LOCAL, 0, MAX_PORT
	SIF PORT_OWNER:LOCAL < 国家ID_プレイヤー
		CONTINUE
	SIF PORT_OWNER:LOCAL != 国家ID_プレイヤー && REL_LIKE_COUNTRY:(PORT_OWNER:LOCAL):国家ID_プレイヤー < -900
		CONTINUE
	CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
	PRINTBUTTON @"[%COUNTRY_NAME:(PORT_OWNER:LOCAL), 18, LEFT%] セクション{PORT_POSITION_ID:LOCAL / 10000, 2, LEFT} 宇宙港{LOCAL}", LOCAL + 100 + MAX_STAR
	PRINTL
	LINE_ITER++
NEXT

; 左カラムが右絡むより長かった場合の処理
FOR LOCAL, LINE_ITER, LEFT_COLUMN_SIZE
	CALL PRINT_LEFT_COLUMN(LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE, LINE_ITER)
	PRINTL
	LINE_ITER ++
NEXT


INPUT
IF IS_PORT == -1 && ((RESULT >= 0 && RESULT < LEFT_COLUMN_SIZE) || GROUPMATCH(RESULT, 20, 21))
	RETURN RESULT
ELSEIF IS_PORT && ((RESULT >= 0 && RESULT < LEFT_COLUMN_SIZE) || GROUPMATCH(RESULT, 18, 19))
	RETURN RESULT
ENDIF
入力値 = RESULT - 100
IF 入力値 >= 0 && 入力値 < MAX_STAR
	SIF STAR_OWNER:入力値 != 国家ID_プレイヤー && REL_LIKE_COUNTRY:(STAR_OWNER:入力値):国家ID_プレイヤー < -900
		CONTINUE
	PRINTL
	PRINTFORML %STAR_NAME:入力値%にテレポートしてよろしいですか?
	CALL ASK_YN
	SIF RESULT == 1
		GOTO INPUT_LOOP
	CHARACTER_POSITION:MASTER = STAR_POSITION_ID:入力値
	BOARDING_SHIP_ID:MASTER = -1
	RIDING_WITH:MASTER = -1
ELSEIF 入力値 >= MAX_STAR && 入力値 < MAX_STAR + MAX_PORT
	入力値 -= MAX_STAR
	SIF PORT_OWNER:入力値 < 国家ID_プレイヤー
		CONTINUE
	SIF PORT_OWNER:入力値 != 国家ID_プレイヤー && REL_LIKE_COUNTRY:(PORT_OWNER:入力値):国家ID_プレイヤー < -900
		CONTINUE
	PRINTL
	PRINTFORML 宇宙港{入力値}にテレポートしてよろしいですか?
	CALL ASK_YN
	SIF RESULT == 1
		GOTO INPUT_LOOP
	CHARACTER_POSITION:MASTER = PORT_POSITION_ID:入力値
	BOARDING_SHIP_ID:MASTER = -1
	RIDING_WITH:MASTER = -1
ENDIF
GOTO INPUT_LOOP

;-------------------------------------------------
; 入港可能かチェック
;-------------------------------------------------
@CHECK_ARRIVAL(SHIP_ID)
#FUNCTION
#DIM SHIP_ID
SIF SHIP_ID < 0 || SHIP_ID >= MAX_SHIP
	RETURNF 0
FOR LOCAL, 0, MAX_STAR
	IF STAR_POSITION_ID:LOCAL == SHIP_POSITION:SHIP_ID
		; TODO 敵対チェックを入れる
		RETURNF 1
	ENDIF
NEXT
RETURNF 0

;-------------------------------------------------
; ターンエンド
;-------------------------------------------------
@SLG_TURN_END(IS_TIME_PROGRESS)
#DIM IS_TIME_PROGRESS
#DIM POS_X
#DIM POS_Y
#DIM ITER
#DIM STAR_ID


CALL SPACE_DAILY
CALL BEGIN_SLG_EVENT
CALL SLG_AI
CALL PATH_WARP_GATE
CALL UPDATE_CHARACTER_POSITION

CALL REPAIR_SHIP_AT_END_OF_TURN

LOCAL = GET_SPACE_FORCE_OCCUPANCY_PENALTY()
IF LOCAL > 0
	MONEY -= LOCAL
	PRINTFORML 宇宙軍許容量を超えたため、ペナルティとして%TOSTR(LOCAL, "$###,###")%払いました
	PRINTFORML （※宇宙軍許容量を増やすためには宇宙港スロットへの宇宙軍基地の設置、研究投資によるアップグレードが必要だ）
ENDIF

;; クエスト地点であればイベント呼び出し
TRYCALLFORM QUEST_REACH_PLACE_{IS_QUEST(CHARACTER_POSITION:MASTER)}

SIF IS_TIME_PROGRESS
	DAY ++
CALL RESOURCE_FINDER_AT_TURN_END
CALL TURNEND_COMMON
VARSET SHIP_SECTOR_CACHE

;-------------------------------------------------
; MAP_POS_ID2PORTID
;-------------------------------------------------
@MAP_POS_ID2PORTID(MAP_POS_ID)
#DIM MAP_POS_ID

FOR LOCAL, 0, MAX_STAR
	SIF STAR_POSITION_ID:LOCAL == MAP_POS_ID
		RETURN LOCAL
NEXT

;-------------------------------------------------
; キャラクターの現在位置更新
;-------------------------------------------------
@UPDATE_CHARACTER_POSITION
#DIM ID

; キャラクターの移動(船に乗っているキャラクターは労働しない)
FOR ID, 0, CHARANUM
	IF BOARDING_SHIP_ID:ID != -1
		CHARACTER_POSITION:ID = SHIP_POSITION:(BOARDING_SHIP_ID:ID)
		MASTER_LEFT_DAY:ID = -1
	ELSEIF RIDING_WITH:ID != -1
		CHARACTER_POSITION:ID = SHIP_POSITION:(RIDING_WITH:ID)
		MASTER_LEFT_DAY:ID = -1
	ENDIF
NEXT

SIF TARGET != -1 && CHARACTER_POSITION:0 != CHARACTER_POSITION:TARGET
	TARGET = -1

;-------------------------------------------------
; 指定座標のポートの所持者返却
;-------------------------------------------------
@GET_PORT_OWNER(POSID)
#FUNCTION
#DIM POSID

LOCAL = FINDELEMENT(STAR_POSITION_ID, POSID)
SIF LOCAL != -1
	RETURNF STAR_OWNER:LOCAL
LOCAL = FINDELEMENT(PORT_POSITION_ID, POSID)
SIF LOCAL != -1
	RETURNF PORT_OWNER:LOCAL
RETURNF -1
