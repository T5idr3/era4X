;-----------------------------------
; 装備の換装(汎用)
;-----------------------------------
@CHANGE_EQIP(EQUIP_TYPE, SHIP_ID, SALE_COUNTRY, EQUIP_ID, SLOT_ID, AUTO_MODE)
#DIM SHIP_ID
#DIM SALE_COUNTRY
#DIM EQUIP_ID
#DIM SLOT_ID
#DIM USE_RESOURCE, ITEM_LENGTH
#DIM ITER
#DIM CAN_BUY
#DIM DYNAMIC _SHIP_STATUS, STATUS_LENGTH
#DIM EQUIP_TYPE
#DIM AUTO_MODE

VARSET USE_RESOURCE, 0
CAN_BUY = 1

TRYCALLFORM GET_%EQUIP_CATEGORY_NAME_EN:EQUIP_TYPE%_STATUS_{EQUIP_ID}(_SHIP_STATUS)

; 自動処理(「テンプレートで購入」を想定)不要の場合なら
SIF AUTO_MODE != 1
	CALL SPEC_DISPLAY (EQUIP_TYPE, SHIP_ID, SALE_COUNTRY, EQUIP_ID, SLOT_ID, _SHIP_STATUS)

IF SHIP_COUNTRY:SHIP_ID != SALE_COUNTRY
	IF _SHIP_STATUS:PRICE > MONEY:(SHIP_COUNTRY:SHIP_ID == 国家ID_プレイヤー ? 0 # SHIP_COUNTRY:SHIP_ID)
		IF SHIP_COUNTRY:SHIP_ID == 国家ID_プレイヤー
			SETCOLOR 0XFF0000
			PRINTW [CAUTION] 資金不足で装備を購入できません
			RESETCOLOR
		ENDIF
		RETURN 0
	ENDIF
ENDIF

TRYCALLFORM  GET_%EQUIP_CATEGORY_NAME_EN:EQUIP_TYPE%_RESOURCE_{EQUIP_ID}(USE_RESOURCE)
CALL USE_RESOURCE_CHECK(SHIP_POSITION:SHIP_ID, SALE_COUNTRY, SHIP_COUNTRY:SHIP_ID, EQUIP_ID, USE_RESOURCE)
CAN_BUY = RESULT

IF CAN_BUY == 0
	SETCOLOR 0XFF0000
	PRINTW [CAUTION] 資源不足で装備を購入できません
	RESETCOLOR
	RETURN 0
ENDIF
SIF AUTO_MODE != 1
	CALL CHECK_BUY


; 買う場合の購入処理
IF SHIP_COUNTRY:SHIP_ID == 国家ID_プレイヤー && RESULT == 1 || SHIP_COUNTRY:SHIP_ID != 国家ID_プレイヤー
	FOR ITER, 0, ITEM_LENGTH
		SIF USE_RESOURCE:ITER == 0
			CONTINUE
		RESULT = REMOVE_RESOURCE(SHIP_POSITION:SHIP_ID, SALE_COUNTRY, ITER, USE_RESOURCE:ITER)
	NEXT
	SHIP_EQUIP:EQUIP_TYPE:SLOT_ID:SHIP_ID = EQUIP_ID
	IF SHIP_COUNTRY:SHIP_ID != SALE_COUNTRY
		MONEY -= _SHIP_STATUS:PRICE
	ENDIF
ELSE
	RETURN 0
ENDIF
RETURN 1

;-----------------------------------
;性能変動表示
;-----------------------------------
@SPEC_FLUCTUATION(OLD_SPEC, NEW_SPEC)
#DIM OLD_SPEC
#DIM NEW_SPEC

IF OLD_SPEC < NEW_SPEC
	SETCOLOR 0x8888FF
	PRINTFORML 　　　{NEW_SPEC - OLD_SPEC, 8, RIGHT}   UP
ELSEIF OLD_SPEC > NEW_SPEC
	SETCOLOR 0xFF8888
	PRINTFORML 　　　{OLD_SPEC - NEW_SPEC, 8, RIGHT} DOWN
ELSE
	PRINTL
ENDIF
RESETCOLOR

;-----------------------------------
;性能変動表示(より低い方が望ましいステータス用)
;-----------------------------------
@SPEC_FLUCTUATION_REVERSE(OLD_SPEC, NEW_SPEC)
#DIM OLD_SPEC
#DIM NEW_SPEC

IF OLD_SPEC < NEW_SPEC
	SETCOLOR 0xFF8888
	PRINTFORML 　　　{NEW_SPEC - OLD_SPEC, 8, RIGHT}   UP
ELSEIF OLD_SPEC > NEW_SPEC
	SETCOLOR 0x8888FF
	PRINTFORML 　　　{OLD_SPEC - NEW_SPEC, 8, RIGHT} DOWN
ELSE
	PRINTL
ENDIF
RESETCOLOR

;-----------------------------------
;性能変動表示(より低い方が望ましいステータス用・千分率相当データ→パーセント化表示版)
;-----------------------------------
@SPEC_FLUCTUATION_PERMILLE_PERCENT_REVERSE(OLD_SPEC, NEW_SPEC)
#DIM OLD_SPEC
#DIM NEW_SPEC

IF OLD_SPEC < NEW_SPEC
	SETCOLOR 0xFF8888
	PRINTFORML 　　　%TOSTR(NEW_SPEC - OLD_SPEC, "##0,.0%"), 8, RIGHT%   UP
ELSEIF OLD_SPEC > NEW_SPEC
	SETCOLOR 0x8888FF
	PRINTFORML 　　　%TOSTR(OLD_SPEC - NEW_SPEC, "##0,.0%"), 8, RIGHT% DOWN
ELSE
	PRINTL
ENDIF
RESETCOLOR
;-----------------------------------
;性能表示
;-----------------------------------
@SPEC_DISPLAY (EQUIP_TYPE, SHIP_ID, SALE_COUNTRY, EQUIP_ID, SLOT_ID, _SHIP_STATUS)
#DIM SHIP_ID
#DIM SALE_COUNTRY
#DIM EQUIP_ID
#DIM SLOT_ID
#DIM REF _SHIP_STATUS
#DIM EQUIP_TYPE
#DIM WEAPON_TYPE_NUM
#DIM OLDEQIP_ID
#DIM DYNAMIC OLDEQIP_STATUS, STATUS_LENGTH
#DIM OLDWEAPON_TYPE

#DIM CONST HEADWORD_DIGIT = 16
#DIM CONST SPEC_NUM_DIGIT = 10
#DIM CONST SPEC_TABLE_DIGIT = 35


DRAWLINE
CALL EQUIP_STATUS_DESCRIPTION(EQUIP_TYPE, EQUIP_ID)
DRAWLINE
;比較用データ取得
OLDEQIP_ID = SHIP_EQUIP:EQUIP_TYPE:SLOT_ID:SHIP_ID
TRYCALLFORM GET_%EQUIP_CATEGORY_NAME_EN:EQUIP_TYPE%_STATUS_{OLDEQIP_ID}(OLDEQIP_STATUS)
PRINTL 性能比較
SETCOLOR カラー_選択不可
PRINTFORML %"", HEADWORD_DIGIT,LEFT%  %@"%"OLD", SPEC_NUM_DIGIT,LEFT% → %"NEW", SPEC_NUM_DIGIT%",SPEC_TABLE_DIGIT, LEFT%
RESETCOLOR
SELECTCASE EQUIP_TYPE
	CASE 主砲

		IF _SHIP_STATUS:WEAPON_TYPE == 射出装置
			CALL LAUNCHER_SPEC_DISPLAY(SHIP_ID, SLOT_ID, EQUIP_ID, _SHIP_STATUS, OLDEQIP_STATUS)
			CALL LAUNCHER_PAYLOAD_SIZE_CHECK(EQUIP_ID, SHIP_EQUIP:射出対象:SLOT_ID:SHIP_ID)
			IF RESULT == 0
				SETCOLOR カラー_注意			
				PRINTL 注意：更新後はサイズ不適合につき使用不能
				RESETCOLOR
			ENDIF
		ENDIF
		WEAPON_TYPE_NUM = _SHIP_STATUS:WEAPON_TYPE
		OLDWEAPON_TYPE = OLDEQIP_STATUS:WEAPON_TYPE
		PRINTFORM %"ダメージ", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE, _SHIP_STATUS:DAMAGE)
		PRINTFORM %"射撃レート", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT}発/ターン",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:FIRE_RATE, _SHIP_STATUS:FIRE_RATE)
		PRINTFORM %"命中率", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:HIT_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:HIT_RATE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:HIT_RATE, _SHIP_STATUS:HIT_RATE)
		PRINTFORM %"有効距離", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:FIRE_RANGE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:FIRE_RANGE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:FIRE_RANGE, _SHIP_STATUS:FIRE_RANGE)
		PRINTFORML %"サイズ", HEADWORD_DIGIT,LEFT%: {OLDEQIP_STATUS:SIZE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIZE, SPEC_NUM_DIGIT}
		IF _SHIP_STATUS:WEAPON_TYPE == 艦載機
			PRINTFORML %"耐久", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:AIR_SHIP_HP, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:AIR_SHIP_HP, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			PRINTFORML %"空対空攻撃力", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ANTI_AIR, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ANTI_AIR, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			PRINTFORML %"搭載数", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		ENDIF
		PRINTFORML %"属性", HEADWORD_DIGIT,LEFT%: %WEAPON_TYPE_NAME:OLDWEAPON_TYPE, SPEC_NUM_DIGIT,LEFT% → %WEAPON_TYPE_NAME:WEAPON_TYPE_NUM, SPEC_NUM_DIGIT%
		
		PRINTFORM %"被クリティカル率", HEADWORD_DIGIT,LEFT%: %@"%(TOSTR(OLDEQIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT,LEFT% → %(TOSTR(_SHIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT%",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION_PERMILLE_PERCENT_REVERSE(OLDEQIP_STATUS:CRITICAL_RISK, _SHIP_STATUS:CRITICAL_RISK)
		PRINTL
		IF _SHIP_STATUS:WEAPON_TYPE == 艦載機
			PRINTFORM %"最大対艦DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:AIR_SHIP_COUNT)
			PRINTFORM %"実効対艦DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT / 100, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE * _SHIP_STATUS:AIR_SHIP_COUNT / 100, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT / 100, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE * _SHIP_STATUS:AIR_SHIP_COUNT / 100)
			PRINTFORM %"最大対空DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT, _SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:AIR_SHIP_COUNT)
			PRINTFORM %"実効対空DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT / 100, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE * _SHIP_STATUS:AIR_SHIP_COUNT / 100, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT / 100, _SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE * _SHIP_STATUS:AIR_SHIP_COUNT / 100)
		ELSE
			PRINTFORM %"最大DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE)
			PRINTFORM %"実効DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE / 100, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE / 100, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE / 100, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE / 100)
		ENDIF

	CASE 副砲
		WEAPON_TYPE_NUM = _SHIP_STATUS:WEAPON_TYPE
		OLDWEAPON_TYPE = OLDEQIP_STATUS:WEAPON_TYPE
		PRINTFORM %"ダメージ", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE, _SHIP_STATUS:DAMAGE)
		PRINTFORM %"射撃レート", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT}発/ターン",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:FIRE_RATE, _SHIP_STATUS:FIRE_RATE)
		PRINTFORM %"対空攻撃力", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ANTI_AIR, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ANTI_AIR, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:ANTI_AIR, _SHIP_STATUS:ANTI_AIR)
		PRINTFORM %"命中率", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:HIT_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:HIT_RATE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:HIT_RATE, _SHIP_STATUS:HIT_RATE)
		PRINTFORM %"有効距離", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:FIRE_RANGE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:FIRE_RANGE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:FIRE_RANGE, _SHIP_STATUS:FIRE_RANGE)
		PRINTFORML %"サイズ", HEADWORD_DIGIT,LEFT%: {OLDEQIP_STATUS:SIZE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIZE, SPEC_NUM_DIGIT}
		PRINTFORML %"属性", HEADWORD_DIGIT,LEFT%: %WEAPON_TYPE_NAME:OLDWEAPON_TYPE, SPEC_NUM_DIGIT,LEFT% → %WEAPON_TYPE_NAME:WEAPON_TYPE_NUM, SPEC_NUM_DIGIT%
		PRINTFORM %"被クリティカル率", HEADWORD_DIGIT,LEFT%: %@"%(TOSTR(OLDEQIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT,LEFT% → %(TOSTR(_SHIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT%",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION_PERMILLE_PERCENT_REVERSE(OLDEQIP_STATUS:CRITICAL_RISK, _SHIP_STATUS:CRITICAL_RISK)
		PRINTL
		PRINTFORM %"最大対艦DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE)
		PRINTFORM %"実効対艦DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE / 100, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE / 100, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE / 100, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE / 100)
		PRINTFORM %"最大対空DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE, _SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE)
		PRINTFORM %"実効対空DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE / 100, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE / 100, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE / 100, _SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE / 100)
	CASE シールド
		PRINTFORM %"シールド", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:SIELD, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIELD, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:SIELD, _SHIP_STATUS:SIELD)
		PRINTFORM %"シールド回復", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:SIELD_RECOVER, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIELD_RECOVER, SPEC_NUM_DIGIT}/ターン",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:SIELD_RECOVER, _SHIP_STATUS:SIELD_RECOVER)
		PRINTFORML %"サイズ", HEADWORD_DIGIT,LEFT%: {OLDEQIP_STATUS:SIZE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIZE, SPEC_NUM_DIGIT}
		PRINTFORM %"被クリティカル率", HEADWORD_DIGIT,LEFT%: %@"%(TOSTR(OLDEQIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT,LEFT% → %(TOSTR(_SHIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT%",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION_PERMILLE_PERCENT_REVERSE(OLDEQIP_STATUS:CRITICAL_RISK, _SHIP_STATUS:CRITICAL_RISK)
	CASE 装甲
		PRINTFORM %"装甲", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ARMOR, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ARMOR, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:ARMOR, _SHIP_STATUS:ARMOR)
		IF OLDEQIP_STATUS:AVOID != 0 ||_SHIP_STATUS:AVOID !=0
			PRINTFORM %"回避", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:AVOID, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:AVOID, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:AVOID, _SHIP_STATUS:AVOID)
		ENDIF
		PRINTFORML %"サイズ", HEADWORD_DIGIT,LEFT%: {OLDEQIP_STATUS:SIZE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIZE, SPEC_NUM_DIGIT}
		PRINTFORM %"被クリティカル率", HEADWORD_DIGIT,LEFT%: %@"%(TOSTR(OLDEQIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT,LEFT% → %(TOSTR(_SHIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT%",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION_PERMILLE_PERCENT_REVERSE(OLDEQIP_STATUS:CRITICAL_RISK, _SHIP_STATUS:CRITICAL_RISK)
	CASE エンジン
		PRINTFORM %"スピード", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:SPEED, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SPEED, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:SPEED, _SHIP_STATUS:SPEED)
		PRINTFORM %"回避", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:AVOID, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:AVOID, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:AVOID, _SHIP_STATUS:AVOID)
		PRINTFORML %"サイズ", HEADWORD_DIGIT,LEFT%: {OLDEQIP_STATUS:SIZE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIZE, SPEC_NUM_DIGIT}
		RESULTS:0 = %TOSTR(OLDEQIP_STATUS:CRITICAL_RISK, "##0,.0%")%
		RESULTS:1 = %TOSTR(_SHIP_STATUS:CRITICAL_RISK, "##0,.0%")%	
		PRINTFORM %"被クリティカル率", HEADWORD_DIGIT,LEFT%: %@"%(TOSTR(OLDEQIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT,LEFT% → %(TOSTR(_SHIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT%",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION_PERMILLE_PERCENT_REVERSE(OLDEQIP_STATUS:CRITICAL_RISK, _SHIP_STATUS:CRITICAL_RISK)
	CASE AI
		PRINTFORM %"回避", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:AVOID, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:AVOID, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:AVOID, _SHIP_STATUS:AVOID)
		PRINTFORM %"命中", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:HIT_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:HIT_RATE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:HIT_RATE, _SHIP_STATUS:HIT_RATE)
		PRINTFORM %"追加攻撃回数", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:FIRE_RATE, _SHIP_STATUS:FIRE_RATE)
		PRINTFORM %"被クリティカル率", HEADWORD_DIGIT,LEFT%: %@"%(TOSTR(OLDEQIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT,LEFT% → %(TOSTR(_SHIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT%",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION_PERMILLE_PERCENT_REVERSE(OLDEQIP_STATUS:CRITICAL_RISK, _SHIP_STATUS:CRITICAL_RISK)
	CASE センサー
		PRINTFORM %"センサー範囲", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:SENSOR, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SENSOR, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:SENSOR, _SHIP_STATUS:SENSOR)
	CASE オプション
		IF OLDEQIP_STATUS:SIELD != 0 || _SHIP_STATUS:SIELD != 0
			PRINTFORM %"シールド", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:SIELD, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIELD, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:SIELD, _SHIP_STATUS:SIELD)
		ENDIF
		IF OLDEQIP_STATUS:SIELD_RECOVER != 0 || _SHIP_STATUS:SIELD_RECOVER != 0
			PRINTFORM %"シールド回復", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:SIELD_RECOVER, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIELD_RECOVER, SPEC_NUM_DIGIT}/ターン",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:SIELD_RECOVER, _SHIP_STATUS:SIELD_RECOVER)
		ENDIF
		IF OLDEQIP_STATUS:ARMOR != 0 || _SHIP_STATUS:ARMOR != 0
			PRINTFORM %"装甲", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ARMOR, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ARMOR, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:ARMOR, _SHIP_STATUS:ARMOR)
		ENDIF
		IF OLDEQIP_STATUS:SPEED != 0 || _SHIP_STATUS:SPEED != 0
			PRINTFORM %"スピード", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:SPEED, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SPEED, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:SPEED, _SHIP_STATUS:SPEED)
		ENDIF
		IF OLDEQIP_STATUS:AVOID != 0 || _SHIP_STATUS:AVOID != 0
			PRINTFORM %"回避", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:AVOID, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:AVOID, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:AVOID, _SHIP_STATUS:AVOID)
		ENDIF
		IF OLDEQIP_STATUS:SENSOR != 0 || _SHIP_STATUS:SENSOR != 0
			PRINTFORM %"センサー範囲", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:SENSOR, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SENSOR, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:SENSOR, _SHIP_STATUS:SENSOR)
		ENDIF
		IF OLDEQIP_STATUS:CRITICAL_RISK != 0 || _SHIP_STATUS:CRITICAL_RISK != 0
			PRINTFORM %"被クリティカル率", HEADWORD_DIGIT,LEFT%: %@"%(TOSTR(OLDEQIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT,LEFT% → %(TOSTR(_SHIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT%",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION_PERMILLE_PERCENT_REVERSE(OLDEQIP_STATUS:CRITICAL_RISK, _SHIP_STATUS:CRITICAL_RISK)
		ENDIF
	CASE 射出対象

		CALL LAUNCHER_STATUS_CALC_EQUIP_ID(SHIP_EQUIP:主砲:SLOT_ID:SHIP_ID, EQUIP_ID, _SHIP_STATUS)
		CALL LAUNCHER_STATUS_CALC_EQUIP_ID(SHIP_EQUIP:主砲:SLOT_ID:SHIP_ID, OLDEQIP_ID, OLDEQIP_STATUS)
		; (下流の処理が変更されたら)価格回りがおかしくなりうる処理を挟んでいるので確実を期している
		CALL GET_OPTIONAL_EQUIP_STATUS(射出対象 ,EQUIP_ID, PRICE)
		_SHIP_STATUS:PRICE = RESULT
		WEAPON_TYPE_NUM = _SHIP_STATUS:WEAPON_TYPE
		OLDWEAPON_TYPE = OLDEQIP_STATUS:WEAPON_TYPE
		PRINTFORM %"ダメージ", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE, _SHIP_STATUS:DAMAGE)
		PRINTFORM %"射撃レート", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT}発/ターン",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:FIRE_RATE, _SHIP_STATUS:FIRE_RATE)
		PRINTFORM %"命中率", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:HIT_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:HIT_RATE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:HIT_RATE, _SHIP_STATUS:HIT_RATE)
		PRINTFORM %"有効距離", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:FIRE_RANGE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:FIRE_RANGE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:FIRE_RANGE, _SHIP_STATUS:FIRE_RANGE)
		PRINTFORML %"サイズ", HEADWORD_DIGIT,LEFT%: {OLDEQIP_STATUS:SIZE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:SIZE, SPEC_NUM_DIGIT}
		IF _SHIP_STATUS:WEAPON_TYPE == 艦載機
			PRINTFORML %"耐久", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:AIR_SHIP_HP, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:AIR_SHIP_HP, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			PRINTFORML %"空対空攻撃力", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ANTI_AIR, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ANTI_AIR, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			PRINTFORML %"搭載数", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		ENDIF
		PRINTFORML %"属性", HEADWORD_DIGIT,LEFT%: %WEAPON_TYPE_NAME:OLDWEAPON_TYPE, SPEC_NUM_DIGIT,LEFT% → %WEAPON_TYPE_NAME:WEAPON_TYPE_NUM, SPEC_NUM_DIGIT%
		
		PRINTFORM %"被クリティカル率", HEADWORD_DIGIT,LEFT%: %@"%(TOSTR(OLDEQIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT,LEFT% → %(TOSTR(_SHIP_STATUS:CRITICAL_RISK, "##0,.0%")), SPEC_NUM_DIGIT%",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION_PERMILLE_PERCENT_REVERSE(OLDEQIP_STATUS:CRITICAL_RISK, _SHIP_STATUS:CRITICAL_RISK)
		PRINTL
		TRYCALLFORM GET_PAYLOAD_VOLUME_{EQUIP_ID}
		RESULT:1 = RESULT:0
		TRYCALLFORM GET_PAYLOAD_VOLUME_{OLDEQIP_ID}
		PRINTFORM %"容積", HEADWORD_DIGIT,LEFT%: %@"{RESULT:0, SPEC_NUM_DIGIT,LEFT} → {RESULT:1, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
		CALL SPEC_FLUCTUATION_REVERSE(RESULT:0, RESULT:1)
		PRINTL
		IF _SHIP_STATUS:WEAPON_TYPE == 艦載機
			PRINTFORM %"最大対艦DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:AIR_SHIP_COUNT)
			PRINTFORM %"実効対艦DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT / 100, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE * _SHIP_STATUS:AIR_SHIP_COUNT / 100, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT / 100, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE * _SHIP_STATUS:AIR_SHIP_COUNT / 100)
			PRINTFORM %"最大対空DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:AIR_SHIP_COUNT, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT, _SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:AIR_SHIP_COUNT)
			PRINTFORM %"実効対空DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT / 100, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE * _SHIP_STATUS:AIR_SHIP_COUNT / 100, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:ANTI_AIR * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE * OLDEQIP_STATUS:AIR_SHIP_COUNT / 100, _SHIP_STATUS:ANTI_AIR * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE * _SHIP_STATUS:AIR_SHIP_COUNT / 100)
		ELSE
			PRINTFORM %"最大DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE)
			PRINTFORM %"実効DPT", HEADWORD_DIGIT,LEFT%: %@"{OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE / 100, SPEC_NUM_DIGIT,LEFT} → {_SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE / 100, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
			CALL SPEC_FLUCTUATION(OLDEQIP_STATUS:DAMAGE * OLDEQIP_STATUS:FIRE_RATE * OLDEQIP_STATUS:HIT_RATE / 100, _SHIP_STATUS:DAMAGE * _SHIP_STATUS:FIRE_RATE * _SHIP_STATUS:HIT_RATE / 100)
		ENDIF
	;CASEELSE
ENDSELECT
DRAWLINE
SIF SHIP_COUNTRY:SHIP_ID == SALE_COUNTRY
	SETCOLOR カラー_選択不可
PRINTFORML %"値段", HEADWORD_DIGIT,LEFT%: %TOSTR(_SHIP_STATUS:PRICE, "$###,###,###,###")% / %TOSTR(MONEY, "###,###,###,###")%
RESETCOLOR


;-----------------------------------
;ランチャーデータ表示
;-----------------------------------
@LAUNCHER_SPEC_DISPLAY(SHIP_ID, SLOT_ID, NEW_LAUNCHER_ID, NEW_WEAPON_STATUS, OLD_WEAPON_STATUS)
#DIM SHIP_ID
#DIM SLOT_ID
#DIM NEW_LAUNCHER_ID

#DIM NEW_LAUNCHER_DATA, LAUNCHER_DATA_LENGTH
#DIM OLD_LAUNCHER_DATA, LAUNCHER_DATA_LENGTH

#DIM CONST HEADWORD_DIGIT = 16
#DIM CONST SPEC_NUM_DIGIT = 10
#DIM CONST SPEC_TABLE_DIGIT = 35

#DIM REF NEW_WEAPON_STATUS
#DIM REF OLD_WEAPON_STATUS

VARSET NEW_LAUNCHER_DATA
VARSET OLD_LAUNCHER_DATA

TRYCALLFORM GET_LAUNCHER_DATA_{SHIP_EQUIP:主砲:SLOT_ID:SHIP_ID}(OLD_LAUNCHER_DATA)
TRYCALLFORM GET_LAUNCHER_DATA_{NEW_LAUNCHER_ID}(NEW_LAUNCHER_DATA)


PRINTL 射出装置データ
PRINTFORM %"対応サイズ", HEADWORD_DIGIT,LEFT%: %@"{OLD_LAUNCHER_DATA:PAYLOAD_MAX_SIZE, SPEC_NUM_DIGIT,LEFT} → {NEW_LAUNCHER_DATA:PAYLOAD_MAX_SIZE, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
CALL SPEC_FLUCTUATION(OLD_LAUNCHER_DATA:PAYLOAD_MAX_SIZE, NEW_LAUNCHER_DATA:PAYLOAD_MAX_SIZE)
PRINTFORM %"容量", HEADWORD_DIGIT,LEFT%: %@"{OLD_LAUNCHER_DATA:WEAPONS_BAY, SPEC_NUM_DIGIT,LEFT} → {NEW_LAUNCHER_DATA:WEAPONS_BAY, SPEC_NUM_DIGIT}",SPEC_TABLE_DIGIT, LEFT%
CALL SPEC_FLUCTUATION((OLD_LAUNCHER_DATA:WEAPONS_BAY), (NEW_LAUNCHER_DATA:WEAPONS_BAY))
PRINTL
PRINTL 武装データ

;射出対象のデータを入れる

IF OLD_WEAPON_STATUS:WEAPON_TYPE == 射出装置
	CALL LAUNCHER_STATUS_CALC_EQUIP_ID(SHIP_EQUIP:主砲:SLOT_ID:SHIP_ID, SHIP_EQUIP:射出対象:SLOT_ID:SHIP_ID, OLD_WEAPON_STATUS)
ENDIF
CALL LAUNCHER_STATUS_CALC_EQUIP_ID(NEW_LAUNCHER_ID, SHIP_EQUIP:射出対象:SLOT_ID:SHIP_ID, NEW_WEAPON_STATUS)

; 価格回りがおかしくなる処理を挟んでいるので修正
CALL GET_OPTIONAL_EQUIP_STATUS(主砲 ,NEW_LAUNCHER_ID, PRICE)
NEW_WEAPON_STATUS:PRICE = RESULT