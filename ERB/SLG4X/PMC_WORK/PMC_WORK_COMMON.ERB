;------------------------------
; 汎用関数
;------------------------------
; PMC ユニット編集画面
@PMC_EDIT_UNIT
#DIM _ITER

CALL CHECK_PMC_INITED

$INPUT_LOOP
DRAWLINE
PRINTFORML ユニットを編成してください
PRINTL
FOR LOCAL, 0, MAX_PMC_UNIT
  PRINTBUTTON @"第{LOCAL + 1}ユニット", LOCAL
  PRINTL
  PRINT 所属: 
  _ITER = 0
  FOR LOCAL:1, 0, CHARANUM
    SIF CFLAG:(LOCAL:1):所属 != CFLAG:MASTER:所属
      CONTINUE
    SIF UNIT_ID:(LOCAL:1) == LOCAL
    PRINTFORM %CALLNAME:(LOCAL:1)% {ABL:(LOCAL:1):白兵}-{ABL:(LOCAL:1):超能力} 
    _ITER ++
  NEXT
  SIF !_ITER
    PRINTFORM ---
  PRINTL
NEXT
PRINTBUTTON "[決定]", MAX_PMC_UNIT

INPUT
IF RESULT == MAX_PMC_UNIT
  RETURN
ELSEIF RESULT >= 0 && RESULT < MAX_PMC_UNIT
  CALL PMC_EDIT_UNIT_MEMBER(RESULT)
ENDIF
GOTO INPUT_LOOP

; PMC ユニットメンバー編集画面
@PMC_EDIT_UNIT_MEMBER(UNIT)
#DIM UNIT
#DIM DYNAMIC _ITER
#DIM _MEMBER
#DIM _入力値

$INPUT_LOOP
DRAWLINE
PRINTFORML ユニットメンバーを選択してください
PRINTL

_ITER = 0
FOR LOCAL, 0, CHARANUM
  SIF CFLAG:LOCAL:所属 != CFLAG:MASTER:所属
    CONTINUE
  SIF UNIT_ID:LOCAL != UNIT
    CONTINUE
  PRINTBUTTON @"%CALLNAME:LOCAL, 20, LEFT% 白兵: {ABL:LOCAL:白兵, 3, RIGHT} 超能力: {ABL:LOCAL:超能力, 3, RIGHT}", _ITER
  PRINTL
  _ITER ++
NEXT
FOR LOCAL, _ITER, MAX_PMC_UNIT_MEMBER
  LOCALS = %"---", 20, LEFT%
  PRINTBUTTON @"%LOCALS% 白兵: --- 超能力: ---", _ITER
  PRINTL
  _ITER ++
NEXT
PRINTBUTTON "[決定]", MAX_PMC_UNIT_MEMBER

INPUT
_入力値 = RESULT
IF RESULT == MAX_PMC_UNIT_MEMBER
  RETURN
ELSEIF RESULT >= 0 && RESULT < MAX_PMC_UNIT_MEMBER
  CALL SELECT_UNIT_MEMBER
  _MEMBER = RESULT
  SIF RESULT == -1
    GOTO INPUT_LOOP
  IF RESULT == -2
    _ITER = 0
    FOR LOCAL, 0, CHARANUM
      SIF CFLAG:LOCAL:所属 != CFLAG:MASTER:所属
        CONTINUE
      SIF UNIT_ID:LOCAL != UNIT
        CONTINUE
      IF _ITER == _入力値
        UNIT_ID:LOCAL = -1
        BREAK
      ENDIF
      _ITER ++
    NEXT
    GOTO INPUT_LOOP
  ENDIF
  IF UNIT_ID:RESULT >= 0 && UNIT_ID:RESULT < MAX_PMC_UNIT && UNIT_ID:RESULT != UNIT
    PRINTFORML %CALLNAME:RESULT%はすでに第{UNIT}ユニットに所属しています
    PRINTFORML 異動させますか？
    CALL ASK_YN
    SIF RESULT
      GOTO INPUT_LOOP
  ENDIF
  _ITER = 0
  FOR LOCAL, 0, CHARANUM
    SIF CFLAG:LOCAL:所属 != CFLAG:MASTER:所属
      CONTINUE
    SIF UNIT_ID:LOCAL != UNIT
      CONTINUE
    IF _入力値 == _ITER
      UNIT_ID:LOCAL = -1
      BREAK
    ENDIF
    _ITER ++
  NEXT
  UNIT_ID:_MEMBER = UNIT
ENDIF
GOTO INPUT_LOOP

; PMC ユニットメンバー選択
@SELECT_UNIT_MEMBER
#DIM _CHARA_ID

$INPUT_LOOP
CLEARLINE 1
FOR LOCAL, 0, MAX_PMC_UNIT
  PRINTFORML 第{LOCAL + 1}ユニット
  FOR _CHARA_ID, 0, CHARANUM
    SIF CFLAG:_CHARA_ID:所属 != CFLAG:MASTER:所属
      CONTINUE
    SIF UNIT_ID:_CHARA_ID != LOCAL
      CONTINUE
    PRINT  
    PRINTBUTTON @"[%CALLNAME:_CHARA_ID%]", _CHARA_ID
  NEXT
  PRINTL 
NEXT
PRINTFORML 未配置
FOR _CHARA_ID, 0, CHARANUM
  SIF CFLAG:_CHARA_ID:所属 != CFLAG:MASTER:所属
    CONTINUE
  SIF UNIT_ID:_CHARA_ID != -1
    CONTINUE
  PRINT  
  PRINTBUTTON @"[%CALLNAME:_CHARA_ID%]", _CHARA_ID
NEXT
PRINTBUTTON "[除隊]", -1
PRINTL 
DRAWLINE
PRINTBUTTON "[キャンセル]", CHARANUM
INPUT
IF RESULT == CHARANUM
  RETURN -1
ELSEIF RESULT == -1
  RETURN -2
ELSEIF RESULT >= 0 && RESULT < CHARANUM && CFLAG:RESULT:所属 == CFLAG:MASTER:所属
  RETURN RESULT
ENDIF
GOTO INPUT_LOOP

@CHECK_PMC_INITED
#DIM DYNAMIC _ITER

FOR LOCAL, 0, CHARANUM
  SIF CFLAG:LOCAL:所属 != CFLAG:MASTER:所属
    CONTINUE
  SIF UNIT_ID:LOCAL == 0
    _ITER ++
NEXT
IF _ITER > MAX_PMC_UNIT_MEMBER
  PRINTFORMW 編成に異常が確認されたため、編成を初期化いたします
  VARSET UNIT_ID, -1
ENDIF

;戦闘ユニット選択
@SELECT_PMC_BATTLE_UNIT
#DIM _ITER
#DIM DYNAMIC _JOINABLE_UNIT

CALL CHECK_PMC_INITED

$INPUT_LOOP
DRAWLINE
PRINTFORML 戦闘に参加するユニットを選択してください
PRINTL
FOR LOCAL, 0, MAX_PMC_UNIT
  FINDELEMENT UNIT_ID, LOCAL
  SIF RESULT == -1
    CONTINUE
  PRINTBUTTON @"第{LOCAL + 1}ユニット", LOCAL
  PRINTL
  PRINT 所属: 
  _ITER = 0
  FOR LOCAL:1, 0, CHARANUM
    SIF CFLAG:(LOCAL:1):所属 != CFLAG:MASTER:所属
      CONTINUE
    SIF UNIT_ID:(LOCAL:1) == LOCAL
    PRINTFORM %CALLNAME:(LOCAL:1)% {ABL:(LOCAL:1):白兵}-{ABL:(LOCAL:1):超能力} 
    _ITER ++
  NEXT
  SIF !_ITER
    PRINTFORM ---
  PRINTL
  _JOINABLE_UNIT ++
NEXT
SIF _JOINABLE_UNIT == 0
  RETURN -1

INPUT
IF RESULT >= 0 && RESULT < MAX_PMC_UNIT
  RETURN RESULT
ENDIF
GOTO INPUT_LOOP