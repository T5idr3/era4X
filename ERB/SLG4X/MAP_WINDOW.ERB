;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;@DRAW_WINDOW(SECTOR_ID,wFLAG)
;;; 	引数１	SECTOR_ID	: 表示するセクターXX
;;;							: 中心マップおよび右セクターマップの表示
;;;		引数２	SELECTED	: 特にクリックされた地点　[SECTER][POS_X][POSY] 6桁
;;;							: 有効な座標６ケタ、もしくは SECTRE2ケタ+9999：セクターマップ切り替え用
;;;		引数３	SHIP_ID		; 主体となる船 左上情報ウィンドウ5用 -1で非表示
;;; 	引数４	wFLAG		: 描画画面切り替えフラグ。　wFLAG == 1 は宙域画面　コントローラーWINDOW0を出す
;;;							: 1=コントローラー表示  0:非表示 (移動先、交易指定などで使用)
;;; 画面用に宙域マップを描画する　SECTOR_IDで指定されたものを表示する
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@DRAW_WINDOW(SECTOR_ID, SELECTED = -1, SHIP_ID = -1, Wnd0_FLAG = 0)
#DIM SECTOR_ID
#DIM SELECTED
#DIM SHIP_ID
#DIM Wnd0_FLAG		;window0 コントローラー表示するフラグ
#DIM Wnd4_LINES = 0	;window4 MainInfo表示内容行数
#DIM DYNAMIC OPWnd , 10	;ウィンドウ群展開に使用
#DIM WndCOUNT			;ウィンドウ群展開に使用

;;移動用宙域画面でも、あなたが船に乗ってない場合、コントローラ表示させない
SIF Wnd0_FLAG == 1 && BOARDING_SHIP_ID < 0 
	Wnd0_FLAG = 0

;;お約束 WINDOW未生成の場合作成する
CALL SETUP_WINDOW

;;;各windowの内容を作成　再作成しなくていいトコまでしてしまってるけどあとまわし
;;内容作成　window0 宙域画面・左側コントローラー部分
SIF Wnd0_FLAG == 1 
	CALL CREATE_WINDOW_CONTROLL

;;;内容作成　window1 宙域画面・中央マップ部分
CALL CREATE_WINDOW_MAINMAP(SECTOR_ID)

;;;内容作成　window2 宙域画面・右側セクター全体マップ部分
CALL CREATE_WINDOW_SUBMAP(SECTOR_ID)

;;;内容作成　window3 宙域画面・右下情報枠 / 座標オブジェクト表示
CALL CREATE_WINDOW_SUBINFO(SELECTED)

;;;内容作成　window4.宙域画面・下部メッセージ / 艦隊情報
;IF Wnd0_FLAG == 1
	CALL CREATE_WINDOW_MAININFO(SELECTED)
	Wnd4_LINES = RESULT
;ENDIF

;内容作成　window5 船情報概略
SIF SHIP_ID >= 0
	CALL CREATE_WINDOW_SHIPINFO_MAIN(SHIP_ID)

CALL DRAW_SPACE_FORCE_OCCUPANCY

DRAWLINE
;;窓1：中央マップ部分 / 窓２:右側セクター全体マップ部分 / 窓３:右下情報枠 は常にある
	OPWnd = 1, 2, 3, 8
	WndCOUNT = 4
	
IF Wnd0_FLAG == 1	;窓０コントローラーあり
	OPWnd:WndCOUNT = 0
	WndCOUNT ++
ENDIF
IF Wnd4_LINES >= 1	;窓４下部メッセージ / 艦隊情報 に記入あり
	OPWnd:WndCOUNT = 4
	WndCOUNT ++
ELSE				;;あとで表示調整するため、非表示なら破棄しとく
	CALL WndMgr_DestroyWindow( 4 )
ENDIF
IF SHIP_ID >= 0		;窓５ 船情報概略 
	OPWnd:WndCOUNT = 5
	WndCOUNT ++
ENDIF

;;;指定windowの表示を実行
CALL WndMgr_Display( WndCOUNT, OPWnd, 0 )
;window4が存在しない場合ズレ補正に空行
CALL WndMgr_Exist( 4 )
IF RESULT:0 == 0
	PRINTL
	PRINTL
	PRINTL
ENDIF

;;;window4 展開用に数値保持
RETURN Wnd4_LINES

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;@CREATE_WINDOW_CONTROLL
;;; window0 コントローラーの作成
;;; とりあえず形つくっただけ手抜き
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CREATE_WINDOW_CONTROLL
#DIM windowID = 0
#DIM 色
#DIM STATUS, STATUS_LENGTH

	CALL WndMgr_WindowTitle( windowID , @"%SHIP_NAME:BOARDING_SHIP_ID%" )
	
	CALL ID2POS(SHIP_POSITION:BOARDING_SHIP_ID)
	
	CALL WndMgr_TextSet( windowID , 0, @"@B:{SHIP_POSITION:BOARDING_SHIP_ID}@ 現在地:#{RESULT:0,2,RIGHT} X:{RESULT:1,2,RIGHT} Y:{RESULT:2,2,RIGHT} @/B@" )
	CALL WndMgr_TextSet( windowID , 3, @"　　　　@B:w@[↑w]@/B@" )
	CALL WndMgr_TextSet( windowID , 4, @"　@B:a@[←a]@/B@　　　 @B:d@[d→]@/B@" )
	CALL WndMgr_TextSet( windowID , 5, @"　　　　@B:s@[↓s]@/B@" )

	TRYCALLFORM GET_ENGIN_STATUS_{SHIP_EQUIP:エンジン:0:BOARDING_SHIP_ID}(STATUS)
	IF STATUS:SPEED >= 2
	色 = 0xFFA500	;orange
		IF FLAG:502 	;低速移動フラグ(0= 制限なし 1= 移動量１)
			CALL WndMgr_TextSet( windowID , 7, @"　( @B:x@高速 [x] @C:{色}@低速@/C@@/B@ )" )
		ELSE
			CALL WndMgr_TextSet( windowID , 7, @"　( @B:x@@C:{色}@高速@/C@ [x] 低速@/B@ )" )
		ENDIF
	ELSE
	CALL WndMgr_TextSet( windowID , 7, @"" )
	ENDIF

IF SHIP_MISSION:BOARDING_SHIP_ID != 待機
色 = 0xFFFF00
	CALL WndMgr_TextSet( windowID , 3, @"　 　@C:{色}@自動航行中@/C@" )	
	CALL WndMgr_TextSet( windowID , 4, @"" )
	CALL WndMgr_TEXTSET( windowID , 5, @" @B:v@[ 進行 ]@/B@　　@B:c@[ 解除 ]@/B@" )
	CALL WndMgr_TextSet( windowID , 7, @"" )
	FLAG:502 = 0
ENDIF



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;@CREATE_WINDOW_MAINMAP(SECTOR_ID)
;;;　引数１：セクター 2ケタ
;;; window1 に引数１で指定されたメインマップ宙域図を作成
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CREATE_WINDOW_MAINMAP(SECTOR_ID)
#DIM windowID = 1
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
#DIM ITER
#DIM PORT_COUNT
#DIM POSID
#DIMS タイル
#DIM 色
#DIM KEY

	CALL WndMgr_WindowTitle( windowID, @" セクター＃{SECTOR_ID} " ) ;枠タイトル

FOR Y_POS, 0, MAP_HEIGHT
	FOR X_POS, 0, MAP_WIDTH
		CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
		POSID = RESULT
		;;未探索領域は黒塗りマスで終わり
		IF CLEARMAP:SECTOR_ID:X_POS:Y_POS == 0
			CALL ID2TILE(0)
		;;発見済みである
		ELSE
			;;星の場合
			IF MAP:SECTOR_ID:X_POS:Y_POS == 星
				CALL ID2TILE(MAP:SECTOR_ID:X_POS:Y_POS)
				FOR ITER, 0, 星系数
					IF 星系座標ID:ITER == POSID
						SIF STAR_OWNER:ITER == 国家ID_プレイヤー
							SETCOLOR 0X00FF00
						BREAK
					ENDIF
				NEXT
			;;宇宙港の場合
			ELSEIF MAP:SECTOR_ID:X_POS:Y_POS == 宇宙港
				CALL ID2TILE(MAP:SECTOR_ID:X_POS:Y_POS)
				FOR ITER, 0, PORT_COUNT
					IF PORT_POSITION_ID:ITER == POSID
						SIF PORT_OWNER:ITER == 国家ID_プレイヤー
							SETCOLOR 0X00FF00
						BREAK
					ENDIF
				NEXT
			;;星・宇宙港でなければ艦隊優先
			ELSE
				CALL GET_SHIP_TILE(POSID)
				IF RESULT >0	;艦隊の獲得 色も指定されている
					CALL ID2TILE(RESULT)
				ELSEIF MAP:SECTOR_ID:X_POS:Y_POS == 11 ;;クエストの場合個別設定
					TRYCALLFORM QUEST_SET_TILE_{QUESTMAP:SECTOR_ID:X_POS:Y_POS}(POSID)
					SIF RESULT != 1
						CALL ID2TILE(0) ;RETUEN 1が返ってこなければ□にしておく
				ELSE	;空白(明瞭)・ANOMALY・資源・ワープゲート
					CALL ID2TILE(MAP:SECTOR_ID:X_POS:Y_POS)
				ENDIF
			ENDIF
		ENDIF
	;;表示用変換
		タイル = %RESULTS:0%
	;クリックした際のボタン番号
		 KEY = SECTOR_ID * 10000 + X_POS * 100 + Y_POS	;クリックした際のボタン番号

	;;色の設定
		GETCOLOR	;;SETCOLORで指定された設定を収集
		色 = RESULT:0
		RESETCOLOR
	;;あなたのいる場所
		SIF CHARACTER_POSITION == KEY
			色 = 0xAAFFAA

		;;初期化とタイル一つ配置
		SIF X_POS == 0
			CALL WndMgr_TextSet( windowID , Y_POS , @"" )
		CALL WndMgr_TextAdd( windowID, Y_POS , @"@C:{色}@@B:{KEY}@%タイル%@/B@@/C@" )
	NEXT
NEXT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;@CREATE_WINDOW_SUBMAP(SECTOR_ID)
;;;　引数１：セクター 2ケタ
;;; window2 に引数で指定されたセクターマップを作成する
;;; 切り替えキーに X99,Y99の値を使用する{319999}ならSECTOR 31 に画面切り替え
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CREATE_WINDOW_SUBMAP(SECTOR_ID)
#DIM windowID = 2
#DIM X_SEC
#DIM Y_SEC
#DIM SECTOR_ID
#DIMS タイル
#DIM 色
#DIM KEY
#DIM PLAYER_PORT_SECTION_ID

	CALL WndMgr_WindowTitle( windowID, @" セクターマップ " ) ;枠タイトル


FOR Y_SEC, 0, MAX_SECTOR_Y
	FOR X_SEC, 0, MAX_SECTOR_X
		タイル '= "□"
		
		;表示中エリア
		IF Y_SEC * 10 + X_SEC == SECTOR_ID
			SETCOLOR 0xFFFF99
			タイル '= "■"
			
		;表示でない場所であなたのいるエリア
		ELSEIF Y_SEC * 10 + X_SEC == CHARACTER_POSITION / 10000
			SETCOLOR 0xAAFFAA
			タイル '= "▲"

		;発見済みかつ星系港のあるエリア
		ELSEIF HAS_PORT_SECTORMAP(Y_SEC * 10 + X_SEC) == 星 && (CLEARMAP: (Y_SEC * 10 + X_SEC) : 7: 7 ) != 0
			SETCOLOR 0x33CCCC
			CALL GET_STAR_ID_FROM_POS((Y_SEC * 10 + X_SEC) * 10000 + 707)
			IF STAR_OWNER:RESULT == 国家ID_社会主義
				タイル '= "統"
			ELSEIF STAR_OWNER:RESULT == 国家ID_企業連合
				タイル '= "企"
			ELSEIF STAR_OWNER:RESULT == 国家ID_民主主義
				タイル '= "民"
			ELSEIF STAR_OWNER:RESULT == 国家ID_アレス宗教
				タイル '= "教"
			ELSEIF STAR_OWNER:RESULT == 国家ID_機械文明
				タイル '= "機"
			ELSEIF STAR_OWNER:RESULT == 国家ID_豊秋津皇国
				タイル '= "皇"
			ELSEIF STAR_OWNER:RESULT == 国家ID_ハールバルズ
				タイル '= "王"
			ELSE
				タイル '= "●"
			ENDIF

		;発見済みかつ宇宙港のあるエリア
		ELSEIF HAS_PORT_SECTORMAP(Y_SEC * 10 + X_SEC) == 宇宙港 && !(CLEARMAP: (Y_SEC * 10 + X_SEC) : 7: 7 ) != 0
			SETCOLOR 0xCCCCFF
			タイル '= "●"
		
		;自分の宇宙港があるエリア
		ELSEIF GET_PLAYER_PORT_SECTION() == Y_SEC * 10 + X_SEC
			SETCOLOR 0X99FF99
			タイル '= "港"

;		ELSEIF MAP:(Y_SEC*10 + X_SEC): 7: 7 == 星
;			SETCOLOR 0x33CCCC
;			タイル '= "●"

		;未踏(X07Y07が未発見)エリア
		ELSEIF (CLEARMAP: (Y_SEC * 10 + X_SEC) : 7: 7 ) == 0
			SETCOLOR 0x000000
			タイル '= "■"

		;完全踏破していないエリア
		ELSEIF (CLEARMAP: (Y_SEC * 10 + X_SEC) : 0: 0 ) == 0 || (CLEARMAP: (Y_SEC * 10 + X_SEC) : 14: 0 ) == 0 || (CLEARMAP: (Y_SEC * 10 + X_SEC) : 0: 14 ) == 0 || (CLEARMAP: (Y_SEC * 10 + X_SEC) : 14: 14 ) == 0
			SETCOLOR 0x666666
			タイル '= "■"
		ENDIF

		GETCOLOR
		色 = RESULT:0
		RESETCOLOR
		KEY = (Y_SEC * 10 + X_SEC ) * 10000 +9999 ;;セクター+X99 Y99 を収納
		
		;;初期化とタイル一つ配置
		SIF X_SEC == 0
			CALL WndMgr_TextSet( windowID , Y_SEC , @"" )
		CALL WndMgr_TextAdd( windowID, Y_SEC , @"@C:{色}@@B:{KEY}@%タイル%@/B@@/C@" )

	NEXT
NEXT
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;@CREATE_WINDOW_SUBINFO(SELECTED)
;;; 引数１	: SELECTED = SECTOR+X+Y 型の6桁座標
;;;			: -1 プレイヤー場所を追尾　-2　無効
;;; window3 メッセージ枠を作成する
;;; SELECTEDで指定された座標の艦隊以外情報を表示する
;;;
;;; 外部参照で表示文字列だけもってこれたら楽
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CREATE_WINDOW_SUBINFO(SELECTED = -1)
#DIM windowID = 3
#DIM SELECTED	;選択された座標
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS

;ウィンドウ初期化　メッセージ残るため
CALL WndMgr_ResetWindow(windowID)

;;指定なければプレイヤーがいる場所を表示
SIF SELECTED == -1 
	SELECTED = CHARACTER_POSITION:MASTER
;;セクター切り替え信号は表示しない
SIF SELECTED < 0 || SELECTED % 10000 == 9999
	RETURN
	
;;イレギラーははじく
CALL ID2POS(SELECTED)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2
SIF X_POS > MAP_WIDTH  || Y_POS > MAP_HEIGHT
	RETURN

CALL WndMgr_WindowTitle( windowID , @" #{SECTOR_ID,2,RIGHT} X:{X_POS,2,RIGHT} Y:{Y_POS,2,RIGHT} " )

;;未探索領域は非表示で終わり
IF CLEARMAP:SECTOR_ID:X_POS:Y_POS == 0
	CALL WndMgr_TextSet( windowID,  0, @" 未探索地域" )
	RETURN
ENDIF

SELECTCASE MAP:SECTOR_ID:X_POS:Y_POS
	CASE 明瞭
		CALL WndMgr_TextSet( windowID,  0, @" 空白宙域" )
	CASE 星
		;;勢力追加敵対起こればケース分け必要
		CALL MAP_POS_ID2PORTID(SELECTED)
		CALL WndMgr_TextSet( windowID,  0, @" 中立星(所属: %COUNTRY_NAME:(STAR_OWNER:RESULT)%)" )
	CASE 資源
		CALL WndMgr_TextSet( windowID,  0, @" ◆採掘可能エリア" )
		CALL GET_ITEM_NAME( RESOURCE_MAP:SECTOR_ID:X_POS:Y_POS )
		CALL WndMgr_TextSet( windowID,  1, @" %RESULTS%" )
		CALL GET_ITEM_DESCRIPTION(RESOURCE_MAP:SECTOR_ID:X_POS:Y_POS)
		CALL WndMgr_TextSet( windowID,  2, @"%RESULTS%" )
	CASE ANOMALY
		CALL WndMgr_TextSet( windowID,  0, @" ◆アノマリー" )
	CASE 11
		VARSET RESULTS
		TRYCALLFORM QUEST_MAP_INFO_{QUESTMAP:SECTOR_ID:X_POS:Y_POS} (SELECTED)
		IF RESULT == 1
			CALL WndMgr_TextSet( windowID,  0, @" %RESULTS:0%" )
			CALL WndMgr_TextSet( windowID,  1, @" %RESULTS:1%" )
			CALL WndMgr_TextSet( windowID,  2, @" %RESULTS:2%" )
			CALL WndMgr_TextSet( windowID,  3, @" %RESULTS:3%" )
			CALL WndMgr_TextSet( windowID,  4, @" %RESULTS:4%" )
		ELSE
			CALL WndMgr_TextSet( windowID,  0, @" 空白宙域" )
		ENDIF
	CASE ワープゲート
		CALL WndMgr_TextSet( windowID,  0, @" ◆ワープゲート" )
		SIF X_POS == 0 && Y_POS == MAP_HEIGHT / 2
			CALL WndMgr_TextSet( windowID,  1, @"セクター{SECTOR_ID - 1}へ通じるゲート" )
		SIF X_POS == MAP_WIDTH - 1 && Y_POS == MAP_HEIGHT / 2
			CALL WndMgr_TextSet( windowID,  1, @"セクター{SECTOR_ID + 1}へ通じるゲート" )
		SIF X_POS == MAP_WIDTH / 2 && Y_POS == 0
			CALL WndMgr_TextSet( windowID,  1, @"セクター{SECTOR_ID - 10}へ通じるゲート" )
		SIF X_POS == MAP_WIDTH / 2 && Y_POS == MAP_HEIGHT - 1
			CALL WndMgr_TextSet( windowID,  1, @"セクター{SECTOR_ID + 10}へ通じるゲート" )
ENDSELECT
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;@CREATE_WINDOW_MESSAGE(SELECTED)
;;; 引数１	: SELECTED = SECTOR+X+Y 型の6桁座標
;;;			: -1 プレイヤー場所を追尾　-2　無効
;;; window4 メッセージ枠を作成
;;; SELECTEDで指定された座標の地形状況以外を表示する　主に艦隊表示？
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CREATE_WINDOW_MAININFO(SELECTED = -1)
#DIM windowID = 4
#DIM Wnd4_CONFIG_SHIPCOUNT = 30	;;;; この数字以上の船がいればまとめて表示しようとする
#DIM SELECTED			;選択された座標
#DIM SECTOR_ID			;選択された座標→セクター
#DIM X_POS				;選択された座標→x座標
#DIM Y_POS				;選択された座標→y座標
#DIM STAR_ID			; 星の確定用
#DIM SHIP_ID
#DIM PRE_SHIP			; SHIP_CATEGORY単位でまとめて表示用
#DIM COUNTER			;
#DIM Wnd4_LINES			;;ウィンドウ４内メッセージ行数
#DIM Wnd4_LINE_MAX		;;ウィンドウ４内表示可能行数
#DIM Wnd4_LISTFLAG		;;1 = ウィンドウ４内リスト展開済み
#DIM 色
#DIMS タイル
#DIMS 状況				; 追加情報用　現状TASK表示

;ウィンドウ初期化　メッセージ残るため
CALL WndMgr_ResetWindow(windowID)

;;指定なければプレイヤーがいる場所を表示
IF SELECTED == -1 
	SELECTED = CHARACTER_POSITION:MASTER
ENDIF

;;セクター切り替え信号(xx9999)の時は窓表示しない(Wnd4_LINES =0)
IF SELECTED < 0 || SELECTED % 10000 == 9999
	Wnd4_LINES = 0
	RETURN 0
ENDIF

;;イレギラーははじく
CALL ID2POS(SELECTED)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2
SIF X_POS > MAP_WIDTH  || Y_POS > MAP_HEIGHT
	RETURN 0

;;未探索領域は非表示で終わり
SIF CLEARMAP:SECTOR_ID:X_POS:Y_POS == 0
	RETURN

;;Wnd4 表示可能行数のカウント
	CALL WndMgr_GetRectangle( windowID )
	Wnd4_LINE_MAX = RESULT:5

;;;小細工。 ウィンドウ内が展開済みかどうか
	Wnd4_LISTFLAG = 0
	SIF Wnd4_LINE_MAX > 4
			Wnd4_LISTFLAG = 1
;; 艦[個別]表示と艦種[まとめ]表示切替の船数ボーダー
SIF FLAG:501 > 0
	Wnd4_CONFIG_SHIPCOUNT = FLAG:501

CALL GET_SHIP_LIST_FROM_POS(SELECTED)
IF SHIP_LIST_LENGTH > 0
	CALL SORT_SHIP_LIST()

	;;タイトルバー描画
		IF GET_MAP(SELECTED) == 星
			FOR COUNTER, 0, 星系数
				IF 星系座標ID:COUNTER == SELECTED
					STAR_ID = COUNTER
					BREAK
				ENDIF
			NEXT
			CALL WndMgr_WindowTitle( windowID , @" 惑星 %STAR_NAME:STAR_ID% 駐留艦隊 {SHIP_LIST_LENGTH, 3,RIGHT}隻  #{SECTOR_ID,2,RIGHT} X:{X_POS,2,RIGHT} Y:{Y_POS,2,RIGHT}"  )
	;	ELSEIF GET_MAP(SELECTED) == 宇宙港
	;		CALL WndMgr_WindowTitle( windowID , @" 宇宙港 駐留艦隊 #{SECTOR_ID,2,RIGHT} X:{X_POS,2,RIGHT} Y:{Y_POS,2,RIGHT}"  )
		ELSE ;;星でない
			CALL WndMgr_WindowTitle( windowID , @" ◆宙域艦隊 {SHIP_LIST_LENGTH, 3,RIGHT}隻  #{SECTOR_ID,2,RIGHT} X:{X_POS,2,RIGHT} Y:{Y_POS,2,RIGHT} " )
		ENDIF

	PRE_SHIP = -1	; [まとめ]で使用。この変数の船と同型・同勢力ならばまとめて表示する
	COUNTER = 0		; [まとめ]で使用。まとめられる台数のカウント
	Wnd4_LINES = 0	; window4表示行数カウント
	FOR LOCAL, 0, SHIP_LIST_LENGTH
		;船情報としてアイコン・色分け・task状況を収集しておく
		SHIP_ID = SHIP_LIST:LOCAL
		CALL CATEGORY2TILE (SHIP_ID)
			タイル '= RESULTS
		CALL SHIPID2COLOR (SHIP_ID, 0)
			色 = RESULT
		CALL SHIPID2TASK (SHIP_ID)
			状況 '= RESULTS

	;;[個別]一隻ずつ表示する場合
		IF Wnd4_LISTFLAG == 0 || ( Wnd4_LISTFLAG == 1 &&SHIP_LIST_LENGTH <= Wnd4_CONFIG_SHIPCOUNT )
					;;エンド処理  次の行が最終行＆船リストが表示枠より長い　一枠開けてあとでボタン置く
			IF (Wnd4_LINES + 1 == Wnd4_LINE_MAX) && (SHIP_LIST_LENGTH > Wnd4_LINE_MAX )
				LOCAL --
				BREAK
			ELSE	;;船リスト部分
				CALL WndMgr_TextSet( windowID, Wnd4_LINES, @"@C:{色}@%タイル%@/C@")
				CALL WndMgr_TextAdd( windowID, Wnd4_LINES , @" %GET_TYPE_NAME(SHIP_CATEGORY:(SHIP_LIST:LOCAL)),12,LEFT% %COUNTRY_NAME:(SHIP_COUNTRY:(SHIP_LIST:LOCAL))%所属 %SHIP_NAME:(SHIP_LIST:LOCAL)%" )
				CALL WndMgr_TextAdd( windowID, Wnd4_LINES , @" %状況%")
				Wnd4_LINES ++
			ENDIF
	;;[まとめ]グループ毎にまとめる場合
		ELSE
			; エンド処理 前船とまとめれない＆次の行が最大行数　一枠あけてあとでボタン置く
			IF COUNTER == 0 && (Wnd4_LINES + 1 >= Wnd4_LINE_MAX )
				LOCAL --
				BREAK
			; 前の船がある＆前の船と所属が一致＆船種が一致
			ELSEIF PRE_SHIP >= 0 && SHIP_COUNTRY:PRE_SHIP == SHIP_COUNTRY:SHIP_ID && SHIP_CATEGORY:PRE_SHIP == SHIP_CATEGORY:SHIP_ID
				SIF COUNTER != 1
					Wnd4_LINES --
				COUNTER ++
				CALL WndMgr_TextSet( windowID, Wnd4_LINES, @"　　　　　　　　　　　　　　　　　　　　　　　　　同型艦 計 {COUNTER,3,RIGHT}隻")
				Wnd4_LINES ++
			; 前の船と所属か船種類が不一致 フラグを消して再処理→エンド処理か通常の表記へ
			ELSEIF COUNTER >= 1
				COUNTER = 0
				LOCAL --
			
			; 通常の表記
			ELSE
				PRE_SHIP = SHIP_ID
				CALL WndMgr_TextSet( windowID, Wnd4_LINES, @"@C:{色}@%タイル%@/C@")
				CALL WndMgr_TextAdd( windowID, Wnd4_LINES , @" %GET_TYPE_NAME(SHIP_CATEGORY:(SHIP_LIST:LOCAL)),12,LEFT% %COUNTRY_NAME:(SHIP_COUNTRY:(SHIP_LIST:LOCAL))%所属 %SHIP_NAME:(SHIP_LIST:LOCAL)%" )
				CALL WndMgr_TextAdd( windowID, Wnd4_LINES , @" %状況%")
				COUNTER ++
				Wnd4_LINES ++
			ENDIF
		ENDIF
	NEXT

	;;[枠表示拡張]をつける
	IF SHIP_LIST_LENGTH > Wnd4_LINE_MAX && Wnd4_LISTFLAG == 0	;船数が多い＆枠標準サイズ
		CALL WndMgr_TextSet( windowID, Wnd4_LINES , @" 他{SHIP_LIST_LENGTH - LOCAL , 3,RIGHT}隻")
		CALL WndMgr_TextAdd( windowID, Wnd4_LINES , @"　　@B:L@[ 表示枠 拡張 ]@/B@" )

	;;[枠表示戻す]をつける;; 枠展開済み
	ELSEIF Wnd4_LISTFLAG == 1 
		Wnd4_LINES = LIMIT (Wnd4_LINES, 4, 100)
		CALL WndMgr_GetRectangle( 4 )	;;枠情報の収集
		IF SHIP_LIST_LENGTH <= 4
			CALL WndMgr_Rectangle( 4, RESULT:0, RESULT:1, RESULT:2, 4 + 2, RESULT:6 )	;枠の高さ再設定
		ELSE
			CALL WndMgr_Rectangle( 4, RESULT:0, RESULT:1, RESULT:2, Wnd4_LINES +3, RESULT:6 )	;枠の高さ再設定
			CALL WndMgr_TextSet( windowID, Wnd4_LINES , @" 他{SHIP_LIST_LENGTH - LOCAL , 3,RIGHT}隻")
			CALL WndMgr_TextAdd( windowID, Wnd4_LINES , @"　　@B:L@[ 表示枠 戻す ]@/B@" )
		ENDIF
	ELSE
		;;枠標準で船数すくない
	ENDIF
ENDIF

;;あなただけが空白飛んでたら窓ごと消す
	SIF Wnd4_LINES == 1 && SELECTED == CHARACTER_POSITION:MASTER && GET_MAP(SELECTED) == 1
		Wnd4_LINES = 0

RETURN Wnd4_LINES

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;@CATEGORY2TILE (SHIP_ID)
;	引数１：船番号
;	RESULTS： 船種別に応じたアイコン１文字
;　宙域画面下部window4用想定だが今後増える？
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@CATEGORY2TILE (SHIP_ID)
#DIM SHIP_ID
#DIMS タイル
	SIF SHIP_ID < 0 || SHIP_ID > MAX_SHIP
		RETURN

	SELECTCASE SHIP_CATEGORY:SHIP_ID
		CASE 0, 7, 8 ;;調査船 || 輸送船 || 作業船
			タイル '= "△"
		CASE 1, 2, 3 ;, 4, 5, 6 ;;フリゲート || コルベット || 駆逐艦 || 巡洋艦 || 戦艦 || 空母 
			タイル '= "▲"
		CASE 4, 5
			タイル '= "Ж"
		CASE 6
			タイル '= "Θ"
		CASEELSE
			タイル '= "ｏ"
	ENDSELECT
	RESULTS '= タイル
RETURN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;@SHIPID2COLOR (SHIP_ID, ARG:1 =0 )
;	引数１：船番号
;	引数２： 0,省略 = 特になし　 / = 1 , 色をSETCOLORしておく
;	RETURN： 色コード 
;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@SHIPID2COLOR (SHIP_ID, ARG:1 =0 )
#DIM SHIP_ID
#DIM 色
SIF SHIP_ID < 0 || SHIP_ID > MAX_SHIP
	RETURN

IF SHIP_COUNTRY:SHIP_ID == 0						;;無所属？
	色 = 0xFFFFFF
ELSEIF SHIP_COUNTRY:SHIP_ID == 国家ID_プレイヤー		;;自軍
	色 = 0x00FF00
;ELSEIF ;;謎生物
;	色 = 0x9999FF
ELSE														;;友好度による色分け
	SELECTCASE REL_LIKE_COUNTRY:(SHIP_COUNTRY:SHIP_ID):国家ID_プレイヤー
		CASE IS <= -1000	;敵対
			色 = 0xFF0000
		CASE IS >= 1000	;友好
			色 = 0x00FF00
		CASEELSE		;その他
			色 = 0xFFFFFF
	ENDSELECT
ENDIF

SIF ARG:1 == 1
	SETCOLOR 色

RETURN 色

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;@SHIPID2TASK (SHIP_ID)
;	引数１：船番号
;  RESULTS：タスク記載の文字列
;
; ほぼwindow4表示用 艦の状態表示・・・建造中とか修理中とかそういうの入れるべき？
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@SHIPID2TASK (SHIP_ID)
#DIM SHIP_ID
SIF SHIP_ID < 0 || SHIP_ID > MAX_SHIP
	RETURN
	
	SELECTCASE SHIP_MISSION:SHIP_ID
		CASE 0 ;待機
			RESULTS '= ""
		CASE 1 ;パトロール
			RESULTS '= "( パトロール中 )"
		CASE 2 ;追従
			RESULTS '= "( 艦隊行動中 )"
		CASE 3 ;移動
			LOCAL = MOVING_POS:SHIP_ID 
			RESULTS = ({LOCAL}へ移動中 )
		CASE 4 ;採掘
			LOCAL:1 = FROM_POS:SHIP_ID
			LOCAL:2 = MOVING_POS:SHIP_ID
			RESULTS = ( 採掘 {LOCAL:1,6,RIGHT}⇔{LOCAL:2,6,RIGHT} )
		CASE 5 ;交易
			LOCAL:1 = FROM_POS:SHIP_ID / 10000
			LOCAL:2 = MOVING_POS:SHIP_ID / 10000
			RESULTS = ( 交易 #{LOCAL:1,2,RIGHT}⇔ #{LOCAL:2,2,RIGHT} )
		CASEELSE
			RESULTS =""
	ENDSELECT

RETURN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;@OPTION_Wnd()
; window4 表示用パラメータの指定
; FLAG:500 表示枠をひたすら広げると見づらいので4行にしている。狭すぎるんで拡張ボタン付けた。拡張後の最大行数の制限。
; FLAG:501 表示船数がおおいとひたすら見ずらい。情報絞って他〇隻状態にするための切り替えフラグ。対象船数。
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@OPTION_Wnd()
SIF FLAG:500 == 0
	FLAG:500 = 30
SIF FLAG:501 == 0
	FLAG:501 = 30

$INPUT_LOOP
DRAWLINE
	PRINTL
	PRINTL ◆移動画面での情報窓（下側）
	PRINTL   枠のサイズ・表示を変更できます
	PRINTL
	PRINTFORML [500] - 現在: {FLAG:500,3,RIGHT} 　"枠拡張"で広げる枠の行数　　[ 5 ～ 100]
	PRINTFORML [501] - 現在：{FLAG:501,3,RIGHT} 隻までなら個別に艦名表示、それ以上なら艦種〇隻でまとめて表示
	PRINTL
	PRINTL [0] もどる
DRAWLINE

INPUT
	SELECTCASE RESULT
		CASE 0
			RETURN
		CASE 500
			$INPUT_LOOP1
			PRINTFORML 　現在値　　{FLAG:500}
			PRINTL [ 0] 決定　　　　[5] [10] [15] [20] [25] [30]　　[100]  もしくは手入力
			INPUT
			
			CLEARLINE 3
			IF RESULT >= 1
				RESULT = LIMIT (RESULT, 5, 100)
				FLAG:500 = RESULT
				GOTO INPUT_LOOP1
			ENDIF
			
		CASE 501
			$INPUT_LOOP2
			PRINTFORML 　現在値　　{FLAG:501}
			PRINTL [ 0] 決定　　　　[1] [10] [20] [50] [100]  もしくは手入力
			INPUT
			
			CLEARLINE 3
			IF RESULT >= 1
				RESULT = LIMIT (RESULT, 1, 100)
				FLAG:501 = RESULT
				GOTO INPUT_LOOP2
			ENDIF
	ENDSELECT

GOTO INPUT_LOOP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;@HAS_PORT_SECTORMAP(SECTOR_ID)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@HAS_PORT_SECTORMAP(SECTOR_ID)
#FUNCTION
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
FOR Y_POS, 1, MAP_HEIGHT
	FOR X_POS, 1, MAP_WIDTH
		SIF MAP:SECTOR_ID:X_POS:Y_POS == 星
			RETURNF 星
		SIF MAP:SECTOR_ID:X_POS:Y_POS == 宇宙港
			RETURNF 宇宙港
	NEXT
NEXT
RETURNF 0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;@SPACE_FORCE_OCCUPANCY(宇宙軍許容量)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@DRAW_SPACE_FORCE_OCCUPANCY
#DIM windowID = 8

CALL WndMgr_WindowTitle( windowID , "宇宙軍許容量" )

CALL WndMgr_TextSet( windowID , 0, @"      {GET_CURRENT_OCCUPANCY_POINT()}/{GET_MAX_OCCUPANCY_POINT()}" )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;@GET_PLAYER_PORT_SECTION
;RETURN INT;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@GET_PLAYER_PORT_SECTION
#FUNCTION
FINDELEMENT PORT_OWNER, 国家ID_プレイヤー
IF RESULT != -1
	RETURNF PORT_POSITION_ID:RESULT / 10000
ELSE
	RETURNF -1
ENDIF
