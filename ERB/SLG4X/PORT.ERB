;--------------------------
; 宇宙港
;--------------------------
; 建設
@CREATE_STAR_PORT(PORTPOSID, COUNTRY_ID)
#DIM PORTPOSID
#DIM COUNTRY_ID
#DIM ITER
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS

IF GET_RESOURCE_NUM(PORTPOSID, COUNTRY_ID, 装甲合金) < 100
    SETCOLOR 0XFFFF00
    PRINTW 宇宙港の建造を開始するには装甲合金100が必要です
    RESETCOLOR
    RETURN 0
ENDIF

$INPUT_LOOP
PRINTL この宙域に宇宙港を建造しますか？
PRINTBUTTON "[0] はい", 0
PRINT  
PRINTBUTTON "[1] いいえ", 1
PRINTL
INPUT
IF RESULT == 1
    RETURN
ELSEIF RESULT != 0
    GOTO INPUT_LOOP
ENDIF

FINDELEMENT PORT_POSITION_ID, -1
PORT_POSITION_ID:RESULT = PORTPOSID
PORT_OWNER:RESULT = COUNTRY_ID
PORT_RESOURCE:RESULT:装甲合金 = 0
PORT_RESOURCE:RESULT:重装甲合金 = 0
PORT_RESOURCE:RESULT:シールド発生装置 = 0
PORT_RESOURCE:RESULT:合金加工剤 = 0
PORT_RESOURCE:RESULT:超電導回路 = 0



CALL ID2POS(PORTPOSID)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2

MAP:SECTOR_ID:X_POS:Y_POS = 宇宙港
RESULT = REMOVE_RESOURCE(PORTPOSID, COUNTRY_ID, 装甲合金, 100)
RETURN 1

; 引き続き建造
@BUILD_PORT(POSID, COUNTRY_ID)
#DIM POSID
#DIM COUNTRY_ID
#DIM ITER
#DIM NEED_RESOURCE, ITEM_LENGTH
#DIM ITEM_ID, 2
#DIM RESOURCE_COUNT
#DIM NEED_COUNT
#DIM IS_COMPLETE
#DIM IS_WORK
#DIM BUILD_ID

IS_COMPLETE = 0
IS_WORK = 0
BUILD_ID = -1
CALL NEED_PORT_RESOURCE(NEED_RESOURCE)

FOR ITER, 0, MAX_PORT
    SIF PORT_POSITION_ID:ITER != POSID
        CONTINUE
    SIF PORT_OWNER:ITER != COUNTRY_ID
        CONTINUE
    FOR ITEM_ID, 0, ITEM_LENGTH
        ; 必要な素材がある
        RESOURCE_COUNT = GET_RESOURCE_NUM(POSID, COUNTRY_ID, ITEM_ID)
        IF RESOURCE_COUNT > 0
            ; 需要がある
            NEED_COUNT = NEED_RESOURCE:ITEM_ID - PORT_RESOURCE:ITER:ITEM_ID
            IF NEED_COUNT > 0
                IS_WORK = 1
                BUILD_ID = ITER
                IF RESOURCE_COUNT >= NEED_COUNT
                    PORT_RESOURCE:ITER:ITEM_ID += NEED_COUNT
                    RESULT = REMOVE_RESOURCE(POSID, COUNTRY_ID, ITEM_ID, NEED_COUNT)
                ELSE
                    PORT_RESOURCE:ITER:ITEM_ID += RESOURCE_COUNT
                    RESULT = REMOVE_RESOURCE(POSID, COUNTRY_ID, ITEM_ID, RESOURCE_COUNT)
                ENDIF
            ENDIF
        ENDIF
    NEXT
NEXT

; ポートの建造が完了したか
IF IS_WORK == 1
    FOR ITEM_ID, 0, ITEM_LENGTH
        IS_COMPLETE += (NEED_RESOURCE:ITEM_ID - PORT_RESOURCE:BUILD_ID:ITEM_ID)
    NEXT
ENDIF

IF IS_COMPLETE == 0 && IS_WORK == 1
    SETCOLOR 0XFFFF00
    PRINTFORMW [INFO] 宇宙港の建造が完了しました
    RESETCOLOR
    FOR ITER, 0, MAX_PORT
        SIF PORT_POSITION_ID:ITER != POSID
            CONTINUE
        SIF PORT_OWNER:ITER != COUNTRY_ID
            CONTINUE
        PORT_COMPLETE:ITER = 1
        PORT_SLOT:ITER:0 = ドック
    NEXT
ELSE
    PRINTFORML 必要な残り資材は以下の通りです
    FOR ITER, 0, MAX_PORT
        SIF PORT_POSITION_ID:ITER != POSID
            CONTINUE
        SIF PORT_OWNER:ITER != COUNTRY_ID
            CONTINUE
        FOR ITEM_ID, 0, ITEM_LENGTH
            NEED_COUNT = NEED_RESOURCE:ITEM_ID - PORT_RESOURCE:ITER:ITEM_ID
            IF NEED_COUNT > 0
                CALL GET_ITEM_NAME(ITEM_ID)
                PRINTFORML %RESULTS%: {NEED_COUNT}
            ENDIF
        NEXT
        WAIT
    NEXT
ENDIF

RETURN IS_WORK

; 必要なリソースを返却する関数
@NEED_PORT_RESOURCE(RESOURCE)
#DIM REF RESOURCE

RESOURCE:装甲合金 = 900
RESOURCE:重装甲合金 = 300
RESOURCE:シールド発生装置 = 600
RESOURCE:合金加工剤 = 600

; 宇宙港建造可能か判定
; INT 0: 建造不可能, 1:建造可能
@IS_BUILDING(POSID)
#DIM POSID
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
#DIM SHIP_ID
#DIM MINING_ITER
#DIM TRANSPORT_ITER
#DIM CAPACITY

MINING_ITER = 0
TRANSPORT_ITER = 0
CAPACITY = 0

CALL ID2POS(POSID)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2

SIF MAP:SECTOR_ID:X_POS:Y_POS != 明瞭
    RETURN 0

FOR SHIP_ID, 0, MAX_SHIP
    SIF SHIP_COUNTRY:SHIP_ID != 国家ID_プレイヤー
        CONTINUE
    SIF SHIP_CATEGORY:SHIP_ID != 輸送船 && SHIP_CATEGORY:SHIP_ID != 作業船
        CONTINUE
    CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
    SIF RESULT != SHIP_POSITION:SHIP_ID
        CONTINUE

    IF SHIP_CATEGORY:SHIP_ID == 作業船
        MINING_ITER ++
        CONTINUE
    ENDIF
    IF SHIP_CATEGORY:SHIP_ID == 輸送船
        TRANSPORT_ITER ++
    ENDIF
NEXT

SIF MINING_ITER == 0 || TRANSPORT_ITER == 0
    RETURN 0

RETURN 1

; 宇宙港建造可能か判定
; INT 0: 建造不可能, 1:建造可能
@IS_BUILDUP(POSID)
#DIM POSID
#DIM SECTOR_ID
#DIM X_POS
#DIM Y_POS
#DIM PORT_ID
#DIM SHIP_ID
#DIM MINING_ITER
#DIM TRANSPORT_ITER

MINING_ITER = 0
TRANSPORT_ITER = 0
CALL ID2POS(POSID)
SECTOR_ID = RESULT:0
X_POS = RESULT:1
Y_POS = RESULT:2

SIF MAP:SECTOR_ID:X_POS:Y_POS != 宇宙港
    RETURN 0

CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
FOR PORT_ID, 0, MAX_PORT
    SIF PORT_POSITION_ID:PORT_ID != RESULT
        CONTINUE
    SIF PORT_COMPLETE:PORT_ID == 1
        RETURN 0
NEXT

FOR SHIP_ID, 0, MAX_SHIP
    SIF SHIP_COUNTRY:SHIP_ID != 国家ID_プレイヤー
        CONTINUE
    SIF SHIP_CATEGORY:SHIP_ID != 輸送船 && SHIP_CATEGORY:SHIP_ID != 作業船
        CONTINUE
    CALL POS2ID(SECTOR_ID, X_POS, Y_POS)
    SIF RESULT != SHIP_POSITION:SHIP_ID
        CONTINUE

    IF SHIP_CATEGORY:SHIP_ID == 作業船
        MINING_ITER ++
        CONTINUE
    ENDIF
    IF SHIP_CATEGORY:SHIP_ID == 輸送船
        TRANSPORT_ITER ++
    ENDIF
NEXT

SIF MINING_ITER == 0 || TRANSPORT_ITER == 0
    RETURN 0

RETURN 1

; PORT画面
@PORT_MENU(PORTID)
#DIM PORTID
#DIM SLOT_ID
#DIM UNLOCK_FACILITY, 10
#DIMS LEFT_COLUMNS, MAX_SHIP
#DIM LEFT_COLUMNS_BUTTON_VALUE, MAX_SHIP
#DIM CURRENT_MODE
#DIM LINE_ITER
#DIM HAS_WRECKED_SHIP

CURRENT_MODE = 0

$INPUT_LOOP
LINE_ITER = 0
VARSET LEFT_COLUMNS, " "
VARSET LEFT_COLUMNS_BUTTON_VALUE, NONE_LINE
VARSET UNLOCK_FACILITY, 0

FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
    UNLOCK_FACILITY:(PORT_SLOT:PORTID:SLOT_ID) = 1
NEXT

LEFT_COLUMNS:LINE_ITER = %"　宇宙港", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = WHITE_LINE
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"---------------------", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GRAY_LINE
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"　[0] 宇宙港", LEFT_COLUMN_LENGTH, LEFT%
IF CURRENT_MODE == 0
    LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
ELSE
    LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 0
ENDIF
LINE_ITER ++
IF UNLOCK_FACILITY:造船所 == 1
    LEFT_COLUMNS:LINE_ITER = %"　[1] 艦船購入", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 1
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 1
    ENDIF
    LINE_ITER++
ENDIF
IF UNLOCK_FACILITY:造船所 == 1
    LEFT_COLUMNS:LINE_ITER = %"　[2] 装備更新", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 2
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 2
    ENDIF
    LINE_ITER ++
ENDIF
LEFT_COLUMNS:LINE_ITER = %"　[3] 任務/人員の設定", LEFT_COLUMN_LENGTH, LEFT%
IF CURRENT_MODE == 3
    LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
ELSE
    LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 3
ENDIF
LINE_ITER ++
IF RELEASED_LAB
    LEFT_COLUMNS:LINE_ITER = %"　[4] 技術研究所", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 4
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 4
    ENDIF
    LINE_ITER ++
ENDIF
IF HUMAN_LAB == CHARACTER_POSITION && QUEST_PROGRESS:0 >= 3
    LEFT_COLUMNS:LINE_ITER = %"　[5] 人体研究所", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 5
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 5
    ENDIF
    LINE_ITER ++
ENDIF
IF UNLOCK_FACILITY:コンテナ == 1 && PORT_OWNER:PORTID != 国家ID_プレイヤー
    LEFT_COLUMNS:LINE_ITER = %"　[6] 素材販売", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 6
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 6
    ENDIF
    LINE_ITER ++
ENDIF
IF UNLOCK_FACILITY:工場 == 1
    LEFT_COLUMNS:LINE_ITER = %"　[7] 加工工場", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 7
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 7
    ENDIF
    LINE_ITER ++
ENDIF
IF PORT_OWNER:PORTID == 国家ID_プレイヤー
    LEFT_COLUMNS:LINE_ITER = %"　[8] 宇宙港スロット", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 8
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 8
    ENDIF
    LINE_ITER ++
ENDIF
HAS_WRECKED_SHIP = 0
FOR LOCAL, 0, MAX_SHIP
    IF SHIP_COUNTRY:LOCAL == 国家ID_プレイヤー && SHIP_CONDITION:LOCAL == 艦船状態_大破 && SHIP_POSITION:LOCAL == PORT_POSITION_ID:PORTID
        HAS_WRECKED_SHIP = 1
        BREAK
    ENDIF
NEXT
IF HAS_WRECKED_SHIP == 1 && UNLOCK_FACILITY:造船所 == 1
    LEFT_COLUMNS:LINE_ITER = %"　[9] 大破した艦の修復", LEFT_COLUMN_LENGTH, LEFT%
    LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 9
    LINE_ITER ++
ENDIF
IF PORT_OWNER:PORTID == 国家ID_プレイヤー
    LEFT_COLUMNS:LINE_ITER = %"　[10] ｲﾝﾌｫﾒｰｼｮﾝ", LEFT_COLUMN_LENGTH, LEFT%
    IF CURRENT_MODE == 10
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = GREEN_LINE
    ELSE
        LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 10
    ENDIF
    LINE_ITER ++
ENDIF
LEFT_COLUMNS:LINE_ITER = %"　[11] 宙域画面へ", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 11
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"　[12] 仲間と交流", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 12
LINE_ITER ++
LEFT_COLUMNS:LINE_ITER = %"　[13] 艦船設計", LEFT_COLUMN_LENGTH, LEFT%
LEFT_COLUMNS_BUTTON_VALUE:LINE_ITER = 13

IF CURRENT_MODE == 0
    CALL SPACE_PORT(PORTID, 1, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 1
    CALL SLG_SHIP_SHOP(PORT_POSITION_ID:PORTID, PORT_OWNER:PORTID, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 2
    CALL SLG_EQUIP_SHOP(PORT_POSITION_ID:PORTID, PORT_OWNER:PORTID, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 3
    CALL SHOW_INFO_ASSET
ELSEIF CURRENT_MODE == 4
    CALL TECHNOLOGY_LAB
ELSEIF CURRENT_MODE == 5
    CALL HUMAN_LAB
ELSEIF CURRENT_MODE == 6
    CALL SLG_ITEM_SHOP(PORTID, 1)
ELSEIF CURRENT_MODE == 7
    CALL FACTORY(PORTID, 国家ID_プレイヤー, 1)
ELSEIF CURRENT_MODE == 8
    CALL EDIT_PORT_SLOT(PORTID)
ELSEIF CURRENT_MODE == 9
    CALL SLG_REPAIR_WRECKED_SHIP(PORT_POSITION_ID:PORTID, PORT_OWNER:PORTID, LEFT_COLUMNS, LEFT_COLUMNS_BUTTON_VALUE)
ELSEIF CURRENT_MODE == 10
    CALL INFORMATION_INDEX
ELSEIF CURRENT_MODE == 13
    CALL SHIP_DESIGN
ENDIF

IF RESULT == 0 && UNLOCK_FACILITY:ドック == 1
    CURRENT_MODE = 0
    GOTO INPUT_LOOP
ELSEIF RESULT == 1 && UNLOCK_FACILITY:造船所 == 1
    CURRENT_MODE = 1
    GOTO INPUT_LOOP
ELSEIF RESULT == 2 && UNLOCK_FACILITY:造船所 == 1
    CURRENT_MODE = 2
    GOTO INPUT_LOOP
ELSEIF RESULT == 3
    CURRENT_MODE = 3
    GOTO INPUT_LOOP
ELSEIF RESULT == 4 && RELEASED_LAB
    CURRENT_MODE = 4
    GOTO INPUT_LOOP
ELSEIF RESULT == 5 && HUMAN_LAB == CHARACTER_POSITION && QUEST_PROGRESS:0 >= 3
    CURRENT_MODE = 5
    GOTO INPUT_LOOP
ELSEIF RESULT == 6 && UNLOCK_FACILITY:コンテナ == 1 && PORT_OWNER:PORTID != 国家ID_プレイヤー
    CURRENT_MODE = 6
    GOTO INPUT_LOOP
ELSEIF RESULT == 7 && UNLOCK_FACILITY:工場 == 1
    CURRENT_MODE = 7
    GOTO INPUT_LOOP
ELSEIF RESULT == 8 && PORT_OWNER:PORTID == 国家ID_プレイヤー
    CURRENT_MODE = 8
    GOTO INPUT_LOOP
ELSEIF RESULT == 9 && UNLOCK_FACILITY:造船所 == 1
    CURRENT_MODE = 9
    GOTO INPUT_LOOP
ELSEIF RESULT == 10
    CURRENT_MODE = 10
    GOTO INPUT_LOOP
ELSEIF RESULT == 11
    RETURN 0
ELSEIF RESULT == 12
    RETURN 1
ELSEIF RESULT == 13
    CURRENT_MODE = 13
    GOTO INPUT_LOOP
ELSE
    GOTO INPUT_LOOP
ENDIF

; PORT_SLOT_編集
; 必要そうなの素材が民製品ぽかったので金で解決する
@EDIT_PORT_SLOT(PORT_ID, IS_STAR = 0)
#DIM PORT_ID
#DIM IS_STAR
#DIM SLOT_ID
#DIMS SLOT_NAME

$INPUT_LOOP

DRAWLINE
PRINTL ◆リソースの編集
PRINTBUTTON "[100] 輸送船の貨物を全てコンテナに移す", 100
PRINTL
PRINTBUTTON "[101] 指定のリソースの移動", 101
PRINTL
PRINTL
PRINTL ◆スロット編集
FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
    LOCAL = IS_STAR ? STAR_PORT_SLOT:PORT_ID:SLOT_ID # PORT_SLOT:PORT_ID:SLOT_ID
    SELECTCASE LOCAL
        CASE 空
            SLOT_NAME = %"---", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE コンテナ
            SLOT_NAME = %"コンテナ", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE ドック
            SLOT_NAME = %"ドック", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE 工場
            SLOT_NAME = %"工場", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE 造船所
            SLOT_NAME = %"造船所", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE AVスタジオ
            SLOT_NAME = %"AVスタジオ", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE 技術研究所
            SLOT_NAME = %"技術研究所", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
        CASE 白兵訓練所
            SLOT_NAME = %"白兵訓練所", 20, LEFT%
            PRINTBUTTON @"[{SLOT_ID, 2, RIGHT}] %SLOT_NAME%", SLOT_ID
    ENDSELECT
    SIF SLOT_ID % 4 == 3
        PRINTL
NEXT
PRINTBUTTON "[99] 戻る", 99

INPUT

IF RESULT >= 0 && RESULT < STAR_PORT_SLOT_NUM
    CALL SELECT_SLOT_ITEM(PORT_ID, RESULT, IS_STAR)
    GOTO INPUT_LOOP
ELSEIF RESULT == 99
    RETURN
ELSEIF RESULT == 100
    IF IS_STAR
        CALL MOVE_RESOURCE_TO_STAR_CONTAINER(国家ID_プレイヤー, 星系座標ID:PORT_ID, PORT_ID)
    ELSE
        CALL MOVE_RESOURCE_TO_CONTAINER(国家ID_プレイヤー, PORT_POSITION_ID:PORT_ID, PORT_ID)
    ENDIF
    GOTO INPUT_LOOP
ELSEIF RESULT == 101
    IF IS_STAR
        CALL MOVE_RESOURCE_TO_STAR(国家ID_プレイヤー, 星系座標ID:PORT_ID, PORT_ID)
    ELSE
        CALL MOVE_RESOURCE(国家ID_プレイヤー, PORT_POSITION_ID:PORT_ID, PORT_ID)
    ENDIF
    GOTO INPUT_LOOP
ELSE
    GOTO INPUT_LOOP
ENDIF

; スロットに適用できるアイテム一覧
@SELECT_SLOT_ITEM(PORT_ID, SLOT_ID, IS_STAR = 0)
#DIM PORT_ID
#DIM SLOT_ID
#DIM IS_STAR

$INPUT_LOOP

PRINTL
PRINTL ◆スロットに適用するアイテムの選択
PRINT 現在適用されているアイテム: 
SELECTCASE IS_STAR ? STAR_PORT_SLOT:PORT_ID:SLOT_ID # PORT_SLOT:PORT_ID:SLOT_ID
    CASE 空
        PRINTL 無し
        PRINTL 効果: 無し
    CASE コンテナ
        PRINTL コンテナ
        PRINTL 効果: 物資を10000保管できる
    CASE ドック
        PRINTL ドック
        PRINTL 効果: 艦船を停泊させることのできるドック(効果は重複しない)
    CASE 工場
        PRINTL 工場
        PRINTL 効果: 素材の加工を行えるようになる(効果は重複しない)
    CASE 造船所
        PRINTL 造船所
        PRINTL 効果: 艦船を建造できるようになる(効果は重複しない)
    CASE AVスタジオ
        PRINT AVスタジオ
        PRINTL 効果: AV撮影の効果が劇的に上がる(効果は重複しない)
    CASE 技術研究所
        PRINT 技術研究所
        PRINTL 効果: 技術研究が行えるようになる(効果は重複しない)
    CASE 白兵訓練所
        PRINT 白兵訓練所
        PRINTL 効果: 白兵訓練の効果が上がる(効果は重複しない)
ENDSELECT
PRINTL
PRINTL 選択できるアイテム(価格): 効果
PRINTBUTTON "[1] コンテナ($100,000)   : 物資を10000保管できる", 1
PRINTL
PRINTBUTTON "[2] ドック  ($100,000)   : 艦船を停泊させることのできるドック(効果は重複しない)", 2
PRINTL
PRINTBUTTON "[3] 工場    ($1,000,000) : 素材の加工を行えるようになる(効果は重複しない)", 3
PRINTL
PRINTBUTTON "[4] 造船所  ($2,000,000) : 艦船を建造できるようになる(効果は重複しない)", 4
PRINTL
PRINTBUTTON "[7] AVスタジオ ($300,000) : AV撮影の効果が劇的に上がる(効果は重複しない)", 7
PRINTL
PRINTBUTTON "[8] 技術研究所 ($1,000,000): 技術研究が行えるようになる(効果は重複しない)", 8
PRINTL
PRINTBUTTON "[9] 白兵訓練所 ($500,000) : 白兵訓練の効果が上がる(効果は重複しない)", 9
PRINTL
PRINTBUTTON "[99] 戻る", 99
INPUT

IF RESULT == 1
    CALL SLOT_CHANGE_DIALOG("コンテナ", 100000)
    IF RESULT == 1
        IF IS_STAR
            STAR_PORT_SLOT:PORT_ID:SLOT_ID = コンテナ
        ELSE
            PORT_SLOT:PORT_ID:SLOT_ID = コンテナ
        ENDIF
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 2
    CALL SLOT_CHANGE_DIALOG("ドック", 100000)
    IF RESULT == 1
        IF IS_STAR
            STAR_PORT_SLOT:PORT_ID:SLOT_ID = ドック
        ELSE
            PORT_SLOT:PORT_ID:SLOT_ID = ドック
        ENDIF
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 3
    CALL SLOT_CHANGE_DIALOG("工場", 1000000)
    IF RESULT == 1
        IF IS_STAR
            STAR_PORT_SLOT:PORT_ID:SLOT_ID = 工場
        ELSE
            PORT_SLOT:PORT_ID:SLOT_ID = 工場
        ENDIF
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 4
    CALL SLOT_CHANGE_DIALOG("造船所", 2000000)
    IF RESULT == 1
        IF IS_STAR
            STAR_PORT_SLOT:PORT_ID:SLOT_ID = 造船所
        ELSE
            PORT_SLOT:PORT_ID:SLOT_ID = 造船所
        ENDIF
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 7
    CALL SLOT_CHANGE_DIALOG("AVスタジオ", 300000)
    IF RESULT == 1
        IF IS_STAR
            STAR_PORT_SLOT:PORT_ID:SLOT_ID = AVスタジオ
        ELSE
            PORT_SLOT:PORT_ID:SLOT_ID = AVスタジオ
        ENDIF
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 8
    CALL SLOT_CHANGE_DIALOG("技術研究所", 1000000)
    IF RESULT == 1
        IF IS_STAR
            STAR_PORT_SLOT:PORT_ID:SLOT_ID = 技術研究所
        ELSE
            PORT_SLOT:PORT_ID:SLOT_ID = 技術研究所
        ENDIF
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 9
    CALL SLOT_CHANGE_DIALOG("白兵訓練所", 500000)
    IF RESULT == 1
        IF IS_STAR
            STAR_PORT_SLOT:PORT_ID:SLOT_ID = 白兵訓練所
        ELSE
            PORT_SLOT:PORT_ID:SLOT_ID = 白兵訓練所
        ENDIF
    ELSE
        GOTO INPUT_LOOP
    ENDIF
ELSEIF RESULT == 99
    RETURN
ELSE
    GOTO INPUT_LOOP
ENDIF

; 研究所の有無によりフラグを変更
RELEASED_LAB = 0
FOR PORT_ID, 0, MAX_PORT
    SIF PORT_OWNER:PORT_ID != 国家ID_プレイヤー
        CONTINUE
    FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
        SIF PORT_SLOT:PORT_ID:SLOT_ID == 技術研究所
            RELEASED_LAB = 1
    NEXT
NEXT

; スロット変更確認ダイアログ
@SLOT_CHANGE_DIALOG(ITEM_NAME, SLOT_ITEM_PRICE)
#DIMS ITEM_NAME
#DIM SLOT_ITEM_PRICE

$INPUT_LOOP

PRINTL
PRINTFORML ◆購入確認 所持金 %TOSTR(MONEY, "$###,###,###,###")%
PRINTFORML %ITEM_NAME%を%TOSTR(SLOT_ITEM_PRICE, "$#,###,###")%で設置しますか？
PRINTBUTTON "[0] はい", 0
PRINTL
PRINTBUTTON "[1] いいえ", 1
INPUT
IF RESULT == 0
    IF SLOT_ITEM_PRICE <= MONEY
        PRINTW 設置しました
        MONEY -= SLOT_ITEM_PRICE
        RETURN 1
    ELSE
        PRINTW 所持金不足です
        RETURN 0
    ENDIF
ELSEIF RESULT == 1
    RETURN 0
ELSE
    GOTO INPUT_LOOP
ENDIF

; 全ての貨物をコンテナに移す
@MOVE_RESOURCE_TO_CONTAINER(COUNTRY_ID, POSID, PORT_ID)
#DIM COUNTRY_ID
#DIM POSID
#DIM TOTAL_STORED_RESOURCE_NUM
#DIM STORED_RESOURCE_NUM, ITEM_LENGTH
#DIM TOTAL_CONTAINER_CAPACITY
#DIM CURRENT_STORED_ITEM_NUM
#DIM SHIP_ID
#DIM SLOT_ID
#DIM ITEM_ID
#DIM PORT_ID
#DIM COMPARTMENT

#DIM UNLOADABLE_NUM
#DIM ITEM_SIZE_TO_BE_STORED
#DIM TEMP_SHIP_LIST, MAX_SHIP
#DIM TEMP_SHIP_NUM


CALL PICKUP_FROM_SHIP_LIST(TEMP_SHIP_LIST, POSID, COUNTRY_ID)
TEMP_SHIP_NUM = RESULT

VARSET STORED_RESOURCE_NUM, 0
TOTAL_STORED_RESOURCE_NUM = 0
ITEM_SIZE_TO_BE_STORED = 0

TOTAL_CONTAINER_CAPACITY = GET_MAX_PORT_CARGO_CAPACITY(PORT_ID)

CURRENT_STORED_ITEM_NUM = GET_TOTAL_ITEM_NUM_IN_PORT(PORT_ID)

FOR LOCAL, 0, TEMP_SHIP_NUM
    SHIP_ID = TEMP_SHIP_LIST:LOCAL
    SIF SHIP_ID == -1
        BREAK
    DEBUGPRINTFORML SHIPID: {SHIP_ID}
    ;途中で一杯になったら終了する
    IF CURRENT_STORED_ITEM_NUM >= TOTAL_CONTAINER_CAPACITY
        PRINTL コンテナが一杯で収容キャパシティが不足しています
        IF TOTAL_STORED_RESOURCE_NUM > 0
            PRINTL 作業ロボットが適当に入れられるだけコンテナに貨物を入れました。輸送船に残ったリソースを確認してください
            PRINTL 以下の貨物をコンテナに収めました
            PRINTL 
            FOR ITEM_ID, 0, ITEM_LENGTH
                SIF STORED_RESOURCE_NUM:ITEM_ID == 0
                    CONTINUE
                CALL GET_ITEM_NAME(ITEM_ID)
                PRINTFORML %RESULTS% x %TOSTR(STORED_RESOURCE_NUM:ITEM_ID, "##,###"), 5, RIGHT%
            NEXT
            PRINTL
            PRINTW 以上
        ENDIF
        RETURN 0
    ENDIF

    WHILE 1
        CALL GET_CARGO_ITEM_INFO(SHIP_ID, 0)
        ;@UNLOAD_FROM_SHIPでSHIP_CARGO_ITEM_ID配列が詰められるので、常に先頭を見る
        ITEM_ID = RESULT:0
        SIF ITEM_ID == -1
            BREAK

        UNLOADABLE_NUM  = MIN(RESULT:1, (TOTAL_CONTAINER_CAPACITY - CURRENT_STORED_ITEM_NUM))

        CALLF UNLOAD_FROM_SHIP(SHIP_ID, ITEM_ID, UNLOADABLE_NUM)
        CALL STORE_ITEM_TO_PORT(PORT_ID, ITEM_ID, UNLOADABLE_NUM)
        CURRENT_STORED_ITEM_NUM += UNLOADABLE_NUM
        STORED_RESOURCE_NUM:ITEM_ID += UNLOADABLE_NUM
        TOTAL_STORED_RESOURCE_NUM += UNLOADABLE_NUM
    WEND
NEXT

PRINTL 以下の貨物をコンテナに収めました
PRINTL 
FOR ITEM_ID, 0, ITEM_LENGTH
    SIF STORED_RESOURCE_NUM:ITEM_ID == 0
        CONTINUE
    CALL GET_ITEM_NAME(ITEM_ID)
    PRINTFORML %RESULTS% x %TOSTR(STORED_RESOURCE_NUM:ITEM_ID, "##,###"), 5, RIGHT%
NEXT
PRINTL
PRINTW 以上


; 全ての貨物をコンテナに移す(星版)
@MOVE_RESOURCE_TO_STAR_CONTAINER(COUNTRY_ID, POSID, PORT_ID)
#DIM COUNTRY_ID
#DIM POSID
#DIM TOTAL_STORED_RESOURCE_NUM
#DIM STORED_RESOURCE_NUM, ITEM_LENGTH
#DIM TOTAL_CONTAINER_CAPACITY
#DIM CURRENT_STORED_ITEM_NUM
#DIM SHIP_ID
#DIM SLOT_ID
#DIM ITEM_ID
#DIM PORT_ID
#DIM COMPARTMENT

#DIM UNLOADABLE_NUM
#DIM ITEM_SIZE_TO_BE_STORED
#DIM TEMP_SHIP_LIST, MAX_SHIP
#DIM TEMP_SHIP_NUM

CALL PICKUP_FROM_SHIP_LIST(TEMP_SHIP_LIST, POSID, COUNTRY_ID)
TEMP_SHIP_NUM = RESULT

VARSET STORED_RESOURCE_NUM, 0
TOTAL_STORED_RESOURCE_NUM = 0
ITEM_SIZE_TO_BE_STORED = 0

TOTAL_CONTAINER_CAPACITY = GET_MAX_STAR_PORT_CARGO_CAPACITY(PORT_ID)

CURRENT_STORED_ITEM_NUM = GET_TOTAL_ITEM_NUM_IN_STAR_PORT(PORT_ID)

FOR LOCAL, 0, TEMP_SHIP_NUM
    SHIP_ID = TEMP_SHIP_LIST:LOCAL
    SIF SHIP_ID == -1
        BREAK
    DEBUGPRINTFORML SHIPID: {SHIP_ID}
    ;途中で一杯になったら終了する
    IF CURRENT_STORED_ITEM_NUM >= TOTAL_CONTAINER_CAPACITY
        PRINTL コンテナが一杯で収容キャパシティが不足しています
        IF TOTAL_STORED_RESOURCE_NUM > 0
            PRINTL 作業ロボットが適当に入れられるだけコンテナに貨物を入れました。輸送船に残ったリソースを確認してください
            PRINTL 以下の貨物をコンテナに収めました
            PRINTL 
            FOR ITEM_ID, 0, ITEM_LENGTH
                SIF STORED_RESOURCE_NUM:ITEM_ID == 0
                    CONTINUE
                CALL GET_ITEM_NAME(ITEM_ID)
                PRINTFORML %RESULTS% x %TOSTR(STORED_RESOURCE_NUM:ITEM_ID, "##,###"), 5, RIGHT%
            NEXT
            PRINTL
            PRINTW 以上
        ENDIF
        RETURN 0
    ENDIF

    WHILE 1
        CALL GET_CARGO_ITEM_INFO(SHIP_ID, 0)
        ;@UNLOAD_FROM_SHIPでSHIP_CARGO_ITEM_ID配列が詰められるので、常に先頭を見る
        ITEM_ID = RESULT:0
        SIF ITEM_ID == -1
            BREAK

        UNLOADABLE_NUM  = MIN(RESULT:1, (TOTAL_CONTAINER_CAPACITY - CURRENT_STORED_ITEM_NUM))

        CALLF UNLOAD_FROM_SHIP(SHIP_ID, ITEM_ID, UNLOADABLE_NUM)
        CALL STORE_ITEM_TO_STAR_PORT(PORT_ID, ITEM_ID, UNLOADABLE_NUM)
        CURRENT_STORED_ITEM_NUM += UNLOADABLE_NUM
        STORED_RESOURCE_NUM:ITEM_ID += UNLOADABLE_NUM
        TOTAL_STORED_RESOURCE_NUM += UNLOADABLE_NUM
    WEND
NEXT

PRINTL 以下の貨物をコンテナに収めました
PRINTL 
FOR ITEM_ID, 0, ITEM_LENGTH
    SIF STORED_RESOURCE_NUM:ITEM_ID == 0
        CONTINUE
    CALL GET_ITEM_NAME(ITEM_ID)
    PRINTFORML %RESULTS% x %TOSTR(STORED_RESOURCE_NUM:ITEM_ID, "##,###"), 5, RIGHT%
NEXT
PRINTL
PRINTW 以上


; 輸送船とコンテナでアイテムをやり取りする
@MOVE_RESOURCE(COUNTRY_ID, POSID, PORT_ID)
#DIM COUNTRY_ID
#DIM POSID
#DIM SHIP_RESOURCE_NUM, ITEM_LENGTH
#DIM IS_STAR
#DIM CONTAINER_RESOURCE_NUM, ITEM_LENGTH
#DIM CARGO_SHIP_CAPACITY
#DIM PORT_CONTAINER_CAPACITY
#DIM SHIP_ID
#DIM ITEM_ID
#DIM PORT_ID
#DIM SLOT_ID
#DIM CURRENT_SHIP_RESOURCE_NUM
#DIM CURRENT_CONTAINER_RESOURCE_NUM
#DIM SHIP_STATUS, SHIP_STATUS_LENGTH

#DIM DEAL_NUM

#DIM TEMP_SHIP_LIST, MAX_SHIP
#DIM TEMP_SHIP_NUM

VARSET SHIP_RESOURCE_NUM, 0
VARSET CONTAINER_RESOURCE_NUM, 0
CARGO_SHIP_CAPACITY = 0
PORT_CONTAINER_CAPACITY = GET_MAX_PORT_CARGO_CAPACITY(PORT_ID)
CURRENT_CONTAINER_RESOURCE_NUM = GET_TOTAL_ITEM_NUM_IN_PORT(PORT_ID)

CALL PICKUP_FROM_SHIP_LIST(TEMP_SHIP_LIST, POSID, COUNTRY_ID)
TEMP_SHIP_NUM = RESULT

; いったん輸送船とコンテナの荷物をそれぞれのバッファ変数に収める
FOR LOCAL, 0, TEMP_SHIP_NUM
    SHIP_ID = TEMP_SHIP_LIST:LOCAL

    VARSET SHIP_STATUS, 0
    TRYCALLFORM GET_SHIP_STATUS_{SHIP_MODEL:SHIP_ID}(SHIP_STATUS)
    FOR LOCAL:2, 0, SHIP_STATUS:SHIP_OPTION_SLOT
        TRYCALLFORM GET_OPTION_EQUIP_EFFECT_{SHIP_EQUIP:オプション:(LOCAL:2):SHIP_ID}(SHIP_STATUS)
    NEXT
    CARGO_SHIP_CAPACITY += SHIP_STATUS:SHIP_CAPACITY
    FOR LOCAL:1, 0, ITEM_TYPE_PER_SHIP
        CALL GET_CARGO_ITEM_INFO(SHIP_ID, LOCAL:1)
        SIF RESULT:0 == -1
            BREAK
        ITEM_ID = RESULT:0
        SHIP_RESOURCE_NUM:ITEM_ID = UNLOAD_FROM_SHIP(SHIP_ID, ITEM_ID)
    NEXT
NEXT

FOR ITEM_ID, 0, ITEM_LENGTH
    CONTAINER_RESOURCE_NUM:ITEM_ID = RESTORE_ITEM_FROM_PORT(PORT_ID, ITEM_ID)
NEXT

$INPUT_LOOP
; ユーザーに再分配してもらう
DRAWLINE
PRINTL ◆リソースの管理
PRINTL 
PRINTFORM %"", 32, LEFT%
PRINTFORM %"輸送船団", 16, RIGHT%
PRINTFORM %"", 24, LEFT%
PRINTFORML %"コンテナ", 16, RIGHT%
PRINTFORM %"キャパシティ", 32, LEFT%
IF CARGO_SHIP_CAPACITY == 0
    PRINTFORM {0, 16, RIGHT}
ELSE
    PRINTFORM %TOSTR(CARGO_SHIP_CAPACITY, "###,###,###"), 16, RIGHT%
ENDIF
PRINTFORM %"", 24, LEFT%
IF PORT_CONTAINER_CAPACITY == 0
    PRINTFORML {0 , 16, RIGHT}
ELSE
    PRINTFORML %TOSTR(PORT_CONTAINER_CAPACITY, "###,###,###"), 16, RIGHT%
ENDIF
PRINTL
FOR ITEM_ID, 0, ITEM_LENGTH
    SIF SHIP_RESOURCE_NUM:ITEM_ID == 0 && CONTAINER_RESOURCE_NUM:ITEM_ID == 0
        CONTINUE
    CALL GET_ITEM_NAME(ITEM_ID)
    PRINTFORM %RESULTS, 32, LEFT%
    IF SHIP_RESOURCE_NUM:ITEM_ID > 0
        PRINTFORM %TOSTR(SHIP_RESOURCE_NUM:ITEM_ID), 16, RIGHT%
    ELSE
        PRINTFORM {0, 16, RIGHT}
    ENDIF

    PRINTBUTTON "[<<<]", 1000 + ITEM_ID        
    PRINTBUTTON "[<<]", 1000 + ITEM_LENGTH + ITEM_ID
    PRINTBUTTON "[<]", 1000 + 2 * ITEM_LENGTH + ITEM_ID
    PRINTBUTTON "[>]", 1000 + 3 * ITEM_LENGTH + ITEM_ID
    PRINTBUTTON "[>>]", 1000 + 4 * ITEM_LENGTH + ITEM_ID
    PRINTBUTTON "[>>>]", 1000 + 5 * ITEM_LENGTH + ITEM_ID

    IF CONTAINER_RESOURCE_NUM:ITEM_ID > 0
        PRINTFORML %TOSTR(CONTAINER_RESOURCE_NUM:ITEM_ID), 16, RIGHT%
    ELSE
        PRINTFORML {0, 16, RIGHT}
    ENDIF
NEXT
SETCOLOR 0X666666
PRINTL --------------------------------------------------------------------------------------------------------------
RESETCOLOR
PRINTBUTTON "[100] 完了", 100
PRINTL
DRAWLINE

INPUT

IF RESULT == 100
    CURRENT_SHIP_RESOURCE_NUM = 0
    CURRENT_CONTAINER_RESOURCE_NUM = 0
    FOR ITEM_ID, 0, ITEM_LENGTH
        CURRENT_SHIP_RESOURCE_NUM += SHIP_RESOURCE_NUM:ITEM_ID
        CURRENT_CONTAINER_RESOURCE_NUM += CONTAINER_RESOURCE_NUM:ITEM_ID
    NEXT
    IF CURRENT_SHIP_RESOURCE_NUM > CARGO_SHIP_CAPACITY
        SETCOLOR 0XFF0000
        PRINTFORMW 輸送船団に振り分けようとしているリソースがキャパシティを超えています
        RESETCOLOR
        GOTO INPUT_LOOP
    ENDIF
    IF CURRENT_CONTAINER_RESOURCE_NUM > PORT_CONTAINER_CAPACITY
        SETCOLOR 0XFF0000
        PRINTFORML コンテナに振り分けようとしているリソースがキャパシティを超えています
        PRINTFORMW 溢れたリソースを破棄してよろしいですか?
        RESETCOLOR
        CALL ASK_YN
        SIF RESULT
            GOTO INPUT_LOOP
    ENDIF
    ; リソースの再分配
    CALL ADD_RESOURCE_TO_SHIP(POSID, COUNTRY_ID, SHIP_RESOURCE_NUM)
    CALL ADD_RESOURCE_TO_PORT_CONTAINER(PORT_ID, CONTAINER_RESOURCE_NUM)
    PRINTW リソースの分配を完了しました
    RETURN
ELSEIF 1000 <= RESULT && RESULT < 1000 + 6 * ITEM_LENGTH
    ITEM_ID = (RESULT - 1000) % ITEM_LENGTH
    SELECTCASE (RESULT - 1000) / ITEM_LENGTH
        ; CONTAINER -> SHIP
        CASE 0
            DEAL_NUM = -1 * MIN (100, CONTAINER_RESOURCE_NUM:ITEM_ID)
        CASE 1
            DEAL_NUM = -1 * MIN (10, CONTAINER_RESOURCE_NUM:ITEM_ID)
        CASE 2
            DEAL_NUM = -1 * MIN (1, CONTAINER_RESOURCE_NUM:ITEM_ID)
        ; SHIP-> CONTAINER
        CASE 3
            DEAL_NUM = MIN (1, SHIP_RESOURCE_NUM:ITEM_ID)
        CASE 4
            DEAL_NUM = MIN (10, SHIP_RESOURCE_NUM:ITEM_ID)
        CASE 5
            DEAL_NUM = MIN (100, SHIP_RESOURCE_NUM:ITEM_ID)
    ENDSELECT

    CONTAINER_RESOURCE_NUM:ITEM_ID += DEAL_NUM
    SHIP_RESOURCE_NUM:ITEM_ID -= DEAL_NUM
    GOTO INPUT_LOOP
ELSE
    GOTO INPUT_LOOP
ENDIF


; 輸送船と星の宇宙港コンテナでアイテムをやり取りする
@MOVE_RESOURCE_TO_STAR(COUNTRY_ID, POSID, PORT_ID)
#DIM COUNTRY_ID
#DIM POSID
#DIM SHIP_RESOURCE_NUM, ITEM_LENGTH
#DIM IS_STAR
#DIM CONTAINER_RESOURCE_NUM, ITEM_LENGTH
#DIM CARGO_SHIP_CAPACITY
#DIM PORT_CONTAINER_CAPACITY
#DIM SHIP_ID
#DIM ITEM_ID
#DIM PORT_ID
#DIM SLOT_ID
#DIM CURRENT_SHIP_RESOURCE_NUM
#DIM CURRENT_CONTAINER_RESOURCE_NUM
#DIM SHIP_STATUS, SHIP_STATUS_LENGTH

#DIM DEAL_NUM

#DIM TEMP_SHIP_LIST, MAX_SHIP
#DIM TEMP_SHIP_NUM

VARSET SHIP_RESOURCE_NUM, 0
VARSET CONTAINER_RESOURCE_NUM, 0
CARGO_SHIP_CAPACITY = 0
PORT_CONTAINER_CAPACITY = GET_MAX_STAR_PORT_CARGO_CAPACITY(PORT_ID)
CURRENT_CONTAINER_RESOURCE_NUM = GET_TOTAL_ITEM_NUM_IN_STAR_PORT(PORT_ID)

CALL PICKUP_FROM_SHIP_LIST(TEMP_SHIP_LIST, POSID, COUNTRY_ID)
TEMP_SHIP_NUM = RESULT

; いったん輸送船とコンテナの荷物をそれぞれのバッファ変数に収める
FOR LOCAL, 0, TEMP_SHIP_NUM
    SHIP_ID = TEMP_SHIP_LIST:LOCAL

    VARSET SHIP_STATUS, 0
    TRYCALLFORM GET_SHIP_STATUS_{SHIP_MODEL:SHIP_ID}(SHIP_STATUS)
    FOR LOCAL:2, 0, SHIP_STATUS:SHIP_OPTION_SLOT
        TRYCALLFORM GET_OPTION_EQUIP_EFFECT_{SHIP_EQUIP:オプション:(LOCAL:2):SHIP_ID}(SHIP_STATUS)
    NEXT
    CARGO_SHIP_CAPACITY += SHIP_STATUS:SHIP_CAPACITY
    FOR LOCAL:1, 0, ITEM_TYPE_PER_SHIP
        CALL GET_CARGO_ITEM_INFO(SHIP_ID, LOCAL:1)
        SIF RESULT:0 == -1
            BREAK
        ITEM_ID = RESULT:0
        SHIP_RESOURCE_NUM:ITEM_ID = UNLOAD_FROM_SHIP(SHIP_ID, ITEM_ID)
    NEXT
NEXT

FOR ITEM_ID, 0, ITEM_LENGTH
    CONTAINER_RESOURCE_NUM:ITEM_ID = RESTORE_ITEM_FROM_STAR_PORT(PORT_ID, ITEM_ID)
NEXT

$INPUT_LOOP
; ユーザーに再分配してもらう
DRAWLINE
PRINTL ◆リソースの管理
PRINTL 
PRINTFORM %"", 32, LEFT%
PRINTFORM %"輸送船団", 16, RIGHT%
PRINTFORM %"", 24, LEFT%
PRINTFORML %"コンテナ", 16, RIGHT%
PRINTFORM %"キャパシティ", 32, LEFT%
IF CARGO_SHIP_CAPACITY == 0
    PRINTFORM {0, 16, RIGHT}
ELSE
    PRINTFORM %TOSTR(CARGO_SHIP_CAPACITY, "###,###,###"), 16, RIGHT%
ENDIF
PRINTFORM %"", 24, LEFT%
IF PORT_CONTAINER_CAPACITY == 0
    PRINTFORML {0 , 16, RIGHT}
ELSE
    PRINTFORML %TOSTR(PORT_CONTAINER_CAPACITY, "###,###,###"), 16, RIGHT%
ENDIF
PRINTL
FOR ITEM_ID, 0, ITEM_LENGTH
    SIF SHIP_RESOURCE_NUM:ITEM_ID == 0 && CONTAINER_RESOURCE_NUM:ITEM_ID == 0
        CONTINUE
    CALL GET_ITEM_NAME(ITEM_ID)
    PRINTFORM %RESULTS, 32, LEFT%
    IF SHIP_RESOURCE_NUM:ITEM_ID > 0
        PRINTFORM %TOSTR(SHIP_RESOURCE_NUM:ITEM_ID), 16, RIGHT%
    ELSE
        PRINTFORM {0, 16, RIGHT}
    ENDIF

    PRINTBUTTON "[<<<]", 1000 + ITEM_ID        
    PRINTBUTTON "[<<]", 1000 + ITEM_LENGTH + ITEM_ID
    PRINTBUTTON "[<]", 1000 + 2 * ITEM_LENGTH + ITEM_ID
    PRINTBUTTON "[>]", 1000 + 3 * ITEM_LENGTH + ITEM_ID
    PRINTBUTTON "[>>]", 1000 + 4 * ITEM_LENGTH + ITEM_ID
    PRINTBUTTON "[>>>]", 1000 + 5 * ITEM_LENGTH + ITEM_ID

    IF CONTAINER_RESOURCE_NUM:ITEM_ID > 0
        PRINTFORML %TOSTR(CONTAINER_RESOURCE_NUM:ITEM_ID), 16, RIGHT%
    ELSE
        PRINTFORML {0, 16, RIGHT}
    ENDIF
NEXT
SETCOLOR 0X666666
PRINTL --------------------------------------------------------------------------------------------------------------
RESETCOLOR
PRINTBUTTON "[100] 完了", 100
PRINTL
DRAWLINE

INPUT

IF RESULT == 100
    CURRENT_SHIP_RESOURCE_NUM = 0
    CURRENT_CONTAINER_RESOURCE_NUM = 0
    FOR ITEM_ID, 0, ITEM_LENGTH
        CURRENT_SHIP_RESOURCE_NUM += SHIP_RESOURCE_NUM:ITEM_ID
        CURRENT_CONTAINER_RESOURCE_NUM += CONTAINER_RESOURCE_NUM:ITEM_ID
    NEXT
    IF CURRENT_SHIP_RESOURCE_NUM > CARGO_SHIP_CAPACITY
        SETCOLOR 0XFF0000
        PRINTFORMW 輸送船団に振り分けようとしているリソースがキャパシティを超えています
        RESETCOLOR
        GOTO INPUT_LOOP
    ENDIF
    IF CURRENT_CONTAINER_RESOURCE_NUM > PORT_CONTAINER_CAPACITY
        SETCOLOR 0XFF0000
        PRINTFORMW コンテナに振り分けようとしているリソースがキャパシティを超えています
        RESETCOLOR
        GOTO INPUT_LOOP
    ENDIF
    ; リソースの再分配
    CALL ADD_RESOURCE_TO_SHIP(POSID, COUNTRY_ID, SHIP_RESOURCE_NUM)
    CALL ADD_RESOURCE_TO_STAR_PORT_CONTAINER(PORT_ID, CONTAINER_RESOURCE_NUM)
    PRINTW リソースの分配を完了しました
    RETURN
ELSEIF 1000 <= RESULT && RESULT < 1000 + 6 * ITEM_LENGTH
    ITEM_ID = (RESULT - 1000) % ITEM_LENGTH
    SELECTCASE (RESULT - 1000) / ITEM_LENGTH
        ; CONTAINER -> SHIP
        CASE 0
            DEAL_NUM = -1 * MIN (100, CONTAINER_RESOURCE_NUM:ITEM_ID)
        CASE 1
            DEAL_NUM = -1 * MIN (10, CONTAINER_RESOURCE_NUM:ITEM_ID)
        CASE 2
            DEAL_NUM = -1 * MIN (1, CONTAINER_RESOURCE_NUM:ITEM_ID)
        ; SHIP-> CONTAINER
        CASE 3
            DEAL_NUM = MIN (1, SHIP_RESOURCE_NUM:ITEM_ID)
        CASE 4
            DEAL_NUM = MIN (10, SHIP_RESOURCE_NUM:ITEM_ID)
        CASE 5
            DEAL_NUM = MIN (100, SHIP_RESOURCE_NUM:ITEM_ID)
    ENDSELECT

    CONTAINER_RESOURCE_NUM:ITEM_ID += DEAL_NUM
    SHIP_RESOURCE_NUM:ITEM_ID -= DEAL_NUM
    GOTO INPUT_LOOP
ELSE
    GOTO INPUT_LOOP
ENDIF

; 宇宙港にいるか
@IN_PORT(ID)
#FUNCTION
#DIM ID

FOR LOCAL, 0, 星系数
    SIF 星系座標ID:LOCAL == CHARACTER_POSITION:ID
        RETURNF 1
NEXT

FOR LOCAL, 0, MAX_PORT
    SIF PORT_POSITION_ID == CHARACTER_POSITION:ID
        RETURNF 1
NEXT

RETURNF 0


@GET_MAX_PORT_CARGO_CAPACITY(PORT_ID)
#FUNCTION
#DIM PORT_ID
#DIM SLOT_ID
#DIM TOTAL_CONTAINER_CAPACITY
TOTAL_CONTAINER_CAPACITY = 0
FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
    SIF PORT_SLOT:PORT_ID:SLOT_ID == コンテナ
        TOTAL_CONTAINER_CAPACITY += CONTAINER_CAPACITY
NEXT

RETURNF TOTAL_CONTAINER_CAPACITY


;港に貨物サイズの概念いる・・・？
;@GET_SUM_TOTAL_PORT_CARGO_SIZE(PORT_ID)
;#DIM PORT_ID
;#DIM ITEM_ID
;#DIM SUM_TOTAL
;
;SUM_TOTAL = 0
;
;FOR ITEM_ID, 0, VARSIZE("PORT_CARGO")
;    CALL GET_ITEM_INFO(ITEM_ID, CARGO_SIZE)
;    SIF RESULT != -1
;        SUM_TOTAL += PORT_CARGO:PORT_ID:ITEM_ID * RESULT
;NEXT
;RETURN SUM_TOTAL


@GET_ITEM_NUM_IN_PORT(PORT_ID, ITEM_ID)
#FUNCTION
#DIM PORT_ID
#DIM ITEM_ID
RETURNF PORT_CARGO:PORT_ID:ITEM_ID

@GET_TOTAL_ITEM_NUM_IN_PORT(PORT_ID)
#FUNCTION
#DIM PORT_ID
#DIM ITEM_ID
#DIM TOTAL_NUM

TOTAL_NUM = 0
FOR ITEM_ID, 0, ITEM_LENGTH
    TOTAL_NUM += STAR_PORT_CARGO:PORT_ID:ITEM_ID
NEXT
RETURNF TOTAL_NUM


;港の保管庫にアイテムを預ける
@STORE_ITEM_TO_PORT(PORT_ID, ITEM_ID, ITEM_NUM)
#DIM PORT_ID
#DIM ITEM_ID
#DIM ITEM_NUM

PORT_CARGO:PORT_ID:ITEM_ID += ITEM_NUM
RETURN 0



;港の保管庫からアイテムを引き出す
;個数を省略すると全部引き出す
@RESTORE_ITEM_FROM_PORT(PORT_ID, ITEM_ID, ITEM_NUM = -1)
#FUNCTION
#DIM PORT_ID
#DIM ITEM_ID
#DIM ITEM_NUM
#DIM RESTORED_NUM
IF ITEM_NUM == -1
    RESTORED_NUM = PORT_CARGO:PORT_ID:ITEM_ID
ELSEIF ITEM_NUM > PORT_CARGO:PORT_ID:ITEM_ID
    RESTORED_NUM = PORT_CARGO:PORT_ID:ITEM_ID
ELSE
    RESTORED_NUM = ITEM_NUM
ENDIF
PORT_CARGO:PORT_ID:ITEM_ID -= RESTORED_NUM

RETURNF RESTORED_NUM

;-------------------------------------
;星系港　（宇宙港と扱い分ける意味ある・・・？
;-------------------------------------
@GET_MAX_STAR_PORT_CARGO_CAPACITY(STAR_ID)
#FUNCTION
#DIM STAR_ID
#DIM SLOT_ID
#DIM TOTAL_CONTAINER_CAPACITY
TOTAL_CONTAINER_CAPACITY = 0
FOR SLOT_ID, 0, STAR_PORT_SLOT_NUM
    SIF STAR_PORT_SLOT:STAR_ID:SLOT_ID == コンテナ
        TOTAL_CONTAINER_CAPACITY += CONTAINER_CAPACITY
NEXT

RETURNF TOTAL_CONTAINER_CAPACITY


@GET_ITEM_NUM_IN_STAR_PORT(STAR_ID, ITEM_ID)
#FUNCTION
#DIM STAR_ID
#DIM ITEM_ID

RETURNF STAR_PORT_CARGO:STAR_ID:ITEM_ID

@GET_TOTAL_ITEM_NUM_IN_STAR_PORT(STAR_ID)
#FUNCTION
#DIM STAR_ID
#DIM ITEM_ID
#DIM TOTAL_NUM

TOTAL_NUM = 0
FOR ITEM_ID, 0, ITEM_LENGTH
    TOTAL_NUM += STAR_PORT_CARGO:STAR_ID:ITEM_ID
NEXT
RETURNF TOTAL_NUM


;港の保管庫にアイテムを預ける
@STORE_ITEM_TO_STAR_PORT(STAR_ID, ITEM_ID, ITEM_NUM)
#DIM STAR_ID
#DIM ITEM_ID
#DIM ITEM_NUM

STAR_PORT_CARGO:STAR_ID:ITEM_ID += ITEM_NUM
RETURN 0

;港の保管庫からアイテムを引き出す
;個数を省略すると全部引き出す
@RESTORE_ITEM_FROM_STAR_PORT(STAR_ID, ITEM_ID, ITEM_NUM = -1)
#FUNCTION
#DIM STAR_ID
#DIM ITEM_ID
#DIM ITEM_NUM
#DIM RESTORED_NUM
IF ITEM_NUM == -1
    RESTORED_NUM = STAR_PORT_CARGO:STAR_ID:ITEM_ID
ELSEIF ITEM_NUM > STAR_PORT_CARGO:STAR_ID:ITEM_ID
    RESTORED_NUM = STAR_PORT_CARGO:STAR_ID:ITEM_ID
ELSE
    RESTORED_NUM = ITEM_NUM
ENDIF
STAR_PORT_CARGO:STAR_ID:ITEM_ID -= RESTORED_NUM

RETURNF RESTORED_NUM
