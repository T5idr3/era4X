@SHIP_DESIGN
#DIM PAGE
#DIM ID
#DIM CONST PAGE_PER_VIEW = 20

PAGE = 0

$INPUT_LOOP
DRAWLINE
PRINTFORML 艦船設計
DRAWLINE

FOR ID, PAGE * PAGE_PER_VIEW, (PAGE + 1) * PAGE_PER_VIEW
	IF ORIGIN_SHIPCATEGORY:ID == 0
		LOCALS = 新規設計
	ELSE
		LOCALS = %ORIGIN_SHIP_NAME:ID%
	ENDIF
	PRINTBUTTON @"[{ID, 3, RIGHT}] %LOCALS%", ID
	PRINTL
NEXT
DRAWLINE
IF PAGE == 0
	SETCOLOR 0X666666
	PRINT [<]
	RESETCOLOR
ELSE
	PRINTBUTTON "[<]", MAX_ORIGIN_SHIP
ENDIF
IF (PAGE + 1) * PAGE_PER_VIEW >= MAX_ORIGIN_SHIP
	SETCOLOR 0X666666
	PRINT [>]
	RESETCOLOR
ELSE
	PRINTBUTTON "[>]", MAX_ORIGIN_SHIP + 1
ENDIF
PRINTL
PRINTBUTTON "[戻る]", MAX_ORIGIN_SHIP + 2
PRINTL
DRAWLINE

INPUT
IF RESULT == MAX_ORIGIN_SHIP && PAGE > 0
	PAGE --
ELSEIF RESULT == MAX_ORIGIN_SHIP + 1 && PAGE * PAGE_PER_VIEW < MAX_ORIGIN_SHIP
	PAGE ++
ELSEIF RESULT >= 0 && RESULT < MAX_ORIGIN_SHIP
	CALL EDIT_SHIP_DESIGN(RESULT)
ELSEIF RESULT == MAX_ORIGIN_SHIP + 2
	RETURN
ENDIF
GOTO INPUT_LOOP

@EDIT_SHIP_DESIGN(ID)
#DIM ID
#DIM 入力値
#DIM TEMPLATE_STATUS, STATUS_LENGTH
#DIM TICK_HP
#DIMS NEW_SHIP_NAME
#DIM NEW_SHIP_CATEGORY
#DIM NEW_SHIP_TEMPLATE
#DIM NEW_SHIP_COST
#DIM NEW_SHIP_HP
#DIM NEW_SHIP_AVOID
#DIM NEW_SHIP_MAIN_WEAPON_SIZE
#DIM NEW_SHIP_SUB_WEAPON_SIZE
#DIM NEW_SHIP_SIELD_SIZE
#DIM NEW_SHIP_ARMOR_SIZE
#DIM NEW_SHIP_ENGIN_SIZE
#DIM NEW_SHIP_MAIN_WEAPON_SLOT
#DIM NEW_SHIP_SUB_WEAPON_SLOT
#DIM NEW_SHIP_SIELD_SLOT
#DIM NEW_SHIP_ARMOR_SLOT
#DIM NEW_SHIP_ENGIN_SLOT
#DIM NEW_SHIP_COMPUTER_SLOT
#DIM NEW_SHIP_SENSOR_SLOT
#DIM NEW_SHIP_OPTION_SLOT
#DIM NEW_SHIP_CRITICAL_RISK_TOTAL
#DIM NEW_SHIP_CRITICAL_RISK_ADJUST
#DIM NEW_SHIP_VARIANT
#DIM NEW_SHIP_SIZE
#DIM NEW_SHIP_CREW
#DIM NEW_SHIP_RESOURCE, RESOURCE_MAX_COUNT
#DIM CONST TITLE_LENGTH = 20


NEW_SHIP_NAME = %ORIGIN_SHIP_NAME:ID%
NEW_SHIP_CATEGORY = ORIGIN_SHIPCATEGORY:ID
NEW_SHIP_TEMPLATE = ORIGIN_SHIP_TEMPLATE:ID
NEW_SHIP_HP = ORIGIN_SHIP_HP:ID
NEW_SHIP_AVOID = ORIGIN_SHIP_AVOID:ID
NEW_SHIP_MAIN_WEAPON_SIZE = ORIGIN_SHIP_MAIN_WEAPON_SIZE:ID
NEW_SHIP_SUB_WEAPON_SIZE = ORIGIN_SHIP_SUB_WEAPON_SIZE:ID
NEW_SHIP_SIELD_SIZE = ORIGIN_SHIP_SIELD_SIZE:ID
NEW_SHIP_ARMOR_SIZE = ORIGIN_SHIP_ARMOR_SIZE:ID
NEW_SHIP_ENGIN_SIZE = ORIGIN_SHIP_ENGIN_SIZE:ID
NEW_SHIP_MAIN_WEAPON_SLOT = ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID
NEW_SHIP_SUB_WEAPON_SLOT = ORIGIN_SHIP_SUB_WEAPON_SLOT:ID
NEW_SHIP_SIELD_SLOT = ORIGIN_SHIP_SIELD_SLOT:ID
NEW_SHIP_ARMOR_SLOT = ORIGIN_SHIP_ARMOR_SLOT:ID
NEW_SHIP_ENGIN_SLOT = 1
NEW_SHIP_COMPUTER_SLOT = 1
NEW_SHIP_SENSOR_SLOT = 1
NEW_SHIP_OPTION_SLOT = ORIGIN_SHIP_OPTION_SLOT:ID
NEW_SHIP_VARIANT = ORIGIN_SHIP_VARIANT:ID
NEW_SHIP_SIZE = ORIGIN_SHIP_SIZE:ID
NEW_SHIP_CREW = ORIGIN_SHIP_CREW:ID
NEW_SHIP_CRITICAL_RISK_TOTAL = ORIGIN_SHIP_CRITICAL_RISK:ID

VARSET TEMPLATE_STATUS
TICK_HP = 0
IF NEW_SHIP_CATEGORY != 0
	TRYCCALLFORM GET_ORIGIN_SHIP_TEMPLATE_STATUS_{NEW_SHIP_CATEGORY}_{NEW_SHIP_TEMPLATE}(TEMPLATE_STATUS)
	CATCH
		PRINTW ※この設計の元になったテンプレートが存在しないため、設計を変更できません
		RETURN
	ENDCATCH
	TICK_HP = TEMPLATE_STATUS:SHIP_HP / 10
ENDIF
SIF TICK_HP != 0 ; ゼロ除算回避(TICK_HP == 0 ならたぶんそのまま作れる船ではない)
	NEW_SHIP_CRITICAL_RISK_ADJUST = ORIGIN_SHIP_CRITICAL_RISK:ID - ((NEW_SHIP_AVOID * 千分率化用定数 / 回避・クリティカル比定数) + ((NEW_SHIP_MAIN_WEAPON_SLOT - TEMPLATE_STATUS:SHIP_MAIN_WEAPON_SLOT) * MAIN_WEAPON_CRITICAL_RISK) + ((NEW_SHIP_SUB_WEAPON_SLOT - TEMPLATE_STATUS:SHIP_SUB_WEAPON_SLOT) * SUB_WEAPON_CRITICAL_RISK ) + ((NEW_SHIP_HP - TICK_HP * 10) / TICK_HP * HP_CRITICAL_RISK))

$INPUT_LOOP
SIF TICK_HP != 0
	NEW_SHIP_CRITICAL_RISK_TOTAL = NEW_SHIP_CRITICAL_RISK_ADJUST + (NEW_SHIP_AVOID * 千分率化用定数 / 回避・クリティカル比定数) + ((NEW_SHIP_MAIN_WEAPON_SLOT - TEMPLATE_STATUS:SHIP_MAIN_WEAPON_SLOT) * MAIN_WEAPON_CRITICAL_RISK) + ((NEW_SHIP_SUB_WEAPON_SLOT - TEMPLATE_STATUS:SHIP_SUB_WEAPON_SLOT) * SUB_WEAPON_CRITICAL_RISK ) + ((NEW_SHIP_HP - TICK_HP * 10) / TICK_HP * HP_CRITICAL_RISK)

; 艦種の選択
DRAWLINE
PRINTFORM 艦名: %NEW_SHIP_NAME% 
PRINTBUTTON "[変更]", 32
PRINTL
PRINTL
PRINT 艦種: 
VARSIZE DEVELOPMENT_TECH_ID
FOR LOCAL, 0, RESULT
	SIF DEVELOPMENT_TECH_ID:LOCAL == -1
		CONTINUE
	SIF !IS_COMPLETE_TECH:(DEVELOPMENT_TECH_ID:LOCAL)
		CONTINUE
	IF NEW_SHIP_CATEGORY == LOCAL
		SETCOLOR 0XFFFF00
		PRINTFORM [%SHIP_CATEGORY_NAME:LOCAL%]
		RESETCOLOR
	ELSE
		PRINTBUTTON @"[%SHIP_CATEGORY_NAME:LOCAL%]", LOCAL
	ENDIF
	PRINT  
NEXT
PRINTL 

PRINT テンプレート:
FOR LOCAL, 1, MAX_SHIP_TEMPLATE
	TRYCCALLFORM GET_ORIGIN_SHIP_TEMPLATE_NAME_{NEW_SHIP_CATEGORY}_{LOCAL}
	CATCH
		CONTINUE
	ENDCATCH
	TRYCCALLFORM IS_ABLE_TO_USE_TEMPLATE_{NEW_SHIP_CATEGORY}_{LOCAL}
		SIF !RESULT
			CONTINUE
	CATCH
		CONTINUE
	ENDCATCH
	IF NEW_SHIP_VARIANT == LOCAL
		SETCOLOR 0XFFFF00
		PRINTFORM [%RESULTS%]
		RESETCOLOR
	ELSE
		PRINTBUTTON @"[%RESULTS%]", LOCAL + 100
	ENDIF
NEXT
PRINTL 

; 特殊分類
PRINTFORML %"特殊分類", TITLE_LENGTH, LEFT%: %SHIP_VARIANT_NAME:NEW_SHIP_VARIANT%

; 艦の耐久
PRINTFORM %"耐久値", TITLE_LENGTH, LEFT%: 
PRINTBUTTON "[-]", 20
PRINTFORM %TOSTR(NEW_SHIP_HP, "##,###"), 6, RIGHT%
PRINTBUTTON "[+]", 21
PRINTL

; 艦の回避
PRINTFORM %"回避", TITLE_LENGTH, LEFT%: 
PRINTBUTTON "[-]", 22
PRINTFORM {NEW_SHIP_AVOID, 2, RIGHT}
PRINTBUTTON "[+]", 23
PRINTL

; 艦の被クリティカル率
PRINTFORM %"被クリティカル率", TITLE_LENGTH, LEFT%: 
PRINTFORM %(TOSTR(NEW_SHIP_CRITICAL_RISK_TOTAL, "##0,.0%"))%
PRINTL
PRINTL

; 装備のサイズ
PRINTFORML %"主砲サイズ", TITLE_LENGTH, LEFT%: {NEW_SHIP_MAIN_WEAPON_SIZE}
PRINTFORML %"副砲サイズ", TITLE_LENGTH, LEFT%: {NEW_SHIP_SUB_WEAPON_SIZE}
PRINTFORML %"シールドサイズ", TITLE_LENGTH, LEFT%: {NEW_SHIP_SIELD_SIZE}
PRINTFORML %"装甲サイズ", TITLE_LENGTH, LEFT%: {NEW_SHIP_ARMOR_SIZE}
PRINTFORML %"エンジンサイズ", TITLE_LENGTH, LEFT%: {NEW_SHIP_ENGIN_SIZE}
PRINTL
; 装備のスロット数
PRINTFORM %"主砲スロット数", TITLE_LENGTH, LEFT%: 
PRINTBUTTON "[-]", 24
PRINTFORM {NEW_SHIP_MAIN_WEAPON_SLOT}
PRINTBUTTON "[+]", 25
PRINTL
PRINTFORM %"副砲スロット数", TITLE_LENGTH, LEFT%: 
PRINTBUTTON "[-]", 26
PRINTFORM {NEW_SHIP_SUB_WEAPON_SLOT}
PRINTBUTTON "[+]", 27
PRINTL
PRINTFORM %"シールドスロット数", TITLE_LENGTH, LEFT%: 
PRINTBUTTON "[-]", 28
PRINTFORM {NEW_SHIP_SIELD_SLOT}
PRINTBUTTON "[+]", 29
PRINTL
PRINTFORM %"装甲スロット数", TITLE_LENGTH, LEFT%: 
PRINTBUTTON "[-]", 30
PRINTFORM {NEW_SHIP_ARMOR_SLOT}
PRINTBUTTON "[+]", 31
PRINTL
PRINTFORML %"エンジンスロット数", TITLE_LENGTH, LEFT%: {NEW_SHIP_ENGIN_SLOT}
PRINTFORML %"AIスロット数", TITLE_LENGTH, LEFT%: {NEW_SHIP_COMPUTER_SLOT}
PRINTFORML %"センサースロット数", TITLE_LENGTH, LEFT%: {NEW_SHIP_SENSOR_SLOT}
PRINTFORML %"オプションスロット数", TITLE_LENGTH, LEFT%: {NEW_SHIP_OPTION_SLOT}
PRINTL
PRINTL
PRINT 建造コスト: 
; コスト計算
NEW_SHIP_COST = 0
VARSET NEW_SHIP_RESOURCE, 0
SELECTCASE NEW_SHIP_CATEGORY
	CASE コルベット
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:0 * NEW_SHIP_MAIN_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:0 * NEW_SHIP_SUB_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:0 * NEW_SHIP_SIELD_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:0 * NEW_SHIP_ARMOR_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:0 * (NEW_SHIP_HP - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金)
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:0 * NEW_SHIP_ENGIN_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:0 * (NEW_SHIP_AVOID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:0 * NEW_SHIP_COMPUTER_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:0 * NEW_SHIP_SENSOR_SLOT
	CASE フリゲート
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:0 * NEW_SHIP_MAIN_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:1 * NEW_SHIP_SUB_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:1 * NEW_SHIP_SIELD_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:1 * NEW_SHIP_ARMOR_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:1 * (NEW_SHIP_HP - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:0 * NEW_SHIP_ENGIN_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:0 * (NEW_SHIP_AVOID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:0 * NEW_SHIP_COMPUTER_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:0 * NEW_SHIP_SENSOR_SLOT
	CASE 駆逐艦
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:1 * NEW_SHIP_MAIN_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:1 * NEW_SHIP_SUB_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:1 * NEW_SHIP_SIELD_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:1 * NEW_SHIP_ARMOR_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:1 * (NEW_SHIP_HP - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:1 * NEW_SHIP_ENGIN_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:1 * (NEW_SHIP_AVOID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:1 * NEW_SHIP_COMPUTER_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:1 * NEW_SHIP_SENSOR_SLOT
	CASE 巡洋艦
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:2 * NEW_SHIP_MAIN_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:2 * NEW_SHIP_SUB_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:2 * NEW_SHIP_SIELD_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:2 * NEW_SHIP_ARMOR_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:2 * (NEW_SHIP_HP - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:2 * NEW_SHIP_ENGIN_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:2 * (NEW_SHIP_AVOID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:2 * NEW_SHIP_COMPUTER_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:2 * NEW_SHIP_SENSOR_SLOT
	CASE 戦艦
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:3 * NEW_SHIP_MAIN_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:3 * NEW_SHIP_SUB_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:3 * NEW_SHIP_SIELD_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:3 * NEW_SHIP_ARMOR_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:3 * (NEW_SHIP_HP - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:3 * NEW_SHIP_ENGIN_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:3 * (NEW_SHIP_AVOID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:3 * NEW_SHIP_COMPUTER_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:3 * NEW_SHIP_SENSOR_SLOT
	CASE 空母
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:3 * NEW_SHIP_MAIN_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:3 * NEW_SHIP_SUB_WEAPON_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:3 * NEW_SHIP_SIELD_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:3 * NEW_SHIP_ARMOR_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:3 * (NEW_SHIP_HP - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:3 * NEW_SHIP_ENGIN_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:3 * (NEW_SHIP_AVOID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:3 * NEW_SHIP_COMPUTER_SLOT
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:3 * NEW_SHIP_SENSOR_SLOT
ENDSELECT
FOR LOCAL, 0, RESOURCE_MAX_COUNT
	NEW_SHIP_RESOURCE:LOCAL = LIMIT(NEW_SHIP_RESOURCE:LOCAL, 10, 9999)
	NEW_SHIP_COST += NEW_SHIP_RESOURCE:LOCAL
NEXT
NEW_SHIP_COST = NEW_SHIP_COST * COST_BY_CATEGORY:NEW_SHIP_CATEGORY / 100

PRINTFORML {NEW_SHIP_COST}
PRINTFORML %"武装合金", TITLE_LENGTH, LEFT%: {NEW_SHIP_RESOURCE:RESOURCE_武装合金}
PRINTFORML %"装甲合金", TITLE_LENGTH, LEFT%: {NEW_SHIP_RESOURCE:RESOURCE_装甲合金}
PRINTFORML %"シールド発生装置", TITLE_LENGTH, LEFT%: {NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置}
PRINTFORML %"合金加工材", TITLE_LENGTH, LEFT%: {NEW_SHIP_RESOURCE:RESOURCE_合金加工材}
PRINTFORML %"武装制御機器", TITLE_LENGTH, LEFT%: {NEW_SHIP_RESOURCE:RESOURCE_武装制御機器}
PRINTFORML %"耐熱合金", TITLE_LENGTH, LEFT%: {NEW_SHIP_RESOURCE:RESOURCE_耐熱合金}
PRINTFORML %"超電導回路", TITLE_LENGTH, LEFT%: {NEW_SHIP_RESOURCE:RESOURCE_超電導回路}
PRINTFORML %"タイラーセンサー", TITLE_LENGTH, LEFT%: {NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー}
PRINTL
PRINTFORML %"価格", TITLE_LENGTH, LEFT%: %TOSTR(NEW_SHIP_COST * PRICE_PER_COST, "$###,###")%


PRINTL
IF ORIGIN_SHIPCATEGORY:ID != 0
	FOR LOCAL, 0, MAX_SHIP
		SIF SHIP_MODEL:LOCAL != ID + SHIP_MODEL_BUFFER
			CONTINUE
		FOR LOCAL:1, 0, MAX_ORIGIN_SHIP
			SIF ORIGIN_SHIPCATEGORY:(LOCAL:1) != 0
				CONTINUE
			PRINTFORML ※この設計を使用した艦船が存在するため、設計を変更できません
			PRINTFORML ※このまま決定を選択した場合、リストの{LOCAL:1 + 1}番目に新しい設計として保存されます
			ID = LOCAL:1
			BREAK
		NEXT
		BREAK
	NEXT
ENDIF
PRINTBUTTON "[決定]", 90
PRINTBUTTON "[リセット]", 91
PRINTBUTTON "[キャンセル]", 92
PRINTL

DRAWLINE

; 入力値チェック
INPUT
入力値 = RESULT
IF GROUPMATCH(入力値, コルベット, フリゲート, 駆逐艦, 巡洋艦, 戦艦, 空母) && IS_COMPLETE_TECH:(DEVELOPMENT_TECH_ID:入力値)
	NEW_SHIP_CATEGORY = 入力値
	NEW_SHIP_TEMPLATE = 1
	;各艦種の1番目のテンプレートは存在してなければならないので、ない場合エラーが起こるように呼ぶ
	VARSET TEMPLATE_STATUS
	CALLFORM GET_ORIGIN_SHIP_TEMPLATE_STATUS_{NEW_SHIP_CATEGORY}_{NEW_SHIP_TEMPLATE}(TEMPLATE_STATUS)
	NEW_SHIP_HP = TEMPLATE_STATUS:SHIP_HP
	TICK_HP = TEMPLATE_STATUS:SHIP_HP / 10
	NEW_SHIP_AVOID = TEMPLATE_STATUS:SHIP_AVOID
	NEW_SHIP_MAIN_WEAPON_SIZE = TEMPLATE_STATUS:SHIP_MAIN_WEAPON_SIZE
	NEW_SHIP_SUB_WEAPON_SIZE = TEMPLATE_STATUS:SHIP_SUB_WEAPON_SIZE
	NEW_SHIP_SIELD_SIZE = TEMPLATE_STATUS:SHIP_SIELD_SIZE
	NEW_SHIP_ARMOR_SIZE = TEMPLATE_STATUS:SHIP_ARMOR_SIZE
	NEW_SHIP_ENGIN_SIZE = TEMPLATE_STATUS:SHIP_ENGIN_SIZE
	NEW_SHIP_MAIN_WEAPON_SLOT = TEMPLATE_STATUS:SHIP_MAIN_WEAPON_SLOT
	NEW_SHIP_SUB_WEAPON_SLOT = TEMPLATE_STATUS:SHIP_SUB_WEAPON_SLOT
	NEW_SHIP_SIELD_SLOT = TEMPLATE_STATUS:SHIP_SIELD_SLOT
	NEW_SHIP_ARMOR_SLOT = TEMPLATE_STATUS:SHIP_ARMOR_SLOT
	NEW_SHIP_ENGIN_SLOT = 1
	NEW_SHIP_COMPUTER_SLOT = 1
	NEW_SHIP_SENSOR_SLOT = 1
	NEW_SHIP_OPTION_SLOT = TEMPLATE_STATUS:SHIP_OPTION_SLOT
	NEW_SHIP_VARIANT = TEMPLATE_STATUS:SHIP_VARIANT
	NEW_SHIP_CREW = TEMPLATE_STATUS:SHIP_CREW
	CALLFORM GET_ORIGIN_SHIP_TEMPLATE_SIZE_{NEW_SHIP_CATEGORY}_{NEW_SHIP_TEMPLATE}
	NEW_SHIP_SIZE = RESULT
	NEW_SHIP_CRITICAL_RISK_ADJUST = 0
ELSEIF RESULT == 20
	NEW_SHIP_HP = UPDATE_NEW_SHIP_HP(-1, NEW_SHIP_HP, NEW_SHIP_CATEGORY, TICK_HP)
ELSEIF RESULT == 21 && (NEW_SHIP_HP < TICK_HP * 20)
	NEW_SHIP_HP = UPDATE_NEW_SHIP_HP(1, NEW_SHIP_HP, NEW_SHIP_CATEGORY, TICK_HP)
ELSEIF RESULT == 22
	NEW_SHIP_AVOID = UPDATE_NEW_SHIP_AVOID(-1, NEW_SHIP_AVOID, NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_AVOID)
ELSEIF RESULT == 23
	NEW_SHIP_AVOID = UPDATE_NEW_SHIP_AVOID(1, NEW_SHIP_AVOID, NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_AVOID)
ELSEIF RESULT == 24
	NEW_SHIP_MAIN_WEAPON_SLOT = LIMIT(NEW_SHIP_MAIN_WEAPON_SLOT - 1, 1, GET_MAX_MAIN_WEAPON_SLOT(NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_MAIN_WEAPON_SLOT))
ELSEIF RESULT == 25
	NEW_SHIP_MAIN_WEAPON_SLOT = LIMIT(NEW_SHIP_MAIN_WEAPON_SLOT + 1, 1, GET_MAX_MAIN_WEAPON_SLOT(NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_MAIN_WEAPON_SLOT))
ELSEIF RESULT == 26
	NEW_SHIP_SUB_WEAPON_SLOT = LIMIT(NEW_SHIP_SUB_WEAPON_SLOT - 1, 1, GET_MAX_SUB_WEAPON_SLOT(NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_SUB_WEAPON_SLOT))
ELSEIF RESULT == 27
	NEW_SHIP_SUB_WEAPON_SLOT = LIMIT(NEW_SHIP_SUB_WEAPON_SLOT + 1, 1, GET_MAX_SUB_WEAPON_SLOT(NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_SUB_WEAPON_SLOT))
ELSEIF RESULT == 28
	NEW_SHIP_SIELD_SLOT = LIMIT(NEW_SHIP_SIELD_SLOT - 1, 1, GET_MAX_SIELD_SLOT(NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_SIELD_SLOT))
ELSEIF RESULT == 29
	NEW_SHIP_SIELD_SLOT = LIMIT(NEW_SHIP_SIELD_SLOT + 1, 1, GET_MAX_SIELD_SLOT(NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_SIELD_SLOT))
ELSEIF RESULT == 30
	NEW_SHIP_ARMOR_SLOT = LIMIT(NEW_SHIP_ARMOR_SLOT - 1, 1, GET_MAX_ARMOR_SLOT(NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_ARMOR_SLOT))
ELSEIF RESULT == 31
	NEW_SHIP_ARMOR_SLOT = LIMIT(NEW_SHIP_ARMOR_SLOT + 1, 1, GET_MAX_ARMOR_SLOT(NEW_SHIP_CATEGORY, TEMPLATE_STATUS:SHIP_ARMOR_SLOT))
ELSEIF RESULT == 32
	CALL UPDATE_NEW_SHIP_NAME
	NEW_SHIP_NAME = %RESULTS%
ELSEIF RESULT == 90
	; 決定
	ORIGIN_SHIP_NAME:ID = %NEW_SHIP_NAME%
	ORIGIN_SHIPCATEGORY:ID = NEW_SHIP_CATEGORY
	ORIGIN_SHIP_TEMPLATE:ID = NEW_SHIP_TEMPLATE
	ORIGIN_SHIP_HP:ID = NEW_SHIP_HP
	ORIGIN_SHIP_AVOID:ID = NEW_SHIP_AVOID
	ORIGIN_SHIP_MAIN_WEAPON_SIZE:ID = NEW_SHIP_MAIN_WEAPON_SIZE
	ORIGIN_SHIP_SUB_WEAPON_SIZE:ID = NEW_SHIP_SUB_WEAPON_SIZE
	ORIGIN_SHIP_SIELD_SIZE:ID = NEW_SHIP_SIELD_SIZE
	ORIGIN_SHIP_ARMOR_SIZE:ID = NEW_SHIP_ARMOR_SIZE
	ORIGIN_SHIP_ENGIN_SIZE:ID = NEW_SHIP_ENGIN_SIZE
	; 算出できるがすぐに参照したいため
	ORIGIN_SHIP_PRICE:ID = NEW_SHIP_COST * PRICE_PER_COST
	ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID = NEW_SHIP_MAIN_WEAPON_SLOT
	ORIGIN_SHIP_SUB_WEAPON_SLOT:ID = NEW_SHIP_SUB_WEAPON_SLOT
	ORIGIN_SHIP_SIELD_SLOT:ID = NEW_SHIP_SIELD_SLOT
	ORIGIN_SHIP_ARMOR_SLOT:ID = NEW_SHIP_ARMOR_SLOT
	ORIGIN_SHIP_OPTION_SLOT:ID = NEW_SHIP_OPTION_SLOT
	ORIGIN_SHIP_CRITICAL_RISK:ID = NEW_SHIP_CRITICAL_RISK_TOTAL
	ORIGIN_SHIP_VARIANT:ID = NEW_SHIP_VARIANT
	ORIGIN_SHIP_SIZE:ID = NEW_SHIP_SIZE
	ORIGIN_SHIP_CREW:ID = NEW_SHIP_CREW
	RETURN
ELSEIF RESULT == 91
	; リセット
	RESTART
ELSEIF RESULT == 92
	;キャンセル
	RETURN
ELSEIF RESULT > 100 && RESULT < 100 + MAX_SHIP_TEMPLATE
	TRYCCALLFORM IS_ABLE_TO_USE_TEMPLATE_{NEW_SHIP_CATEGORY}_{入力値 - 100}
		IF RESULT
			NEW_SHIP_TEMPLATE = 入力値 - 100
			VARSET TEMPLATE_STATUS
			CALLFORM GET_ORIGIN_SHIP_TEMPLATE_STATUS_{NEW_SHIP_CATEGORY}_{NEW_SHIP_TEMPLATE}(TEMPLATE_STATUS)
			NEW_SHIP_HP = TEMPLATE_STATUS:SHIP_HP
			TICK_HP = TEMPLATE_STATUS:SHIP_HP / 10
			NEW_SHIP_AVOID = TEMPLATE_STATUS:SHIP_AVOID
			NEW_SHIP_MAIN_WEAPON_SIZE = TEMPLATE_STATUS:SHIP_MAIN_WEAPON_SIZE
			NEW_SHIP_SUB_WEAPON_SIZE = TEMPLATE_STATUS:SHIP_SUB_WEAPON_SIZE
			NEW_SHIP_SIELD_SIZE = TEMPLATE_STATUS:SHIP_SIELD_SIZE
			NEW_SHIP_ARMOR_SIZE = TEMPLATE_STATUS:SHIP_ARMOR_SIZE
			NEW_SHIP_ENGIN_SIZE = TEMPLATE_STATUS:SHIP_ENGIN_SIZE
			NEW_SHIP_MAIN_WEAPON_SLOT = TEMPLATE_STATUS:SHIP_MAIN_WEAPON_SLOT
			NEW_SHIP_SUB_WEAPON_SLOT = TEMPLATE_STATUS:SHIP_SUB_WEAPON_SLOT
			NEW_SHIP_SIELD_SLOT = TEMPLATE_STATUS:SHIP_SIELD_SLOT
			NEW_SHIP_ARMOR_SLOT = TEMPLATE_STATUS:SHIP_ARMOR_SLOT
			NEW_SHIP_ENGIN_SLOT = 1
			NEW_SHIP_COMPUTER_SLOT = 1
			NEW_SHIP_SENSOR_SLOT = 1
			NEW_SHIP_OPTION_SLOT = TEMPLATE_STATUS:SHIP_OPTION_SLOT
			NEW_SHIP_VARIANT = TEMPLATE_STATUS:SHIP_VARIANT
			NEW_SHIP_CREW = TEMPLATE_STATUS:SHIP_CREW
			CALLFORM GET_ORIGIN_SHIP_TEMPLATE_SIZE_{NEW_SHIP_CATEGORY}_{NEW_SHIP_TEMPLATE}
			NEW_SHIP_SIZE = RESULT
			NEW_SHIP_CRITICAL_RISK_ADJUST = 0
		ENDIF
	CATCH
	ENDCATCH
ENDIF
GOTO INPUT_LOOP

@UPDATE_NEW_SHIP_HP(VEC, NEW_SHIP_HP, NEW_SHIP_CATEGORY, TICK_HP)
#FUNCTION
#DIM VEC
#DIM NEW_SHIP_HP
#DIM NEW_SHIP_CATEGORY
#DIM MAX_HP
#DIM TICK_HP

MAX_HP = 10

IF VEC < 0
	IF NEW_SHIP_HP > TICK_HP * 5
		RETURNF (NEW_SHIP_HP - TICK_HP)
	ELSE
		RETURNF NEW_SHIP_HP
	ENDIF
ENDIF

SELECTCASE NEW_SHIP_CATEGORY
	CASE コルベット
		SIF IS_COMPLETE_TECH:1
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:2
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:3
			MAX_HP += 2
		SIF IS_COMPLETE_TECH:4
			MAX_HP += 2
	CASE フリゲート
		SIF IS_COMPLETE_TECH:9
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:10
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:11
			MAX_HP += 2
		SIF IS_COMPLETE_TECH:12
			MAX_HP += 2
	CASE 駆逐艦
		SIF IS_COMPLETE_TECH:15
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:16
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:17
			MAX_HP += 2
		SIF IS_COMPLETE_TECH:18
			MAX_HP += 2
	CASE 巡洋艦
		SIF IS_COMPLETE_TECH:21
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:22
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:23
			MAX_HP += 2
		SIF IS_COMPLETE_TECH:24
			MAX_HP += 2
	CASE 戦艦
		SIF IS_COMPLETE_TECH:28
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:29
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:30
			MAX_HP += 2
		SIF IS_COMPLETE_TECH:31
			MAX_HP += 2
	CASE 空母
		SIF IS_COMPLETE_TECH:35
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:36
			MAX_HP += 3
		SIF IS_COMPLETE_TECH:37
			MAX_HP += 2
		SIF IS_COMPLETE_TECH:38
			MAX_HP += 2
ENDSELECT

IF (NEW_SHIP_HP < TICK_HP * MAX_HP)
	RETURNF (NEW_SHIP_HP + TICK_HP)
ELSE
	RETURNF NEW_SHIP_HP
ENDIF

@UPDATE_NEW_SHIP_AVOID(VEC, NEW_SHIP_AVOID, NEW_SHIP_CATEGORY, BASE_AVOID)
#FUNCTION
#DIM VEC
#DIM NEW_SHIP_AVOID
#DIM NEW_SHIP_CATEGORY
#DIM BASE_AVOID
#DIM _TICK_AVOID
#DIM _MAX_AVOID

_TICK_AVOID = MAX(BASE_AVOID / 20, 1)
IF VEC < 0
	IF NEW_SHIP_AVOID - _TICK_AVOID > 0
		RETURNF (NEW_SHIP_AVOID - _TICK_AVOID)
	ELSE
		RETURNF 0
	ENDIF
ELSE
	_MAX_AVOID = BASE_AVOID
	SELECTCASE NEW_SHIP_CATEGORY
		CASE コルベット
			SIF IS_COMPLETE_TECH:3
				_MAX_AVOID += 5 * _TICK_AVOID
			SIF IS_COMPLETE_TECH:4
				_MAX_AVOID += 5 + _TICK_AVOID
		CASE フリゲート
			SIF IS_COMPLETE_TECH:11
				_MAX_AVOID += 5 * _TICK_AVOID
			SIF IS_COMPLETE_TECH:12
				_MAX_AVOID += 5 + _TICK_AVOID
		CASE 駆逐艦
			SIF IS_COMPLETE_TECH:17
				_MAX_AVOID += 5 * _TICK_AVOID
			SIF IS_COMPLETE_TECH:18
			_MAX_AVOID += 5 + _TICK_AVOID
		CASE 巡洋艦
			SIF IS_COMPLETE_TECH:23
				_MAX_AVOID += 5 * _TICK_AVOID
			SIF IS_COMPLETE_TECH:24
				_MAX_AVOID += 5 + _TICK_AVOID
		CASE 戦艦
			SIF IS_COMPLETE_TECH:30
				_MAX_AVOID += 5 * _TICK_AVOID
			SIF IS_COMPLETE_TECH:31
				_MAX_AVOID += 5 + _TICK_AVOID
		CASE 空母
			SIF IS_COMPLETE_TECH:37
				_MAX_AVOID += 5 * _TICK_AVOID
			SIF IS_COMPLETE_TECH:38
				_MAX_AVOID += 5 + _TICK_AVOID
	ENDSELECT
	IF NEW_SHIP_AVOID + _TICK_AVOID < _MAX_AVOID
		RETURNF (NEW_SHIP_AVOID + _TICK_AVOID)
	ELSE
		RETURNF _MAX_AVOID
	ENDIF
ENDIF

@GET_MAX_MAIN_WEAPON_SLOT(NEW_SHIP_CATEGORY, DEFAULT_MAIN_WEAPON_SLOT)
#FUNCTION
#DIM NEW_SHIP_CATEGORY
#DIM DEFAULT_MAIN_WEAPON_SLOT
#DIM MAX_MAIN_WEAPON_SLOT

MAX_MAIN_WEAPON_SLOT = DEFAULT_MAIN_WEAPON_SLOT
SELECTCASE NEW_SHIP_CATEGORY
	CASE コルベット
		SIF IS_COMPLETE_TECH:1
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:2
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:3
			MAX_MAIN_WEAPON_SLOT ++
	CASE フリゲート
		SIF IS_COMPLETE_TECH:9
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:10
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:11
			MAX_MAIN_WEAPON_SLOT ++
	CASE 駆逐艦
		SIF IS_COMPLETE_TECH:15
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:16
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:17
			MAX_MAIN_WEAPON_SLOT ++
	CASE 巡洋艦
		SIF IS_COMPLETE_TECH:21
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:22
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:23
			MAX_MAIN_WEAPON_SLOT ++
	CASE 戦艦
		SIF IS_COMPLETE_TECH:28
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:29
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:30
			MAX_MAIN_WEAPON_SLOT ++
	CASE 空母
		SIF IS_COMPLETE_TECH:35
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:36
			MAX_MAIN_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:37
			MAX_MAIN_WEAPON_SLOT ++
ENDSELECT

RETURNF MAX_MAIN_WEAPON_SLOT

@GET_MAX_SUB_WEAPON_SLOT(NEW_SHIP_CATEGORY, DEFAULT_SUB_WEAPON_SLOT)
#FUNCTION
#DIM NEW_SHIP_CATEGORY
#DIM DEFAULT_SUB_WEAPON_SLOT
#DIM MAX_SUB_WEAPON_SLOT

MAX_SUB_WEAPON_SLOT = DEFAULT_SUB_WEAPON_SLOT
SELECTCASE NEW_SHIP_CATEGORY
	CASE コルベット
		SIF IS_COMPLETE_TECH:1
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:2
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:3
			MAX_SUB_WEAPON_SLOT ++
	CASE フリゲート
		SIF IS_COMPLETE_TECH:9
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:10
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:11
			MAX_SUB_WEAPON_SLOT ++
	CASE 駆逐艦
		SIF IS_COMPLETE_TECH:15
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:16
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:17
			MAX_SUB_WEAPON_SLOT ++
	CASE 巡洋艦
		SIF IS_COMPLETE_TECH:21
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:22
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:23
			MAX_SUB_WEAPON_SLOT ++
	CASE 戦艦
		SIF IS_COMPLETE_TECH:28
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:29
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:30
			MAX_SUB_WEAPON_SLOT ++
	CASE 空母
		SIF IS_COMPLETE_TECH:35
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:36
			MAX_SUB_WEAPON_SLOT ++
		SIF IS_COMPLETE_TECH:37
			MAX_SUB_WEAPON_SLOT ++
ENDSELECT

RETURNF MAX_SUB_WEAPON_SLOT

@GET_MAX_SIELD_SLOT(NEW_SHIP_CATEGORY, DEFAULT_SIELD_SLOT)
#FUNCTION
#DIM NEW_SHIP_CATEGORY
#DIM DEFAULT_SIELD_SLOT
#DIM MAX_SIELD_SLOT

MAX_SIELD_SLOT = DEFAULT_SIELD_SLOT
SELECTCASE NEW_SHIP_CATEGORY
	CASE コルベット
		SIF IS_COMPLETE_TECH:1
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:2
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:3
			MAX_SIELD_SLOT ++
	CASE フリゲート
		SIF IS_COMPLETE_TECH:9
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:10
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:11
			MAX_SIELD_SLOT ++
	CASE 駆逐艦
		SIF IS_COMPLETE_TECH:15
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:16
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:17
			MAX_SIELD_SLOT ++
	CASE 巡洋艦
		SIF IS_COMPLETE_TECH:21
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:22
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:23
			MAX_SIELD_SLOT ++
	CASE 戦艦
		SIF IS_COMPLETE_TECH:28
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:29
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:30
			MAX_SIELD_SLOT ++
	CASE 空母
		SIF IS_COMPLETE_TECH:35
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:36
			MAX_SIELD_SLOT ++
		SIF IS_COMPLETE_TECH:37
			MAX_SIELD_SLOT ++
ENDSELECT

RETURNF MAX_SIELD_SLOT

@GET_MAX_ARMOR_SLOT(NEW_SHIP_CATEGORY, DEFAULT_ARMOR_SLOT)
#FUNCTION
#DIM NEW_SHIP_CATEGORY
#DIM DEFAULT_ARMOR_SLOT
#DIM MAX_ARMOR_SLOT

MAX_ARMOR_SLOT = DEFAULT_ARMOR_SLOT
SELECTCASE NEW_SHIP_CATEGORY
	CASE コルベット
		SIF IS_COMPLETE_TECH:1
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:2
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:3
			MAX_ARMOR_SLOT ++
	CASE フリゲート
		SIF IS_COMPLETE_TECH:9
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:10
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:11
			MAX_ARMOR_SLOT ++
	CASE 駆逐艦
		SIF IS_COMPLETE_TECH:15
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:16
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:17
			MAX_ARMOR_SLOT ++
	CASE 巡洋艦
		SIF IS_COMPLETE_TECH:21
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:22
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:23
			MAX_ARMOR_SLOT ++
	CASE 戦艦
		SIF IS_COMPLETE_TECH:28
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:29
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:30
			MAX_ARMOR_SLOT ++
	CASE 空母
		SIF IS_COMPLETE_TECH:35
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:36
			MAX_ARMOR_SLOT ++
		SIF IS_COMPLETE_TECH:37
			MAX_ARMOR_SLOT ++
ENDSELECT

RETURNF MAX_ARMOR_SLOT

@UPDATE_NEW_SHIP_NAME
$INPUT_LOOP
PRINTL 新しい艦の名前を入力してください
INPUTS

PRINTFORML %RESULTS%でよろしいですか？
CALL ASK_YN
IF RESULT == 0
	RETURN
ELSE
	GOTO INPUT_LOOP
ENDIF

@ORIGIN_SHIP_DESCRIPTION(ID)
#DIM ID

PRINTFORML %ORIGIN_SHIP_NAME:ID%
SETCOLOR 0X666666
DRAWLINE
RESETCOLOR
PRINTFORML %"艦種", 20, LEFT% %SHIP_CATEGORY_NAME:(ORIGIN_SHIPCATEGORY:ID), 12, RIGHT%
PRINTFORML %"特殊分類", 20, LEFT% %SHIP_VARIANT_NAME:(ORIGIN_SHIP_VARIANT:ID), 12, RIGHT%
PRINTFORML %"HP", 20, LEFT% {ORIGIN_SHIP_HP:ID, 12, RIGHT}
PRINTFORML %"回避", 20, LEFT% {ORIGIN_SHIP_AVOID:ID, 12, RIGHT}
PRINTFORML %"主砲サイズ", 20, LEFT% {ORIGIN_SHIP_MAIN_WEAPON_SIZE:ID, 12, RIGHT}
PRINTFORML %"副砲サイズ", 20, LEFT% {ORIGIN_SHIP_SUB_WEAPON_SIZE:ID, 12, RIGHT}
PRINTFORML %"シールドサイズ", 20, LEFT% {ORIGIN_SHIP_SIELD_SIZE:ID, 12, RIGHT}
PRINTFORML %"装甲サイズ", 20, LEFT% {ORIGIN_SHIP_ARMOR_SIZE:ID, 12, RIGHT}
PRINTFORML %"エンジンサイズ", 20, LEFT% {ORIGIN_SHIP_ENGIN_SIZE:ID, 12, RIGHT}
PRINTFORML %"主砲スロット", 20, LEFT% {ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID, 12, RIGHT}
PRINTFORML %"副砲スロット", 20, LEFT% {ORIGIN_SHIP_SUB_WEAPON_SLOT:ID, 12, RIGHT}
PRINTFORML %"シールドスロット", 20, LEFT% {ORIGIN_SHIP_SIELD_SLOT:ID, 12, RIGHT}
PRINTFORML %"装甲スロット", 20, LEFT% {ORIGIN_SHIP_ARMOR_SLOT:ID, 12, RIGHT}
PRINTFORML %"オプションスロット", 20, LEFT% {ORIGIN_SHIP_OPTION_SLOT:ID, 12, RIGHT}
PRINTFORML %"被クリティカル率", 20, LEFT% %(TOSTR(ORIGIN_SHIP_CRITICAL_RISK:ID, "##0,.0%")), 12, RIGHT%
PRINTFORML %"積載量", 20, LEFT% {0, 12, RIGHT}
PRINTFORML %"塔乗可能人数", 20, LEFT% {ORIGIN_SHIP_CREW:ID, 12, RIGHT}
PRINTFORML %"値段", 20, LEFT% %TOSTR(ORIGIN_SHIP_PRICE:ID, "$###,###,###,###"), 12, RIGHT%

@GET_ORIGIN_SHIP_RESOURCE(ID, NEW_SHIP_RESOURCE)
#DIM ID
#DIM REF NEW_SHIP_RESOURCE
#DIM TEMPLATE_STATUS, STATUS_LENGTH
#DIM TICK_HP

VARSET TEMPLATE_STATUS
TICK_HP = 0
IF ORIGIN_SHIPCATEGORY:ID != 0
	CALLFORM GET_ORIGIN_SHIP_TEMPLATE_STATUS_{ORIGIN_SHIPCATEGORY:ID}_{ORIGIN_SHIP_TEMPLATE:ID}(TEMPLATE_STATUS)
	TICK_HP = TEMPLATE_STATUS:SHIP_HP / 10
ENDIF

; コスト計算
VARSET NEW_SHIP_RESOURCE, 0
SELECTCASE (ORIGIN_SHIPCATEGORY:ID)
	CASE コルベット
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:0 * ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:0 * ORIGIN_SHIP_SUB_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:0 * ORIGIN_SHIP_SIELD_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:0 * ORIGIN_SHIP_ARMOR_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:0 * (ORIGIN_SHIP_HP:ID - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金)
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:0 * 1
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:0 * (ORIGIN_SHIP_AVOID:ID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:0 * 1
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:0 * 1
	CASE フリゲート
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:0 * ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:1 * ORIGIN_SHIP_SUB_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:1 * ORIGIN_SHIP_SIELD_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:1 * ORIGIN_SHIP_ARMOR_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:1 * (ORIGIN_SHIP_HP:ID - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:0 * 1
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:0 * (ORIGIN_SHIP_AVOID:ID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:0 * 1
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:0 * 1
	CASE 駆逐艦
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:1 * ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:1 * ORIGIN_SHIP_SUB_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:1 * ORIGIN_SHIP_SIELD_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:1 * ORIGIN_SHIP_ARMOR_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:1 * (ORIGIN_SHIP_HP:ID - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:1 * 1
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:1 * (ORIGIN_SHIP_AVOID:ID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:1 * 1
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:1 * 1
	CASE 巡洋艦
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:2 * ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:2 * ORIGIN_SHIP_SUB_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:2 * ORIGIN_SHIP_SIELD_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:2 * ORIGIN_SHIP_ARMOR_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:2 * (ORIGIN_SHIP_HP:ID - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:2 * 1
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:2 * (ORIGIN_SHIP_AVOID:ID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:2 * 1
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:2 * 1
	CASE 戦艦
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:3 * ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:3 * ORIGIN_SHIP_SUB_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:3 * ORIGIN_SHIP_SIELD_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:3 * ORIGIN_SHIP_ARMOR_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:3 * (ORIGIN_SHIP_HP:ID - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:3 * 1
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:3 * (ORIGIN_SHIP_AVOID:ID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:3 * 1
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:3 * 1
	CASE 空母
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += MAIN_WEAPON_COST:3 * ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_武装合金 += SUB_WEAPON_COST:3 * ORIGIN_SHIP_SUB_WEAPON_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_シールド発生装置 += SIELD_COST:3 * ORIGIN_SHIP_SIELD_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:3 * ORIGIN_SHIP_ARMOR_SLOT:ID
		NEW_SHIP_RESOURCE:RESOURCE_装甲合金 += ARMOR_COST:3 * (ORIGIN_SHIP_HP:ID - (TICK_HP * 10)) / TICK_HP / 10
		NEW_SHIP_RESOURCE:RESOURCE_合金加工材 += (NEW_SHIP_RESOURCE:RESOURCE_武装合金 + NEW_SHIP_RESOURCE:RESOURCE_装甲合金) / 2
		NEW_SHIP_RESOURCE:RESOURCE_武装制御機器 += NEW_SHIP_RESOURCE:RESOURCE_武装合金 / 2
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:3 * 1
		NEW_SHIP_RESOURCE:RESOURCE_耐熱合金 += ENGIN_COST:3 * (ORIGIN_SHIP_AVOID:ID - TEMPLATE_STATUS:SHIP_AVOID) / 10
		NEW_SHIP_RESOURCE:RESOURCE_超電導回路 += COMPUTER_COST:3 * 1
		NEW_SHIP_RESOURCE:RESOURCE_タイラーセンサー += SENSOR_COST:3 * 1
ENDSELECT

FOR LOCAL, 0, RESOURCE_MAX_COUNT
	NEW_SHIP_RESOURCE:LOCAL = LIMIT(NEW_SHIP_RESOURCE:LOCAL, 10, 9999)
NEXT

;----------------------------
; オリジナル艦船情報表示
;----------------------------
@SHOW_ORIGIN_SHIP_INFO(SHIP_ID)
#DIM SHIP_ID
#DIM ID
#DIM SLOT_ID
#DIM STATUS, STATUS_LENGTH

ID = SHIP_MODEL:SHIP_ID - SHIP_MODEL_BUFFER

$INPUT_LOOP

PRINTFORML 名前:     %ORIGIN_SHIP_NAME:ID%
PRINTFORML 艦種:     %SHIP_CATEGORY_NAME:(ORIGIN_SHIPCATEGORY:ID)%
PRINTFORML 特殊分類: %SHIP_VARIANT_NAME:(ORIGIN_SHIP_VARIANT:ID)%
RESULTS = ---
FOR SLOT_ID, 0, ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID
	TRYCALLFORM GET_MAIN_WEAPON_NAME_{SHIP_EQUIP:主砲:SLOT_ID:SHIP_ID}
	IF SLOT_ID == 0
		PRINTFORM %"主砲:", 10, LEFT%
	ELSE
		PRINTFORM %"", 10, LEFT%
	ENDIF
	PRINTBUTTON @"[%RESULTS%]", SHIP_ID * 100 + 10 + SLOT_ID
	PRINTL
NEXT
FOR SLOT_ID, 0, ORIGIN_SHIP_SUB_WEAPON_SLOT:ID
	TRYCALLFORM GET_SUB_WEAPON_NAME_{SHIP_EQUIP:副砲:SLOT_ID:SHIP_ID}
	IF SLOT_ID == 0
		PRINTFORM %"副砲:", 10, LEFT%
	ELSE
		PRINTFORM %"", 10, LEFT%
	ENDIF
	PRINTBUTTON @"[%RESULTS%]", SHIP_ID * 100 + 20 + SLOT_ID
	PRINTL
NEXT
FOR SLOT_ID, 0, ORIGIN_SHIP_SIELD_SLOT:ID
	TRYCALLFORM GET_SIELD_NAME_{SHIP_EQUIP:シールド:SLOT_ID:SHIP_ID}
	IF SLOT_ID == 0
		PRINTFORM %"シールド:", 10, LEFT%
	ELSE
		PRINTFORM %"", 10, LEFT%
	ENDIF
	PRINTBUTTON @"[%RESULTS%]", SHIP_ID * 100 + 30 + SLOT_ID
	PRINTL
NEXT
FOR SLOT_ID, 0, ORIGIN_SHIP_ARMOR_SLOT:ID
	TRYCALLFORM GET_ARMOR_NAME_{SHIP_EQUIP:装甲:SLOT_ID:SHIP_ID}
	IF SLOT_ID == 0
		PRINTFORM %"装甲:", 10, LEFT%
	ELSE
		PRINTFORM %"", 10, LEFT%
	ENDIF
	PRINTBUTTON @"[%RESULTS%]", SHIP_ID * 100 + 40 + SLOT_ID
	PRINTL
NEXT

TRYCALLFORM GET_ENGIN_NAME_{SHIP_EQUIP:エンジン:0:SHIP_ID}
PRINTFORM %"エンジン:", 10, LEFT%
PRINTBUTTON @"[%RESULTS%]", SHIP_ID * 100 + 50
PRINTL

TRYCALLFORM GET_COMPUTER_NAME_{SHIP_EQUIP:AI:0:SHIP_ID}
PRINTFORM %"制御AI:", 10, LEFT%
PRINTBUTTON @"[%RESULTS%]", SHIP_ID * 100 + 60
PRINTL

TRYCALLFORM GET_SENSOR_NAME_{SHIP_EQUIP:センサー:0:SHIP_ID}
PRINTFORM %"センサー:", 10, LEFT%
PRINTBUTTON @"[%RESULTS%]", SHIP_ID * 100 + 70
PRINTL

FOR SLOT_ID, 0, ORIGIN_SHIP_OPTION_SLOT:ID
	TRYCALLFORM GET_OPTION_NAME_{SHIP_EQUIP:オプション:SLOT_ID:SHIP_ID}
	IF SLOT_ID == 0
		PRINTFORM %"オプション:", 10, LEFT%
	ELSE
		PRINTFORM %"", 10, LEFT%
	ENDIF
	PRINTBUTTON @"[%RESULTS%]", SHIP_ID * 100 + 80 + SLOT_ID
	PRINTL
NEXT

CALL GET_SHIP_HP(SHIP_ID)
PRINTFORML 耐久     {RESULT}/{RESULT + (SHIP_DAMAGE:SHIP_ID)}
CALL GET_SHIP_TOTAL_SIELD(SHIP_ID)
LOCAL = RESULT
CALL GET_SHIP_SIELD(SHIP_ID)
PRINTFORML シールド {RESULT}/{LOCAL}
PRINTBUTTON "[完了]", 100
PRINTL 
INPUT
DRAWLINE
SELECTCASE RESULT
	CASE SHIP_ID * 100 + 10 TO SHIP_ID * 100 + 19
		SLOT_ID = RESULT - (SHIP_ID * 100 + 10)
		;TRYCALLFORM GET_MAIN_WEAPON_DESCRIPTION_{SHIP_EQUIP:主砲:SLOT_ID:SHIP_ID}
		CALL EQUIP_STATUS_DESCRIPTION(主砲, SHIP_EQUIP:主砲:SLOT_ID:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + 20 TO SHIP_ID * 100 + 29
		SLOT_ID = RESULT - (SHIP_ID * 100 + 20)
		TRYCALLFORM GET_SUB_WEAPON_DESCRIPTION_{SHIP_EQUIP:副砲:SLOT_ID:SHIP_ID}
		CALL EQUIP_STATUS_DESCRIPTION(副砲, SHIP_EQUIP:副砲:SLOT_ID:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + 30 TO SHIP_ID * 100 + 39
		SLOT_ID = RESULT - (SHIP_ID * 100 + 30)
		TRYCALLFORM GET_SIELD_DESCRIPTION_{SHIP_EQUIP:シールド:SLOT_ID:SHIP_ID}
		CALL EQUIP_STATUS_DESCRIPTION(シールド, SHIP_EQUIP:シールド:SLOT_ID:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + 40 TO SHIP_ID * 100 + 49
		SLOT_ID = RESULT - (SHIP_ID * 100 + 40)
		TRYCALLFORM GET_ARMOR_DESCRIPTION_{SHIP_EQUIP:装甲:SLOT_ID:SHIP_ID}
		CALL EQUIP_STATUS_DESCRIPTION(装甲, SHIP_EQUIP:装甲:SLOT_ID:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + 50
		TRYCALLFORM GET_ENGIN_DESCRIPTION_{SHIP_EQUIP:エンジン:0:SHIP_ID}
		CALL EQUIP_STATUS_DESCRIPTION(エンジン, SHIP_EQUIP:エンジン:0:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + 60
		TRYCALLFORM GET_COMPUTER_DESCRIPTION_{SHIP_EQUIP:AI:0:SHIP_ID}
		CALL EQUIP_STATUS_DESCRIPTION(AI, SHIP_EQUIP:AI:0:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + 70
		TRYCALLFORM GET_SENSOR_DESCRIPTION_{SHIP_EQUIP:センサー:0:SHIP_ID}
		CALL EQUIP_STATUS_DESCRIPTION(センサー, SHIP_EQUIP:センサー:0:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE SHIP_ID * 100 + 80
		TRYCALLFORM GET_OPTION_DESCRIPTION_{SHIP_EQUIP:オプション:0:SHIP_ID}
		CALL EQUIP_STATUS_DESCRIPTION(オプション, SHIP_EQUIP:オプション:0:SHIP_ID)
		DRAWLINE
		GOTO INPUT_LOOP
	CASE 100
		RETURN
	CASEELSE
		GOTO INPUT_LOOP
ENDSELECT

; すごい力技！
@GET_SHIP_STATUS_200(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 0)
@GET_SHIP_STATUS_201(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 1)
@GET_SHIP_STATUS_202(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 2)
@GET_SHIP_STATUS_203(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 3)
@GET_SHIP_STATUS_204(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 4)
@GET_SHIP_STATUS_205(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 5)
@GET_SHIP_STATUS_206(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 6)
@GET_SHIP_STATUS_207(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 7)
@GET_SHIP_STATUS_208(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 8)
@GET_SHIP_STATUS_209(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 9)
@GET_SHIP_STATUS_210(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 10)
@GET_SHIP_STATUS_211(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 11)
@GET_SHIP_STATUS_212(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 12)
@GET_SHIP_STATUS_213(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 13)
@GET_SHIP_STATUS_214(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 14)
@GET_SHIP_STATUS_215(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 15)
@GET_SHIP_STATUS_216(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 16)
@GET_SHIP_STATUS_217(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 17)
@GET_SHIP_STATUS_218(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 18)
@GET_SHIP_STATUS_219(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 19)
@GET_SHIP_STATUS_220(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 20)
@GET_SHIP_STATUS_221(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 21)
@GET_SHIP_STATUS_222(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 22)
@GET_SHIP_STATUS_223(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 23)
@GET_SHIP_STATUS_224(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 24)
@GET_SHIP_STATUS_225(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 25)
@GET_SHIP_STATUS_226(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 26)
@GET_SHIP_STATUS_227(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 27)
@GET_SHIP_STATUS_228(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 28)
@GET_SHIP_STATUS_229(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 29)
@GET_SHIP_STATUS_230(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 30)
@GET_SHIP_STATUS_231(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 31)
@GET_SHIP_STATUS_232(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 32)
@GET_SHIP_STATUS_233(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 33)
@GET_SHIP_STATUS_234(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 34)
@GET_SHIP_STATUS_235(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 35)
@GET_SHIP_STATUS_236(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 36)
@GET_SHIP_STATUS_237(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 37)
@GET_SHIP_STATUS_238(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 38)
@GET_SHIP_STATUS_239(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 39)
@GET_SHIP_STATUS_240(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 40)
@GET_SHIP_STATUS_241(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 41)
@GET_SHIP_STATUS_242(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 42)
@GET_SHIP_STATUS_243(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 43)
@GET_SHIP_STATUS_244(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 44)
@GET_SHIP_STATUS_245(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 45)
@GET_SHIP_STATUS_246(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 46)
@GET_SHIP_STATUS_247(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 47)
@GET_SHIP_STATUS_248(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 48)
@GET_SHIP_STATUS_249(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 49)
@GET_SHIP_STATUS_250(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 50)
@GET_SHIP_STATUS_251(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 51)
@GET_SHIP_STATUS_252(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 52)
@GET_SHIP_STATUS_253(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 53)
@GET_SHIP_STATUS_254(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 54)
@GET_SHIP_STATUS_255(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 55)
@GET_SHIP_STATUS_256(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 56)
@GET_SHIP_STATUS_257(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 57)
@GET_SHIP_STATUS_258(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 58)
@GET_SHIP_STATUS_259(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 59)
@GET_SHIP_STATUS_260(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 60)
@GET_SHIP_STATUS_261(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 61)
@GET_SHIP_STATUS_262(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 62)
@GET_SHIP_STATUS_263(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 63)
@GET_SHIP_STATUS_264(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 64)
@GET_SHIP_STATUS_265(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 65)
@GET_SHIP_STATUS_266(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 66)
@GET_SHIP_STATUS_267(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 67)
@GET_SHIP_STATUS_268(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 68)
@GET_SHIP_STATUS_269(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 69)
@GET_SHIP_STATUS_270(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 70)
@GET_SHIP_STATUS_271(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 71)
@GET_SHIP_STATUS_272(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 72)
@GET_SHIP_STATUS_273(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 73)
@GET_SHIP_STATUS_274(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 74)
@GET_SHIP_STATUS_275(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 75)
@GET_SHIP_STATUS_276(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 76)
@GET_SHIP_STATUS_277(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 77)
@GET_SHIP_STATUS_278(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 78)
@GET_SHIP_STATUS_279(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 79)
@GET_SHIP_STATUS_280(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 80)
@GET_SHIP_STATUS_281(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 81)
@GET_SHIP_STATUS_282(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 82)
@GET_SHIP_STATUS_283(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 83)
@GET_SHIP_STATUS_284(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 84)
@GET_SHIP_STATUS_285(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 85)
@GET_SHIP_STATUS_286(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 86)
@GET_SHIP_STATUS_287(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 87)
@GET_SHIP_STATUS_288(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 88)
@GET_SHIP_STATUS_289(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 89)
@GET_SHIP_STATUS_290(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 90)
@GET_SHIP_STATUS_291(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 91)
@GET_SHIP_STATUS_292(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 92)
@GET_SHIP_STATUS_293(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 93)
@GET_SHIP_STATUS_294(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 94)
@GET_SHIP_STATUS_295(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 95)
@GET_SHIP_STATUS_296(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 96)
@GET_SHIP_STATUS_297(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 97)
@GET_SHIP_STATUS_298(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 98)
@GET_SHIP_STATUS_299(STATUS)
#DIM REF STATUS
CALL GET_SHIP_STATUS_CORE(STATUS, 99)



@GET_SHIP_STATUS_CORE(STATUS, ID)
#DIM REF STATUS
#DIM ID

STATUS:CATEGORY = ORIGIN_SHIPCATEGORY:ID
STATUS:SHIP_HP = ORIGIN_SHIP_HP:ID
STATUS:SHIP_AVOID = ORIGIN_SHIP_AVOID:ID
STATUS:SHIP_MAIN_WEAPON_SIZE = ORIGIN_SHIP_MAIN_WEAPON_SIZE:ID
STATUS:SHIP_SUB_WEAPON_SIZE = ORIGIN_SHIP_SUB_WEAPON_SIZE:ID
STATUS:SHIP_SIELD_SIZE = ORIGIN_SHIP_SIELD_SIZE:ID
STATUS:SHIP_ARMOR_SIZE = ORIGIN_SHIP_ARMOR_SIZE:ID
STATUS:SHIP_ENGIN_SIZE = ORIGIN_SHIP_ENGIN_SIZE:ID
STATUS:SHIP_CREW = ORIGIN_SHIP_CREW:ID
STATUS:SHIP_PRICE = ORIGIN_SHIP_PRICE:ID

STATUS:SHIP_MAIN_WEAPON_SLOT = ORIGIN_SHIP_MAIN_WEAPON_SLOT:ID
STATUS:SHIP_SUB_WEAPON_SLOT = ORIGIN_SHIP_SUB_WEAPON_SLOT:ID
STATUS:SHIP_SIELD_SLOT = ORIGIN_SHIP_SIELD_SLOT:ID
STATUS:SHIP_ARMOR_SLOT = ORIGIN_SHIP_ARMOR_SLOT:ID
STATUS:SHIP_OPTION_SLOT = 1

STATUS:SHIP_CRITICAL_RISK = ORIGIN_SHIP_CRITICAL_RISK:ID
STATUS:SHIP_VARIANT = ORIGIN_SHIP_VARIANT:ID

@INIT_ORIGIN_SHIP(SHIP_ID)
#DIM SHIP_ID
#DIM STATUS, STATUS_LENGTH

TRYCALLFORM GET_SHIP_STATUS_{SHIP_MODEL:SHIP_ID}(STATUS)

; 主砲
FOR LOCAL, 0, STATUS:SHIP_MAIN_WEAPON_SLOT
	SELECTCASE STATUS:CATEGORY
		CASE コルベット, フリゲート, 駆逐艦, 巡洋艦, 戦艦
			SHIP_EQUIP:主砲:LOCAL:SHIP_ID = 1
		CASE 空母
			SHIP_EQUIP:主砲:LOCAL:SHIP_ID = 101
	ENDSELECT
NEXT

; 副砲
FOR LOCAL, 0, STATUS:SHIP_SUB_WEAPON_SLOT
	SELECTCASE STATUS:CATEGORY
		CASE コルベット, フリゲート, 駆逐艦, 巡洋艦, 戦艦, 空母
			SHIP_EQUIP:副砲:LOCAL:SHIP_ID = 1
	ENDSELECT
NEXT

; シールド
FOR LOCAL, 0, STATUS:SHIP_SIELD_SLOT
	SELECTCASE STATUS:CATEGORY
		CASE コルベット
			SHIP_EQUIP:シールド:LOCAL:SHIP_ID = 1
		CASE フリゲート, 駆逐艦
			SHIP_EQUIP:シールド:LOCAL:SHIP_ID = 2
		CASE 巡洋艦
			SHIP_EQUIP:シールド:LOCAL:SHIP_ID = 3
		CASE 戦艦, 空母
			SHIP_EQUIP:シールド:LOCAL:SHIP_ID = 4
	ENDSELECT
NEXT

; 装甲
FOR LOCAL, 0, STATUS:SHIP_ARMOR_SLOT
	SELECTCASE STATUS:CATEGORY
		CASE コルベット
			SHIP_EQUIP:装甲:LOCAL:SHIP_ID = 1
		CASE フリゲート, 駆逐艦
			SHIP_EQUIP:装甲:LOCAL:SHIP_ID = 2
		CASE 巡洋艦
			SHIP_EQUIP:装甲:LOCAL:SHIP_ID = 3
		CASE 戦艦, 空母
			SHIP_EQUIP:装甲:LOCAL:SHIP_ID = 4
	ENDSELECT
NEXT

; エンジン
SELECTCASE STATUS:CATEGORY
	CASE コルベット
		SHIP_EQUIP:エンジン:0:SHIP_ID = 1
	CASE フリゲート, 駆逐艦
		SHIP_EQUIP:エンジン:0:SHIP_ID = 2
	CASE 巡洋艦
		SHIP_EQUIP:エンジン:0:SHIP_ID = 3
	CASE 戦艦, 空母
		SHIP_EQUIP:エンジン:0:SHIP_ID = 4
ENDSELECT

; AI
SELECTCASE STATUS:CATEGORY
	CASE コルベット, フリゲート, 駆逐艦, 巡洋艦, 戦艦, 空母
		SHIP_EQUIP:AI:0:SHIP_ID = 1
ENDSELECT

; センサー
SELECTCASE STATUS:CATEGORY
	CASE コルベット, フリゲート, 駆逐艦, 巡洋艦, 戦艦, 空母
		SHIP_EQUIP:センサー:0:SHIP_ID = 1
ENDSELECT

; オプション
FOR LOCAL, 0, STATUS:SHIP_OPTION_SLOT
	SELECTCASE STATUS:CATEGORY
		CASE コルベット, フリゲート, 駆逐艦, 巡洋艦, 戦艦, 空母
			SHIP_EQUIP:オプション:LOCAL:SHIP_ID = 0
	ENDSELECT
NEXT
