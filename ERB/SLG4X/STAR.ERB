;--------------------------
; 星の民間需要と生産の管理
;--------------------------
; 生産
@PRICATE_PRODUCTION(STAR_ID)
#DIM STAR_ID
#DIM CONST DAILY_PRODUCTION = 770
#DIM CONST SPECIAL_ITEM_DAILY_PRODUCTION = 14
#DIM CONST 資源生産量 = 425
#DIM _CITY_ID
#DIM _SLOT_ID
#DIM _ITEM_ID
#DIM DYNAMIC _産出物一覧, SC_効果種類
#DIM DYNAMIC _総算出物一覧, SC_効果種類
#DIM DYNAMIC _算出アイテム一覧, ITEM_LENGTH
#DIM _必要資源数
#DIM _資源数
#DIM _PORT_ID
#DIM _STAR_ID
#DIM _店在庫
#DIM _購入数
#DIM _単価
{
    #DIM CONST 特産品 = 宇宙たばこ, オーネスワイン, トルス酒, サンロットの香木, フォルス酒, ゴルンミスト発生器,
    ロック布, ナナーシャ鳥, エインズの実, ナイ・ゲーム機, 日本酒, MR観光セット, ペルマティーセット
}

; 特産品の生産
IF GET_ITEM_NUM_IN_STAR_PORT(STAR_ID, 特産品:STAR_ID) < STOCK_TARGET * 3
    CALL ADD_RESOURCE_TO_STAR_PORT_CONTAINER(STAR_ID, 特産品:STAR_ID, DAILY_PRODUCTION)
ENDIF

SELECTCASE STAR_OWNER:STAR_ID
    CASE 2
        CALL AUTO_PROCESSING(STAR_ID, STAR_OWNER:STAR_ID, パワードスーツ, SPECIAL_ITEM_DAILY_PRODUCTION)
    CASE 3
        CALL AUTO_PROCESSING(STAR_ID, STAR_OWNER:STAR_ID, レース機, SPECIAL_ITEM_DAILY_PRODUCTION)
    CASE 4
        CALL AUTO_PROCESSING(STAR_ID, STAR_OWNER:STAR_ID, 思考戦車, SPECIAL_ITEM_DAILY_PRODUCTION)
    CASE 5
        CALL AUTO_PROCESSING(STAR_ID, STAR_OWNER:STAR_ID, 異星生物育成キット, SPECIAL_ITEM_DAILY_PRODUCTION)
    CASE 6
        CALL AUTO_PROCESSING(STAR_ID, STAR_OWNER:STAR_ID, セクサロイド, SPECIAL_ITEM_DAILY_PRODUCTION)
    CASE 11
        CALL AUTO_PROCESSING(STAR_ID, STAR_OWNER:STAR_ID, プラモデル, SPECIAL_ITEM_DAILY_PRODUCTION)
    CASE 12
        CALL AUTO_PROCESSING(STAR_ID, STAR_OWNER:STAR_ID, ビームセイバー, SPECIAL_ITEM_DAILY_PRODUCTION)
ENDSELECT

IF STAR_OWNER:STAR_ID == 国家ID_プレイヤー
    FOR _CITY_ID, 0, SC_最大都市数
        CALL GET_TOTAL_CITY_OUTPUT(STAR_ID, _CITY_ID, SC_税収)
        _総算出物一覧:SC_税収 += RESULT
        CALL GET_TOTAL_CITY_OUTPUT(STAR_ID, _CITY_ID, SC_鉱物)
        _総算出物一覧:SC_鉱物 += RESULT
        CALL GET_TOTAL_CITY_OUTPUT(STAR_ID, _CITY_ID, SC_資源)
        _総算出物一覧:SC_資源 += RESULT
        CALL GET_TOTAL_CITY_OUTPUT(STAR_ID, _CITY_ID, SC_戦車)
        _総算出物一覧:SC_戦車 += RESULT
        CALL GET_TOTAL_CITY_OUTPUT(STAR_ID, _CITY_ID, SC_航空機)
        _総算出物一覧:SC_航空機 += RESULT
        CALL GET_TOTAL_CITY_OUTPUT(STAR_ID, _CITY_ID, SC_軍事)
        _総算出物一覧:SC_軍事 += RESULT
        CALL GET_TOTAL_CITY_OUTPUT(STAR_ID, _CITY_ID, SC_充足)
        _総算出物一覧:SC_充足 += RESULT
        CALL GET_TOTAL_CITY_OUTPUT(STAR_ID, _CITY_ID, SC_来客)
        _総算出物一覧:SC_来客 += RESULT
    NEXT
    ; 資源追加
    FOR _ITEM_ID , 0, ITEM_LENGTH
        TRYCALLFORM GET_ITEM_CATEGORY_{_ITEM_ID}
        IF RESULTS:0 == "資源" && RESULTS:1 == "原石"
            CALL ADD_RESOURCE(STAR_POSITION_ID:STAR_ID, STAR_OWNER:STAR_ID, _ITEM_ID, _総算出物一覧:SC_鉱物 * ONE_WEEK)
        ELSEIF RESULTS:0 == "資源"
            CALL ADD_RESOURCE(STAR_POSITION_ID:STAR_ID, STAR_OWNER:STAR_ID, _ITEM_ID, _総算出物一覧:SC_資源 * ONE_WEEK)
        ENDIF
        _必要資源数 = GET_RESOURCE_NUM(STAR_POSITION_ID:STAR_ID, STAR_OWNER:STAR_ID, _ITEM_ID)
        IF RESULTS:0 == "資源" && _必要資源数 < STOCK_TARGET
            _必要資源数 = STOCK_TARGET - _必要資源数
            SIF _必要資源数 > 0
                CALL BUY_RESOURCE_FROM_STAR(STAR_ID, _ITEM_ID, _必要資源数)
        ENDIF
    NEXT
    ; 税収
    IF MONEY:国家ID_プレイヤー > 0
        MONEY += _総算出物一覧:SC_税収 * ONE_WEEK / 100
        MONEY:国家ID_プレイヤー += _総算出物一覧:SC_税収 * ONE_WEEK * 99 / 100 
    ELSE
        MONEY:国家ID_プレイヤー += _総算出物一覧:SC_税収 * ONE_WEEK
    ENDIF
    ; 外国からの人口増加
    GB_非戦闘員:STAR_ID += _総算出物一覧:SC_来客 / 100
    ; 人口の自然増減
    FOR _CITY_ID, 0, SC_最大都市数
        CALL GET_FOOD_PRODUCTION(STAR_ID, _CITY_ID)
        ; 食糧
        LOCAL = RESULT / SC_食糧消費量:(SC_食糧消費設定:STAR_ID:_CITY_ID) * 100
        ; 消費者数
        CALL GET_CITY_RESIDENT(STAR_ID, _CITY_ID)
        LOCAL = LOCAL - RESULT
        ; 食糧が余っている場合
        IF LOCAL > 0
            GB_非戦闘員 += RAND:(RESULT / 2000 + 1)
            SC_食糧備蓄:STAR_ID:_CITY_ID = LIMIT(SC_食糧備蓄:STAR_ID:_CITY_ID + LOCAL, 0, SC_食糧備蓄量:(SC_食糧備蓄設定:STAR_ID:_CITY_ID))
        ; 食糧が足りない場合備蓄から消費
        ELSE
            IF SC_食糧備蓄:STAR_ID:_CITY_ID > ABS(LOCAL)
                SC_食糧備蓄:STAR_ID:_CITY_ID += LOCAL
            ;餓死
            ELSE
                LOCAL += SC_食糧備蓄:STAR_ID:_CITY_ID
                SC_食糧備蓄:STAR_ID:_CITY_ID = 0
                GB_非戦闘員:STAR_ID -= RAND:(ABS(LOCAL + 1))
            ENDIF
        ENDIF
    NEXT
    ; 軍事
    GB_戦闘員:STAR_ID += _総算出物一覧:SC_軍事 * ONE_WEEK
    GB_非戦闘員:STAR_ID -= _総算出物一覧:SC_軍事 * ONE_WEEK
    GB_戦車:STAR_ID += _総算出物一覧:SC_戦車 * ONE_WEEK
    GB_航空機:STAR_ID += _総算出物一覧:SC_航空機 * ONE_WEEK
    GB_充足:STAR_ID += _総算出物一覧:SC_充足 * ONE_WEEK
    ; 食糧
    FOR _CITY_ID, 0, SC_最大都市数
        CALL GET_CITY_RESIDENT(STAR_ID, _CITY_ID)
        LOCAL = RESULT * SC_食糧消費量:(SC_食糧消費設定:STAR_ID:_CITY_ID) / 100
    NEXT
    FOR LOCAL, 2, MAX_COUNTRY
        SIF SC_外交設定:STAR_ID:LOCAL
            CALL ADD_REL_LIKE_COUNTRY(LOCAL, 国家ID_プレイヤー, 1)
    NEXT
ELSE
    ; 足りない資源の補充
    FOR LOCAL, 0, ITEM_LENGTH
        _資源数 = GET_RESOURCE_NUM(STAR_POSITION_ID:STAR_ID, STAR_OWNER:STAR_ID, LOCAL)
        TRYCALLFORM GET_ITEM_CATEGORY_{LOCAL}
        IF _資源数 < STOCK_TARGET
            ;採掘可能な資源の場合採掘として補充
            SIF RESULTS:0 == "資源"
                CALL ADD_RESOURCE(STAR_POSITION_ID:STAR_ID, STAR_OWNER:STAR_ID, LOCAL, 資源生産量)
            _必要資源数 = STOCK_TARGET - _資源数 - 資源生産量
            ;足りない資源は購入可能な店から購入
            SIF _必要資源数 > 0
                CALL BUY_RESOURCE_FROM_STAR(STAR_ID, LOCAL, _必要資源数)
        ENDIF
    NEXT
ENDIF

; 消費
@PRIVATE_DEMAND(STAR_ID)
#DIM STAR_ID
#DIM ITEM_ID
#DIM CONST DAILY_DEMAND = 700
#DIM CONST SPECIAL_ITEM_DAILY_DEMAND = 7

FOR ITEM_ID, 30, 50
    LOCAL = GET_RESOURCE_NUM(STAR_POSITION_ID:STAR_ID, STAR_OWNER:STAR_ID, ITEM_ID)
    SIF (LOCAL == 0)
        CONTINUE
    MONEY:(STAR_OWNER:STAR_ID) += GET_RESOURCE_PRICE(ITEM_ID) * DAILY_DEMAND
    RESULT = REMOVE_RESOURCE(STAR_POSITION_ID:STAR_ID, STAR_OWNER:STAR_ID, ITEM_ID, DAILY_DEMAND)
NEXT
FOR ITEM_ID, 50, 60
    LOCAL = GET_RESOURCE_NUM(STAR_POSITION_ID:STAR_ID, STAR_OWNER:STAR_ID, ITEM_ID)
    SIF (LOCAL == 0)
        CONTINUE
    MONEY:(STAR_OWNER:STAR_ID) += GET_RESOURCE_PRICE(ITEM_ID) * DAILY_DEMAND
    RESULT = REMOVE_RESOURCE(STAR_POSITION_ID:STAR_ID, STAR_OWNER:STAR_ID, ITEM_ID, SPECIAL_ITEM_DAILY_DEMAND)
NEXT
