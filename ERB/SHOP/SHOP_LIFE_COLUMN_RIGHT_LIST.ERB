;-------------------------------------------------
;キャラクタ表示順のリストを作成
;RESORT 所属勢力ごとの再ソートを行うかのフラグ
;-------------------------------------------------
@CREATE_SELECTOR_SORT_LIST(RESORT = 1)
#DIM RESORT
#DIM SORT_VALUE,  MAX_CHARA_NUM
#DIMS SORT_STRING, MAX_CHARA_NUM
#DIM CHARA_TABLE, MAX_CHARA_NUM
#DIM SORT_BY_STRING
#DIM CHARA_IDX
VARSET SHOP_CHARA_LIST, -1

VARSET CHARA_TABLE, -1
VARSET SORT_VALUE, -1
VARSET SORT_STRING
SORT_BY_STRING = 0
SIF ソートキー == ソート_手動
	CALL CHECK_MANUAL_SORT_CHARA_LIST

CHARA_IDX = 0
FOR LOCAL, 0, CHARANUM
	SELECTCASE ソートキー
		CASE ソート_所属 
			SORT_VALUE:CHARA_IDX = CFLAG:LOCAL:所属
		CASE ソート_NO 
			SORT_VALUE:CHARA_IDX = NO:LOCAL
		CASE ソート_星
			SORT_VALUE:CHARA_IDX = TMP_CHARA_STARS:LOCAL
		CASE ソート_名前 
			SORT_STRING:CHARA_IDX = %ANAME(LOCAL)%
			SORT_BY_STRING = 1
		CASE ソート_好感度
			SORT_VALUE:CHARA_IDX = CFLAG:LOCAL:好感度
		CASE ソート_従属度
			SORT_VALUE:CHARA_IDX = CFLAG:LOCAL:従属度
		CASE ソート_支配度
			SORT_VALUE:CHARA_IDX = CFLAG:LOCAL:支配度
		CASE ソート_妊娠 
			IF CFLAG:LOCAL:行動不能状態 == 行動不能_臨月
				SORT_VALUE:CHARA_IDX = 2
			ELSEIF TALENT:LOCAL:妊娠
				SORT_VALUE:CHARA_IDX = 1
			ELSEIF CFLAG:LOCAL:行動不能状態 == 行動不能_育児
				SORT_VALUE:CHARA_IDX = 3
			ELSEIF CFLAG:LOCAL:行動不能状態 == 行動不能_子供
				SORT_VALUE:CHARA_IDX = 4
			ELSE
				SORT_VALUE:CHARA_IDX = __INT_MAX__
			ENDIF
		CASE ソート_性別 
			SORT_VALUE:CHARA_IDX = TALENT:LOCAL:性別
		CASE ソート_面識
			SORT_VALUE:CHARA_IDX = CFLAG:LOCAL:面識
		CASE ソート_武闘
			SORT_VALUE:CHARA_IDX = ABL:LOCAL:白兵
		CASE ソート_防衛
			SORT_VALUE:CHARA_IDX = ABL:LOCAL:操艦
		CASE ソート_知略
			SORT_VALUE:CHARA_IDX = ABL:LOCAL:知略
		CASE ソート_政治
			SORT_VALUE:CHARA_IDX = ABL:LOCAL:政治
		CASE ソート_歌唱
			SORT_VALUE:CHARA_IDX = ABL:LOCAL:歌唱
		CASE ソート_料理
			SORT_VALUE:CHARA_IDX = ABL:LOCAL:料理
		CASE ソート_妖術
			SORT_VALUE:CHARA_IDX = ABL:LOCAL:超能力
		CASE ソート_四能力
			SORT_VALUE:CHARA_IDX = ABL:LOCAL:白兵 + ABL:LOCAL:操艦 + ABL:LOCAL:知略 + ABL:LOCAL:政治
		CASE ソート_七能力
			SORT_VALUE:CHARA_IDX = ABL:LOCAL:白兵 + ABL:LOCAL:操艦 + ABL:LOCAL:知略 + ABL:LOCAL:政治 + ABL:LOCAL:料理 + ABL:LOCAL:歌唱 + ABL:LOCAL:超能力
		CASE ソート_手動
			SIF GETBIT(MANUAL_SORTED:LOCAL:0, 手動ソート_非表示)
				CONTINUE
			FINDELEMENT MANUAL_SORT_CHARA_LIST, LOCAL
			SORT_VALUE:CHARA_IDX = RESULT
		CASE ソート_夜這い助手
			SORT_VALUE:CHARA_IDX = YOBAI_ZYOSYU_CALC_POINT(LOCAL)
		CASE ソート_手引助手
			SORT_VALUE:CHARA_IDX = TEBIKI_ZYOSYU_CALC_POINT(LOCAL)
	ENDSELECT

	CHARA_TABLE:CHARA_IDX = LOCAL
	CHARA_IDX++
NEXT

FOR LOCAL,1,CHARANUM
	SIF CHARA_TABLE:LOCAL == -1
		BREAK
	FOR LOCAL:11,LOCAL,0,-1
		LOCAL:12 = CHARA_TABLE:(LOCAL:11-1)
		LOCAL:13 = CHARA_TABLE:(LOCAL:11)
		IF !SORT_BY_STRING
			IF (降順ソート && SORT_VALUE:(LOCAL:12) < SORT_VALUE:(LOCAL:13)) || (!降順ソート && SORT_VALUE:(LOCAL:12) > SORT_VALUE:(LOCAL:13))
				SWAP CHARA_TABLE:(LOCAL:11),CHARA_TABLE:(LOCAL:11 -1)
			ELSE
				BREAK
			ENDIF
		ELSE
			IF (降順ソート && SORT_STRING:(LOCAL:12) > SORT_STRING:(LOCAL:13)) || (!降順ソート && SORT_STRING:(LOCAL:12) < SORT_STRING:(LOCAL:13))
				SWAP CHARA_TABLE:(LOCAL:11),CHARA_TABLE:(LOCAL:11 -1)
			ELSE
				BREAK
			ENDIF
		ENDIF
	NEXT
NEXT

IF RESORT == 0
	FOR LOCAL:0, 0, CHARANUM
		SIF CHARA_TABLE:LOCAL == -1
			BREAK
		SHOP_CHARA_LIST:LOCAL = CHARA_TABLE:LOCAL
	NEXT
ELSE

	LOCAL:5 = 0

	;SHOP_CHARA_LIST:(LOCAL:5) = MASTER
	;LOCAL:5 ++

	;主人公と同一勢力の士官が第１優先
	FOR LOCAL:0, 0, CHARANUM
		SIF CHARA_TABLE:LOCAL == -1
			BREAK
		LOCAL:1 = CHARA_TABLE:LOCAL
		;主人公でない「あなた」は飛ばす
		SIF LOCAL:1 == NAME_TO_CHARA("あなた") && LOCAL:1 != MASTER
			CONTINUE
		IF CFLAG:(LOCAL:1):所属 == CFLAG:MASTER:所属
			SHOP_CHARA_LIST:(LOCAL:5) = LOCAL:1
			LOCAL:5 ++
		ENDIF
	NEXT

	;他勢力・捕虜でない士官が第２優先
	FOR LOCAL:0, 0, CHARANUM
		SIF CHARA_TABLE:LOCAL == -1
			BREAK
		LOCAL:1 = CHARA_TABLE:LOCAL
		;主人公でない「あなた」は飛ばす
		SIF LOCAL:1 == NAME_TO_CHARA("あなた") && LOCAL:1 != MASTER
			CONTINUE
		IF CFLAG:(LOCAL:1):所属 != CFLAG:MASTER:所属 && !CFLAG:(LOCAL:1):捕虜先
			SIF LOCAL:1 == NAME_TO_CHARA("あなた") && LOCAL:1 != MASTER
				CONTINUE
			SHOP_CHARA_LIST:(LOCAL:5) = LOCAL:1
			LOCAL:5 ++
		ENDIF
	NEXT

	;他勢力・捕虜がラスト
	FOR LOCAL:0, 0, CHARANUM
		SIF CHARA_TABLE:LOCAL == -1
			BREAK
		LOCAL:1 = CHARA_TABLE:LOCAL
		;主人公でない「あなた」は飛ばす
		SIF LOCAL:1 == NAME_TO_CHARA("あなた") && LOCAL:1 != MASTER
			CONTINUE
		IF CFLAG:(LOCAL:1):所属 != CFLAG:MASTER:所属 && CFLAG:(LOCAL:1):捕虜先
			SHOP_CHARA_LIST:(LOCAL:5) = LOCAL:1
			LOCAL:5 ++
		ENDIF
	NEXT
ENDIF

;-------------------------------------------------
;右カラムの標準的なキャラリスト
;引数）
;　LINE_NUM_BUTTON			一行にボタンを何個並べるか（初期値２）
;　BUTTON_NUM_LINE			１ボタン指定で何行とるか（初期値１）
;							捕虜の扱い等、１キャラに対して大量のボタンがある場合等に使用する想定
;他）
;　MAX_BUTTON				１ページに表示可能なボタンの最大値
;　NOW_BUTTON				現在何個目のボタンを表示したか
;　NOW_BUTTON_PAGE			現在のページで何個目のボタンを表示したか
;　MENU_CHARANUM			このメニューで選択可能なキャラの人数
;							グレー表示で選択できないが表示するキャラも含める
;　NOW_CHECK_CHARA			現在チェック中のキャラ。
;							キャラリスト順にボタンを並べたいのでループカウンタを
;							そのままキャラ番号として扱わない
;　NOW_PAGE_BUTTON_START	現在のページの最初に置くボタンが何番か
;　NOW_PAGE_BUTTON_END		現在のページの最後に置くボタンが何番か
;　PRINTOPTION				このキャラは「選択不可能非表示」か「選択可能」か
;							「選択不可能グレー表示」か判定の戻り値
;-------------------------------------------------
@COLUMN_RIGHT_CHARALIST(LINE_NUM_BUTTON = 2, BUTTON_LINE = 1)
#DIM MAX_BUTTON
#DIM NOW_BUTTON
#DIM NOW_BUTTON_PAGE
#DIM MENU_CHARANUM
#DIM NOW_CHECK_CHARA
#DIM NOW_PAGE_BUTTON_START
#DIM NOW_PAGE_BUTTON_END
#DIM LINE_NUM_BUTTON
#DIM BUTTON_LINE
#DIM PRINTOPTION

;ひとつのページに表示可能なボタン数の最大値を計算 ((拠点フェイズ画面最大行数 - 2 - 現在表示行数) * LINE_NUM_BUTTON) / BUTTON_LINE
MAX_BUTTON = ((LINES_SHOP_DRAW - 2 - (LINECOUNT - FIRST_COLUMN_RIGHT_LINE)) * LINE_NUM_BUTTON) / BUTTON_LINE

;選択可能キャラ人数
MENU_CHARANUM = 0

FOR LOCAL:0, 0, CHARANUM
	;選択可能な条件を満たしているキャラを判定
	TRYCALLFORM SHOP_LIFE_CHECKCHARA{FLAG:拠点フェイズ選択コマンド}(LOCAL:0)
	IF RESULT
		;選択可能キャラ人数加算
		MENU_CHARANUM ++
	ENDIF
NEXT

;最大ページ数の計算（キャラ数－１÷最大ボタン数で計算して＋１し、最低でも１以上にする）
SHOP_LIFE_LIST1_PAGE_MAX = MAX((MENU_CHARANUM - 1) / MAX_BUTTON + 1, 1)

;現在のページ数を範囲に収める
FLAG:拠点フェイズページ = (SHOP_LIFE_LIST1_PAGE_MAX - 1 + FLAG:拠点フェイズページ % SHOP_LIFE_LIST1_PAGE_MAX) % SHOP_LIFE_LIST1_PAGE_MAX + 1

;リセット現在ボタン数
NOW_BUTTON = 0
;リセット現在ページの表示ボタン数
NOW_BUTTON_PAGE = 0
;リセット現在ページの開始値（ボタン数）
NOW_PAGE_BUTTON_START = (FLAG:拠点フェイズページ - 1) * MAX_BUTTON
;リセット現在ページの終了値（ボタン数）
NOW_PAGE_BUTTON_END = FLAG:拠点フェイズページ * MAX_BUTTON

;キャラリスト開始
FOR LOCAL:0, 0, CHARANUM
	;今回チェックするキャラ（キャラ番号順ではなく、リスト用に並び替えられた順でチェック）
	NOW_CHECK_CHARA = SHOP_CHARA_LIST:(LOCAL:0)
	;リストから除外されているキャラなら次のキャラへ
	SIF NOW_CHECK_CHARA == -1
		CONTINUE
	;キャラが選択可能な条件を満たしているかを判定（PRINTOPTION=2 条件は満たしているが行動済みの場合グレー表示）
	RESULT = 0
	TRYCALLFORM SHOP_LIFE_CHECKCHARA{FLAG:拠点フェイズ選択コマンド}(NOW_CHECK_CHARA)
	PRINTOPTION = RESULT
	IF RESULT
		IF NOW_BUTTON >= NOW_PAGE_BUTTON_START && NOW_BUTTON < NOW_PAGE_BUTTON_END
			;ボタンを１行に並べる数
			IF NOW_BUTTON_PAGE % LINE_NUM_BUTTON != 0
				PRINTPLAIN 　
			ELSE
				IF NOW_BUTTON_PAGE >= 1
					CALL COLUMN_RIGHT_PRINTL
				ENDIF
			ENDIF
			;ボタンの独自指定があれば呼び、なければ通常のボタンを表示
			TRYCCALLFORM SHOP_LIFE_LIST1_BUTTON{FLAG:拠点フェイズ選択コマンド}(NOW_CHECK_CHARA, PRINTOPTION)
			CATCH
				CALL COLUMN_RIGHT_CHARALIST_BUTTON(NOW_CHECK_CHARA, 0, SHOP_LIFE_LIST1_ADD_INPUT, PRINTOPTION)
			ENDCATCH
			;現在ページの表示ボタン数を追加
			NOW_BUTTON_PAGE ++
		ENDIF
		;現在ボタン数を追加
		NOW_BUTTON ++
	ENDIF
NEXT

;ページ移動表示
IF LINECOUNT - FIRST_COLUMN_RIGHT_LINE < LINES_SHOP_DRAW
	FOR LOCAL:0, LINECOUNT - FIRST_COLUMN_RIGHT_LINE, LINES_SHOP_DRAW - 1
		CALL COLUMN_RIGHT_PRINTL
		IF LOCAL:0 == LINES_SHOP_DRAW - 3
			CALL COLUMN_RIGHT_LINE
		ELSEIF LOCAL:0 == LINES_SHOP_DRAW - 2
			IF SHOP_LIFE_LIST1_PAGE_MAX >= 2
				PRINTBUTTON @"[%"前のページ", MAX_CHARANAME_LENGTH, LEFT%]", SHOP_LIFE_LIST1_PAGE_BACK
			ELSE
				SETCOLOR カラー_選択不可
				PRINTPLAINFORM [%"前のページ", MAX_CHARANAME_LENGTH, LEFT%]
				RESETCOLOR
			ENDIF
			PRINTPLAINFORM %TOSTR_SPACE(10)%
			LOCALS:0 = page{FLAG:拠点フェイズページ}/{SHOP_LIFE_LIST1_PAGE_MAX}
			PRINTPLAINFORM %LOCALS:0, 16, LEFT%
			IF SHOP_LIFE_LIST1_PAGE_MAX >= 2
				PRINTBUTTON @"[%"次のページ", MAX_CHARANAME_LENGTH, LEFT%]", SHOP_LIFE_LIST1_PAGE_NEXT
			ELSE
				SETCOLOR カラー_選択不可
				PRINTPLAINFORM [%"次のページ", MAX_CHARANAME_LENGTH, LEFT%]
				RESETCOLOR
			ENDIF
		ENDIF
	NEXT
ENDIF

PRINTL 

RETURN 0

;-------------------------------------------------
;右カラムの上下２段のキャラリスト上
;-------------------------------------------------
@COLUMN_RIGHT_CHARALIST_TOP(LINE_NUM_BUTTON = 2, BUTTON_LINE = 1)
#DIM MAX_BUTTON
#DIM NOW_BUTTON
#DIM NOW_BUTTON_PAGE
#DIM MENU_CHARANUM
#DIM NOW_CHECK_CHARA
#DIM NOW_PAGE_BUTTON_START
#DIM NOW_PAGE_BUTTON_END
#DIM LINE_NUM_BUTTON
#DIM BUTTON_LINE
#DIM PRINTOPTION

MAX_BUTTON = ((LINES_SHOP_DRAW / 2 - 2  - (LINECOUNT - FIRST_COLUMN_RIGHT_LINE)) * LINE_NUM_BUTTON) / BUTTON_LINE

MENU_CHARANUM = 0

FOR LOCAL:0, 0, CHARANUM
	RESULT = 0
	TRYCALLFORM SHOP_LIFE_CHECKCHARA{FLAG:拠点フェイズ選択コマンド}(LOCAL:0)
	IF RESULT
		MENU_CHARANUM ++
	ENDIF
NEXT

SHOP_LIFE_LIST1_PAGE_MAX = MAX((MENU_CHARANUM - 1) / MAX_BUTTON + 1, 1)

FLAG:拠点フェイズページ = (SHOP_LIFE_LIST1_PAGE_MAX - 1 + FLAG:拠点フェイズページ % SHOP_LIFE_LIST1_PAGE_MAX) % SHOP_LIFE_LIST1_PAGE_MAX + 1

NOW_BUTTON = 0
NOW_BUTTON_PAGE = 0
NOW_PAGE_BUTTON_START = (FLAG:拠点フェイズページ - 1) * MAX_BUTTON
NOW_PAGE_BUTTON_END = FLAG:拠点フェイズページ * MAX_BUTTON

FOR LOCAL:0, 0, CHARANUM
	NOW_CHECK_CHARA = SHOP_CHARA_LIST:(LOCAL:0)
	SIF NOW_CHECK_CHARA == -1
		CONTINUE
	RESULT = 0
	TRYCALLFORM SHOP_LIFE_CHECKCHARA{FLAG:拠点フェイズ選択コマンド}(NOW_CHECK_CHARA)
	PRINTOPTION = RESULT
	IF RESULT
		IF NOW_BUTTON >= NOW_PAGE_BUTTON_START && NOW_BUTTON < NOW_PAGE_BUTTON_END
			IF NOW_BUTTON_PAGE % LINE_NUM_BUTTON != 0
				PRINTPLAIN 　
			ELSE
				IF NOW_BUTTON_PAGE >= 1
					CALL COLUMN_RIGHT_PRINTL
				ENDIF
			ENDIF
			TRYCCALLFORM SHOP_LIFE_LIST1_BUTTON{FLAG:拠点フェイズ選択コマンド}(NOW_CHECK_CHARA, PRINTOPTION)
			CATCH
				CALL COLUMN_RIGHT_CHARALIST_BUTTON(NOW_CHECK_CHARA, 0, SHOP_LIFE_LIST1_ADD_INPUT, PRINTOPTION)
			ENDCATCH
			NOW_BUTTON_PAGE ++
		ENDIF
		NOW_BUTTON ++
	ENDIF
NEXT

FOR LOCAL:0, LINECOUNT - FIRST_COLUMN_RIGHT_LINE, LINES_SHOP_DRAW / 2 - 1
	CALL COLUMN_RIGHT_PRINTL
	IF LOCAL:0 == LINES_SHOP_DRAW / 2 - 3
		CALL COLUMN_RIGHT_LINE
	ELSEIF LOCAL:0 == LINES_SHOP_DRAW / 2 - 2
		IF SHOP_LIFE_LIST1_PAGE_MAX >= 2
			PRINTBUTTON @"[%"前のページ", MAX_CHARANAME_LENGTH, LEFT%]", SHOP_LIFE_LIST1_PAGE_BACK
		ELSE
			SETCOLOR カラー_選択不可
			PRINTPLAINFORM [%"前のページ", MAX_CHARANAME_LENGTH, LEFT%]
			RESETCOLOR
		ENDIF
		PRINTPLAINFORM %TOSTR_SPACE(10)%
		LOCALS:0 = page{FLAG:拠点フェイズページ}/{SHOP_LIFE_LIST1_PAGE_MAX}
		PRINTPLAINFORM %LOCALS:0, 16, LEFT%
		IF SHOP_LIFE_LIST1_PAGE_MAX >= 2
			PRINTBUTTON @"[%"次のページ", MAX_CHARANAME_LENGTH, LEFT%]", SHOP_LIFE_LIST1_PAGE_NEXT
		ELSE
			SETCOLOR カラー_選択不可
			PRINTPLAINFORM [%"次のページ", MAX_CHARANAME_LENGTH, LEFT%]
			RESETCOLOR
		ENDIF
	ENDIF
NEXT
RETURN 0

;-------------------------------------------------
;右カラムの上下２段のキャラリスト下
;-------------------------------------------------
@COLUMN_RIGHT_CHARALIST_BOTTOM(LINE_NUM_BUTTON_BOTTOM = 2, BUTTON_LINE_BOTTOM = 1)
#DIM MAX_BUTTON_BOTTOM
#DIM NOW_BUTTON_BOTTOM
#DIM NOW_BUTTON_PAGE_BOTTOM
#DIM MENU_CHARANUM_BOTTOM
#DIM NOW_CHECK_CHARA_BOTTOM
#DIM NOW_PAGE_BUTTON_START_BOTTOM
#DIM NOW_PAGE_BUTTON_END_BOTTOM
#DIM LINE_NUM_BUTTON_BOTTOM
#DIM BUTTON_LINE_BOTTOM
#DIM PRINTOPTION_BOTTOM

MAX_BUTTON_BOTTOM = ((LINES_SHOP_DRAW- 2 - (LINECOUNT - FIRST_COLUMN_RIGHT_LINE)) * LINE_NUM_BUTTON_BOTTOM) / BUTTON_LINE_BOTTOM
SHOP_LIFE_LIST2_PAGE_MAX = 0
FOR LOCAL:0, 0, CHARANUM
	TRYCALLFORM SHOP_LIFE_CHECKCHARA_SUB{FLAG:拠点フェイズ選択コマンド}(LOCAL:0)
	IF RESULT
		SHOP_LIFE_LIST2_PAGE_MAX ++
	ENDIF
NEXT
SHOP_LIFE_LIST2_PAGE_MAX = MAX((SHOP_LIFE_LIST2_PAGE_MAX - 1) / MAX_BUTTON_BOTTOM + 1, 1)

FLAG:拠点フェイズページ2 = (SHOP_LIFE_LIST2_PAGE_MAX - 1 + FLAG:拠点フェイズページ2 % SHOP_LIFE_LIST2_PAGE_MAX) % SHOP_LIFE_LIST2_PAGE_MAX + 1

;キャラリストの表示
NOW_BUTTON_BOTTOM = 0
NOW_BUTTON_PAGE_BOTTOM = 0
NOW_PAGE_BUTTON_START_BOTTOM = (FLAG:拠点フェイズページ2 - 1) * MAX_BUTTON_BOTTOM
NOW_PAGE_BUTTON_END_BOTTOM = FLAG:拠点フェイズページ2 * MAX_BUTTON_BOTTOM
FOR LOCAL:0, 0, CHARANUM
	NOW_CHECK_CHARA_BOTTOM = SHOP_CHARA_LIST:(LOCAL:0)
	SIF NOW_CHECK_CHARA_BOTTOM == -1
		CONTINUE
	;選択可能な条件を満たしているかどうかを判定
	RESULT = 0
	TRYCALLFORM SHOP_LIFE_CHECKCHARA_SUB{FLAG:拠点フェイズ選択コマンド}(NOW_CHECK_CHARA_BOTTOM)
	PRINTOPTION_BOTTOM = RESULT
	IF RESULT
		IF NOW_BUTTON_BOTTOM >= NOW_PAGE_BUTTON_START_BOTTOM && NOW_BUTTON_BOTTOM < NOW_PAGE_BUTTON_END_BOTTOM
			IF NOW_BUTTON_PAGE_BOTTOM % LINE_NUM_BUTTON_BOTTOM != 0
				PRINTPLAIN 　
			ELSE
				IF NOW_BUTTON_PAGE_BOTTOM >= 1
					CALL COLUMN_RIGHT_PRINTL
				ENDIF
			ENDIF
			TRYCCALLFORM SHOP_LIFE_LIST2_BUTTON{FLAG:拠点フェイズ選択コマンド}(NOW_CHECK_CHARA_BOTTOM, PRINTOPTION_BOTTOM)
			CATCH
				CALL COLUMN_RIGHT_CHARALIST_BUTTON(NOW_CHECK_CHARA_BOTTOM, 0, SHOP_LIFE_LIST2_ADD_INPUT, PRINTOPTION_BOTTOM)
			ENDCATCH
			NOW_BUTTON_PAGE_BOTTOM ++
		ENDIF
		NOW_BUTTON_BOTTOM ++
	ENDIF
NEXT

FOR LOCAL:0, (LINECOUNT - FIRST_COLUMN_RIGHT_LINE), LINES_SHOP_DRAW - 1
	CALL COLUMN_RIGHT_PRINTL
	IF LOCAL:0 == LINES_SHOP_DRAW - 3
		CALL COLUMN_RIGHT_LINE
	ELSEIF LOCAL:0 == LINES_SHOP_DRAW - 2
		IF SHOP_LIFE_LIST2_PAGE_MAX >= 2
			PRINTBUTTON @"[%"前のページ", MAX_CHARANAME_LENGTH, LEFT%]", SHOP_LIFE_LIST2_PAGE_BACK
		ELSE
			SETCOLOR カラー_選択不可
			PRINTPLAINFORM [%"前のページ", MAX_CHARANAME_LENGTH, LEFT%]
			RESETCOLOR
		ENDIF
		PRINTPLAINFORM %TOSTR_SPACE(10)%
		LOCALS:0 = page{FLAG:拠点フェイズページ2}/{SHOP_LIFE_LIST2_PAGE_MAX}
		PRINTPLAINFORM %LOCALS:0, 16, LEFT%
		IF SHOP_LIFE_LIST2_PAGE_MAX >= 2
			PRINTBUTTON @"[%"次のページ", MAX_CHARANAME_LENGTH, LEFT%]", SHOP_LIFE_LIST2_PAGE_NEXT
		ELSE
			SETCOLOR カラー_選択不可
			PRINTPLAINFORM [%"次のページ", MAX_CHARANAME_LENGTH, LEFT%]
			RESETCOLOR
		ENDIF
	ENDIF
NEXT

PRINTL 

RETURN 0

;-------------------------------------------------
;ソート条件選択
;-------------------------------------------------
@SORT_COND_SELECT(AUTO_ONLY = 0)
#DIM SORTKEY_ITER
#DIM AUTO_ONLY

CALL SINGLE_DRAWLINE
FOR SORTKEY_ITER, 0, NUM_SORTKEY
	SIF SORTKEY_ITER == ソート_手動 && AUTO_ONLY
		CONTINUE
	PRINTFORML [{SORTKEY_ITER, 2, RIGHT}] %STR_NOW_SORTKEY:SORTKEY_ITER%
NEXT
PRINTFORML [99] キャンセル

$INPUT_LOOP
INPUT

IF RESULT == ソート_手動 && !AUTO_ONLY
	RETURN  RESULT
ELSEIF INRANGE(RESULT, 0, NUM_SORTKEY - 1) && RESULT != ソート_手動
	RETURN  RESULT
ELSEIF RESULT == 99
	RETURN -1
ENDIF
CLEARLINE 1
GOTO INPUT_LOOP

;-------------------------------------------------
;手動ソート用関数
;-------------------------------------------------

;他の自動ソートを選択し、手動ソートリストにコピーする
@INIT_MANUAL_SORT_CHARA_LIST
#DIM CHARA_IDX
#DIM SHOP_CHARA_LIST_BAK, MAX_CHARA_NUM

ARRAYCOPY "SHOP_CHARA_LIST", "SHOP_CHARA_LIST_BAK"
ソートキー保存 = ソートキー
ソート順保存 = 降順ソート

CALL SORTKEY_SET(1)
PRINTL ソート順を選択してください
CALL ASK_MULTI("昇順", "降順")
降順ソート = RESULT
CALL CREATE_SELECTOR_SORT_LIST(0)

VARSET MANUAL_SORT_CHARA_LIST, -1
FOR CHARA_IDX, 0, CHARANUM
	CLEARBIT MANUAL_SORTED:CHARA_IDX:0, 手動ソート_設定済
NEXT
FOR CHARA_IDX, 0, CHARANUM
	SIF SHOP_CHARA_LIST:CHARA_IDX == -1
		BREAK
	MANUAL_SORT_CHARA_LIST:CHARA_IDX = SHOP_CHARA_LIST:CHARA_IDX
	SETBIT MANUAL_SORTED:CHARA_IDX:0, 手動ソート_設定済
NEXT

ARRAYCOPY "SHOP_CHARA_LIST_BAK", "SHOP_CHARA_LIST"
ソートキー = ソートキー保存
降順ソート = ソート順保存

;手動ソートに追加されていないキャラがいるか確認し、いれば追加する
;その後必要ならば設定画面を呼ぶ
@CHECK_MANUAL_SORT_CHARA_LIST(NEED_SETTING = 0)
#DIM NEED_SETTING
#DIM LIST_LENGTH
#DIM CHARA_IDX

FINDELEMENT MANUAL_SORT_CHARA_LIST, -1
IF RESULT == -1
	NEED_SETTING = 1
	VARSET MANUAL_SORT_CHARA_LIST, -1
	LIST_LENGTH = 0
ELSE
	LIST_LENGTH = RESULT
ENDIF

FOR CHARA_IDX, 0, CHARANUM
	SIF GETBIT(MANUAL_SORTED:CHARA_IDX:0, 手動ソート_設定済)
		CONTINUE
	MANUAL_SORT_CHARA_LIST:LIST_LENGTH = CHARA_IDX
	LIST_LENGTH++
	SETBIT MANUAL_SORTED:CHARA_IDX:0, 手動ソート_設定済
NEXT

SIF NEED_SETTING
	CALL SETTING_MANUAL_SORT_CHARA_LIST
RETURN

; キャラの並び替え設定UI
@SETTING_MANUAL_SORT_CHARA_LIST
#DIM LIST_LENGTH
#DIM CHARA_IDX
#DIM CHARA_ID
#DIM SELECTED_CHARA_IDX

FINDELEMENT MANUAL_SORT_CHARA_LIST, -1
LIST_LENGTH = RESULT
SELECTED_CHARA_IDX = -1

$INPUT_LOOP

CALL SINGLE_DRAWLINE
FOR CHARA_IDX, 0, LIST_LENGTH
	CHARA_ID = MANUAL_SORT_CHARA_LIST:CHARA_IDX
	IF SELECTED_CHARA_IDX == CHARA_IDX
		SETCOLOR 0x00FF00
		PRINTFORM [{CHARA_IDX, 4, RIGHT}] %ANAME(CHARA_ID), MAX_CHARANAME_LENGTH%
		RESETCOLOR
	ELSEIF GETBIT(MANUAL_SORTED:CHARA_ID:0, 手動ソート_非表示)
		SETCOLOR 0x666666
		PRINTFORM [{CHARA_IDX, 4, RIGHT}] %ANAME(CHARA_ID), MAX_CHARANAME_LENGTH%
		RESETCOLOR
	ELSE
		PRINTFORM [{CHARA_IDX, 4, RIGHT}] %ANAME(CHARA_ID), MAX_CHARANAME_LENGTH%
	ENDIF
	PRINTS " " * 8
	IF GETBIT(MANUAL_SORTED:CHARA_ID:0, 手動ソート_非表示) && MASTER != CHARA_ID
		PRINTBUTTON "[表示する]", 1p12 + CHARA_IDX
		PRINTS " " * 2
		SETCOLOR 0x666666
		PRINTS "[表示しない]"
		RESETCOLOR
	ELSEIF MASTER != CHARA_ID
		SETCOLOR 0x666666
		PRINTS "[表示する]"
		RESETCOLOR
		PRINTS " " * 2
		PRINTBUTTON "[表示しない]", 1p12 + CHARA_IDX
	ENDIF
	PRINTL 
NEXT
PRINTFORML [9998] 自動ソートをコピー
PRINTFORML [9999] 設定完了

INPUT

IF RESULT == 9999
	RETURN
ELSEIF RESULT == 9998
	CALL INIT_MANUAL_SORT_CHARA_LIST
	FINDELEMENT MANUAL_SORT_CHARA_LIST, -1
	LIST_LENGTH = RESULT
	SELECTED_CHARA_IDX = -1
ELSEIF RESULT & 1p12
	RESULT &= ~1p12
	IF RESULT >= 0 && RESULT < LIST_LENGTH && MASTER != CHARA_ID
		INVERTBIT MANUAL_SORTED:(MANUAL_SORT_CHARA_LIST:RESULT):0, 手動ソート_非表示
	ENDIF
ELSEIF RESULT >= 0 && RESULT < LIST_LENGTH
	IF SELECTED_CHARA_IDX == -1
		SELECTED_CHARA_IDX = RESULT
	ELSEIF SELECTED_CHARA_IDX == RESULT
		SELECTED_CHARA_IDX = -1
	ELSE
		SWAP MANUAL_SORT_CHARA_LIST:RESULT, MANUAL_SORT_CHARA_LIST:SELECTED_CHARA_IDX
		SELECTED_CHARA_IDX = -1
	ENDIF
ENDIF

GOTO INPUT_LOOP
