;--------------------------
; CC0ライセンスで提供します。
; 複製・改変・再配布・商用利用 全て可
; 使用報告 不要
;--------------------------


;--------------------------
; 一次元配列の数値をシャッフルする関数
; 呼び出し元側で用意した一次元配列の指定範囲を入れ替える
;--------------------------
@NUM_ARRAY_SHUFFLE(NUM_ARRAY, SHUFFLE_FINAL_NUMBER, SHUFFLE_FIRST_NUMBER = 0)
#DIM REF NUM_ARRAY
#DIM SHUFFLE_FIRST_NUMBER
#DIM SHUFFLE_FINAL_NUMBER
#DIM CHECK_ID

IF  SHUFFLE_FINAL_NUMBER <= SHUFFLE_FIRST_NUMBER
	THROW シャッフル範囲の先頭({SHUFFLE_FIRST_NUMBER})はシャッフル範囲の末尾({SHUFFLE_FINAL_NUMBER})よりも小さくなければいけません
ENDIF

IF  SHUFFLE_FIRST_NUMBER < 0
	THROW シャッフル範囲の先頭({SHUFFLE_FIRST_NUMBER})は0以上の値でなければいけません
ENDIF

VARSIZE NUM_ARRAY
IF RESULT < SHUFFLE_FINAL_NUMBER
	THROW シャッフル範囲の末尾({SHUFFLE_FINAL_NUMBER})は配列の要素数({RESULT})よりも小さくなければいけません
ENDIF

; 入れ替え処理
FOR COUNT, SHUFFLE_FIRST_NUMBER, SHUFFLE_FINAL_NUMBER
	CHECK_ID = RAND(SHUFFLE_FIRST_NUMBER, SHUFFLE_FINAL_NUMBER - (COUNT - SHUFFLE_FIRST_NUMBER))
	SWAP NUM_ARRAY:CHECK_ID, NUM_ARRAY:(SHUFFLE_FINAL_NUMBER -(COUNT - SHUFFLE_FIRST_NUMBER))
NEXT

RETURN

;--------------------------
; 一次元配列の文字列をシャッフルする関数
; 呼び出し元側で用意した一次元配列の指定範囲を入れ替える
;--------------------------
@STR_ARRAY_SHUFFLE(STR_ARRAY, SHUFFLE_FINAL_NUMBER, SHUFFLE_FIRST_NUMBER = 0)
#DIMS REF STR_ARRAY
#DIM SHUFFLE_FIRST_NUMBER
#DIM SHUFFLE_FINAL_NUMBER
#DIM CHECK_ID

IF  SHUFFLE_FINAL_NUMBER <= SHUFFLE_FIRST_NUMBER
	THROW シャッフル範囲の先頭({SHUFFLE_FIRST_NUMBER})はシャッフル範囲の末尾({SHUFFLE_FINAL_NUMBER})よりも小さくなければいけません
ENDIF

IF  SHUFFLE_FIRST_NUMBER < 0
	THROW シャッフル範囲の先頭({SHUFFLE_FIRST_NUMBER})は0以上の値でなければいけません
ENDIF

VARSIZE STR_ARRAY
IF RESULT < SHUFFLE_FINAL_NUMBER
	THROW シャッフル範囲の末尾({SHUFFLE_FINAL_NUMBER})は配列の要素数({RESULT})よりも小さくなければいけません
ENDIF

; 入れ替え処理
FOR COUNT, SHUFFLE_FIRST_NUMBER, SHUFFLE_FINAL_NUMBER
	CHECK_ID = RAND(SHUFFLE_FIRST_NUMBER, SHUFFLE_FINAL_NUMBER - (COUNT - SHUFFLE_FIRST_NUMBER))
	SWAP STR_ARRAY:CHECK_ID, STR_ARRAY:(SHUFFLE_FINAL_NUMBER - (COUNT - SHUFFLE_FIRST_NUMBER))
NEXT
