;-------------------------------------------------
; ハウジング　キャラクターの行動制御
;-------------------------------------------------
@HOUSING_CHARAACT_CONTROL_MAIN
#DIM DYNAMIC CHARA_IDX
#DIM DYNAMIC CHARA_ID
#DIMS DYNAMIC ACTIONTYPE
#DIMS DYNAMIC 行動パターン
#DIM  DYNAMIC キャラ現在地

;MASTERの処理
TCVAR:MASTER:空腹度 += 5
IF (TCVAR:MASTER:51 == 1 || TCVAR:MASTER:52 == 1) && FLAG:調教モード == 調教_居住区
    CALL HO_FORCE_MASTER_REST
ENDIF

;行動順リストの作成
CHARA_IDX = 0
VARSET _LIST_HO_行動順リスト
WHILE _DIC_HO_CHARALIST:CHARA_IDX != "-1"
    _LIST_HO_行動順リスト = %LIST_ADD(_LIST_HO_行動順リスト, TOSTR(CHARA_IDX))%
    CHARA_IDX ++
WEND

CALL LIST_SHUFFLE(_LIST_HO_行動順リスト, 3)


;-------------------------------------------------
;各キャラクターの行動を処理
;-------------------------------------------------
FOR LOCAL:0, 0, LIST_COUNT(_LIST_HO_行動順リスト)
    CHARA_IDX = TOINT(LIST_GET(_LIST_HO_行動順リスト, LOCAL:0))
    CALL HO_GET_CHARADATA(CHARA_IDX, "ACTION")
    ACTIONTYPE = %RESULTS%
    CALL HO_GET_CHARADATA(CHARA_IDX, "CHARA_ID")
    CHARA_ID = RESULT

    ;;ターン経過で必ず起きるイベント
    ;空腹度上昇,通常だいたい6時間程度で空腹(300)になるように
    TCVAR:CHARA_ID:空腹度 += 5
    TCVAR:CHARA_ID:疲労度 += 5


    ;ウフフ目撃判定
    CALL HO_CHECK_UFUFU(CHARA_ID)
    IF RESULT == 1
        CALL COLOR_PRINTW(@"情事の現場を目撃した%ANAME(CHARA_ID)%は気まずそうな顔をしている……", カラー_ピンク) 
    ENDIF

    ;;行動待機時間が設定されている場合は何もしない
    ;情事を目撃した場合、行動待機時間を無視して行動させる(とりあえず逃げる)
    IF TCVAR:CHARA_ID:行動待機時間 > 0 && TCVAR:CHARA_ID:ウフフ目撃フラグ != 1
        TCVAR:CHARA_ID:行動待機時間 -= HO_単位時間
        CONTINUE
    ENDIF
    IF ACTIONTYPE != "移動中" && ACTIONTYPE != "同行中"
        CALL HO_SCH_FREE(CHARA_ID)
        CALL HO_CHARAACT_DECIDE_ACT(CHARA_IDX, RESULTS)
        CALL HO_CHARAACT_MOVE_MAIN(CHARA_IDX)
    ELSEIF ACTIONTYPE == "移動中"
        CALL HO_CHARAACT_MOVE_MAIN(CHARA_IDX)
    ENDIF
NEXT
;WEND

RETURN

@HO_CHARAACT_DECIDE_ACT(CHARA_IDX, 行動パターン)
#DIM CHARA_IDX
#DIMS 行動パターン
#DIM  DYNAMIC CHARA_ID
#DIM  DYNAMIC キャラ現在地
#DIMS DYNAMIC _LIST_移動先候補
#DIM  DYNAMIC 移動先ROOM_IDX

;IDを取得
CALL HO_GET_CHARADATA(CHARA_IDX, "CHARA_ID")
CHARA_ID = RESULT
;キャラが現在いる部屋を取得
CALL HO_GET_CHARADATA(CHARA_IDX, "ROOM_IDX")
キャラ現在地 = RESULT

{
    SELECTCASE IFRAND(
        "0",1,
        "D0,1",  行動パターン == "食事" && TCVAR:CHARA_ID:空腹度 >= 300,
        "D0,2",  行動パターン == "休憩" || TCVAR:CHARA_ID:疲労度 >= 150,
        "D0,3",  行動パターン == "飲酒",
        "D0,4",  行動パターン == "入浴",
        "D0,50", 行動パターン == "バーテンダー",
        "D0TO50,90",  TCVAR:CHARA_ID:51 == 1 || TCVAR:CHARA_ID:52 == 1,
        "D0TO50,91",   HO_CHECK_CUM_AMOUNT(CHARA_ID) >= 30,
        "D0TO50,92",   TCVAR:CHARA_ID:ウフフ目撃フラグ == 1,
        "D0TO50,99",  行動パターン == "就寝"
        )
}
    ;ここのCASE処理どんどん長くなるはずなので将来的には行動定義_XXXの形式で外出しするように
    CASE 1 ;食事
        CALL HO_FIND_ROOM_BY_TAG("食堂")
        移動先ROOM_IDX = RESULT
        CALL HO_GET_ROUTE(キャラ現在地, 移動先ROOM_IDX)
        _LIST_移動先候補 = %RESULTS%
        IF RESULT != 0
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_SET_MOVELIST(CHARA_ID, _LIST_移動先候補)
        ELSE
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_TRY_USE_MODULE(CHARA_ID, "食事")
            IF RESULT == 1
                CALL HO_SET_CHARADATA(CHARA_IDX, "ACTION", "食事中")
                TCVAR:CHARA_ID:空腹度 = 0
                TCVAR:CHARA_ID:疲労度 += 300 ;食休みさせる
                BASE:(CHARA_ID):体力 = LIMIT(BASE:(CHARA_ID):体力 + 200, BASE:(CHARA_ID):体力, MAXBASE:(CHARA_ID):体力)
                BASE:(CHARA_ID):気力 = LIMIT(BASE:(CHARA_ID):気力 + 150, BASE:(CHARA_ID):気力, MAXBASE:(CHARA_ID):気力)
                TCVAR:CHARA_ID:行動待機時間 = RAND(9, 16) * HO_単位時間
            ENDIF
        ENDIF
    CASE 2 ;"休憩"
        CALL HO_FIND_ROOM_BY_TAG("食堂")
        移動先ROOM_IDX = RESULT
        CALL HO_GET_ROUTE(キャラ現在地, 移動先ROOM_IDX)
        _LIST_移動先候補 = %RESULTS%
        IF RESULT != 0
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_SET_MOVELIST(CHARA_ID, _LIST_移動先候補)
        ELSE
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_TRY_USE_MODULE(CHARA_ID, "休憩")
            IF RESULT == 1
                CALL HO_SET_CHARADATA(CHARA_IDX, "ACTION", "休憩中")
                TCVAR:CHARA_ID:疲労度 = 0
                BASE:(CHARA_ID):体力 = LIMIT(BASE:(CHARA_ID):体力 + 100, BASE:(CHARA_ID):体力, MAXBASE:(CHARA_ID):体力)
                BASE:(CHARA_ID):気力 = LIMIT(BASE:(CHARA_ID):気力 + 50, BASE:(CHARA_ID):気力, MAXBASE:(CHARA_ID):気力)
                TCVAR:CHARA_ID:行動待機時間 = RAND(6, 12) * HO_単位時間
            ENDIF
        ENDIF
    CASE 3 ;"飲酒"
        CALL HO_FIND_ROOM_BY_TAG("食堂")
        移動先ROOM_IDX = RESULT
        CALL HO_GET_ROUTE(キャラ現在地, 移動先ROOM_IDX)
        _LIST_移動先候補 = %RESULTS%
        IF RESULT != 0
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_SET_MOVELIST(CHARA_ID, _LIST_移動先候補)
        ELSE
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_TRY_USE_MODULE(CHARA_ID, "飲酒")
            IF RESULT == 1
                CALL HO_SET_CHARADATA(CHARA_IDX, "ACTION", "飲酒中")
                TCVAR:CHARA_ID:疲労度 += 100
                TCVAR:CHARA_ID:行動待機時間 = RAND(9, 16) * HO_単位時間
            ENDIF
        ENDIF
    CASE 4 ;"入浴"
        CALL HO_FIND_ROOM_BY_TAG("浴室")
        移動先ROOM_IDX = RESULT
        CALL HO_GET_ROUTE(キャラ現在地, 移動先ROOM_IDX)
        _LIST_移動先候補 = %RESULTS%
        IF RESULT != 0
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_SET_MOVELIST(CHARA_ID, _LIST_移動先候補)
        ELSE
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_TRY_USE_MODULE(CHARA_ID, "浴室")
            IF RESULT == 1
                CALL HO_SET_CHARADATA(CHARA_IDX, "ACTION", "入浴中")
                CALL HO_WASH(CHARA_ID)
                TCVAR:CHARA_ID:疲労度 += 100
                TCVAR:CHARA_ID:行動待機時間 = RAND(6, 9) * HO_単位時間
            ENDIF
        ENDIF
    CASE 90 ;"仮眠"
        CALL HO_FIND_ROOM_BY_TAG("クルー私室")
        移動先ROOM_IDX = RESULT
        CALL HO_GET_ROUTE(キャラ現在地, 移動先ROOM_IDX)
        _LIST_移動先候補 = %RESULTS%
        IF RESULT != 0
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_SET_MOVELIST(CHARA_ID, _LIST_移動先候補)
        ELSE
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_TRY_USE_MODULE(CHARA_ID, "仮眠")
            CALL HO_SET_CHARADATA(CHARA_IDX, "ACTION", "睡眠中")
            TCVAR:CHARA_ID:51 = 0
            TCVAR:CHARA_ID:52 = 0
            BASE:(CHARA_ID):体力 = LIMIT(BASE:(CHARA_ID):体力 + 1200, BASE:(CHARA_ID):体力, MAXBASE:(CHARA_ID):体力)
            BASE:(CHARA_ID):気力 = LIMIT(BASE:(CHARA_ID):気力 + 900, BASE:(CHARA_ID):気力, MAXBASE:(CHARA_ID):気力)
            TCVAR:CHARA_ID:行動待機時間 = RAND(36, 72) * HO_単位時間
        ENDIF
    CASE 91 ;"汚れ超過による洗浄"
        CALL HO_FIND_ROOM_BY_TAG("浴室")
        移動先ROOM_IDX = RESULT
        CALL HO_GET_ROUTE(キャラ現在地, 移動先ROOM_IDX)
        _LIST_移動先候補 = %RESULTS%
        IF RESULT != 0
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_SET_MOVELIST(CHARA_ID, _LIST_移動先候補)
        ELSE
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_TRY_USE_MODULE(CHARA_ID, "浴室")
            IF RESULT == 1
                CALL HO_SET_CHARADATA(CHARA_IDX, "ACTION", "入浴中")
                CALL HO_WASH(CHARA_ID)
                TCVAR:CHARA_ID:疲労度 += 100
                TCVAR:CHARA_ID:行動待機時間 = RAND(6, 9) * HO_単位時間
            ENDIF
        ENDIF
    CASE 92 ;ウフフ目撃
        CALL HO_行動定義_ウフフ目撃(CHARA_ID)
    CASE 99 ;"就寝"
        CALL HO_FIND_ROOM_BY_TAG("クルー私室")
        移動先ROOM_IDX = RESULT
        CALL HO_GET_ROUTE(キャラ現在地, 移動先ROOM_IDX)
        _LIST_移動先候補 = %RESULTS%
        IF RESULT != 0
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_SET_MOVELIST(CHARA_ID, _LIST_移動先候補)
        ELSE
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_TRY_USE_MODULE(CHARA_ID, "就寝")
            CALL HO_SET_CHARADATA(CHARA_IDX, "ACTION", "睡眠中")
            TCVAR:CHARA_ID:行動待機時間 = 72 * HO_単位時間
        ENDIF
    CASE 50 ;"バーテンダー"
        CALL HO_FIND_ROOM_BY_TAG("食堂")
        移動先ROOM_IDX = RESULT
        CALL HO_GET_ROUTE(キャラ現在地, 移動先ROOM_IDX)
        _LIST_移動先候補 = %RESULTS%
        IF RESULT != 0
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_SET_MOVELIST(CHARA_ID, _LIST_移動先候補)
        ELSE
            CALL HO_STOP_USE_MODULE(CHARA_ID)
            CALL HO_TRY_USE_MODULE(CHARA_ID, "飲酒")
            IF RESULT == 1
                CALL HO_SET_CHARADATA(CHARA_IDX, "ACTION", "バーテンダー")
                TCVAR:CHARA_ID:行動待機時間 = RAND(9, 16) * HO_単位時間
                TCVAR:CHARA_ID:疲労度 += 100
            ENDIF
        ENDIF
    CASEELSE
        CALL HO_行動定義_自由(CHARA_ID)
ENDSELECT
RETURN