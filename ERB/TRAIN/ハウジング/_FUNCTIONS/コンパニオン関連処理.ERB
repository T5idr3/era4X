;-------------------------------------------------
;コンパニオンの制御
;-------------------------------------------------
;-------------------------------------------------
;同行者を追加する
; 相席だけの場合はSHARE_MODE = 1で追加する
; RESULT 失敗 = 0, 成功 = 1
;-------------------------------------------------
@HO_ADD_COMPANION(CHARA_ID, SHARE_MODE = 0)
#DIM CHARA_ID
#DIM SHARE_MODE
#DIMS DYNAMIC _LIST_COMPANION

VARSET RESULTS

SIF CHARA_ID == MASTER
    RETURN 0
;同行可能かを判定。相席モードの場合判定バイパス
IF SHARE_MODE != 1
    CALL HO_IS_ADDABLE_COMPANION(CHARA_ID)
    SIF RESULT == 0
        RETURN 0
ENDIF

;相席状態から同行に遷移する場合
IF TCVAR:CHARA_ID:相席フラグ == 1 && CFLAG:CHARA_ID:調教参加フラグ == 1
    TCVAR:CHARA_ID:相席フラグ = 0
    CALL HO_SET_CHARAACT(CHARA_ID, "同行中")
    TCVAR:CHARA_ID:行動待機時間 = 0
    RETURN 1
ENDIF

CFLAG:CHARA_ID:調教参加フラグ = 1
TFLAG:44 ++
SIF TFLAG:44 == 1
    CALL ADD_MTAR(CHARA_ID)
;MASTERが独立して行動している場合の考慮
IF MTAR:0 == MASTER && MPLY:0 == MASTER
    CALL DEL_MTAR(MASTER)
ENDIF
;相席モードの場合は行動は書き換えない
IF SHARE_MODE == 0
    CALL HO_SET_CHARAACT(CHARA_ID, "同行中")
    CALL HO_STOP_USE_MODULE(CHARA_ID)
    TCVAR:CHARA_ID:行動待機時間 = 0
ENDIF 

;リストの管理
CALL HO_GET_MASTER_DATA("COMPANION_LIST")
_LIST_COMPANION = %RESULTS%
IF LIST_INDEXOF(_LIST_COMPANION, TOSTR(CHARA_ID)) == -1
    _LIST_COMPANION = %LIST_ADD(_LIST_COMPANION, TOSTR(CHARA_ID))%
    CALL HO_SET_MASTER_DATA("COMPANION_LIST", _LIST_COMPANION)
ELSE
    THROW 同一キャラを多重に登録しようとしました CHARA_ID{CHARA_ID}
ENDIF 

RETURN 1

;-------------------------------------------------
;同行者を削除する
;-------------------------------------------------
@HO_REMOVE_COMPANION(CHARA_ID)
#DIM CHARA_ID
#DIMS DYNAMIC _LIST_COMPANION

VARSET RESULTS

CFLAG:CHARA_ID:調教参加フラグ = 0
TFLAG:44 --
;CALL CLEAR_MTAR
;CALL CLEAR_MPLY
CALL DEL_MTAR(CHARA_ID)
CALL DEL_MPLY(CHARA_ID)
CALL RELEASE_ALL_EQUIP(CHARA_ID)

;相席モードの場合HO_STOP_USE_MODULEから同行者削除処理が呼ばれるため同関数を呼ぶ必要がない
IF TCVAR:CHARA_ID:相席フラグ != 1
    CALL HO_SET_CHARAACT(CHARA_ID, "待機")
    CALL HO_STOP_USE_MODULE(CHARA_ID)
ENDIF
;リストの管理
CALL HO_GET_MASTER_DATA("COMPANION_LIST")
_LIST_COMPANION = %RESULTS%
LOCAL:0 = LIST_INDEXOF(_LIST_COMPANION, TOSTR(CHARA_ID))
IF LOCAL:0 != -1
    _LIST_COMPANION = %LIST_REMOVEAT(_LIST_COMPANION, LOCAL:0)%
    CALL HO_SET_MASTER_DATA("COMPANION_LIST", _LIST_COMPANION)
ENDIF

;-------------------------------------------------
;同行者（相席含む）の情報を取得する
; RESULTS:0  同行者のリスト
; RETURN     同行者の数
;-------------------------------------------------
@HO_GET_COMPANION_LIST
#DIMS DYNAMIC _LIST_COMPANION

VARSET RESULTS
CALL HO_GET_MASTER_DATA("COMPANION_LIST")
_LIST_COMPANION = %RESULTS%

RESULTS = %_LIST_COMPANION%
RETURN LIST_COUNT(_LIST_COMPANION)

;-------------------------------------------------
;同行者（相席含まず）の情報を取得する
; RESULTS:0  同行者のリスト
; RETURN     同行者の数
;-------------------------------------------------
@HO_GET_FOLLOWER_LIST
#DIMS DYNAMIC _LIST_COMPANION
#DIMS DYNAMIC _LIST_FOLLOWER
#DIM DYNAMIC CHARA_ID

VARSET RESULTS
CALL HO_GET_MASTER_DATA("COMPANION_LIST")
_LIST_COMPANION = %RESULTS%
FOR LOCAL, 0, LIST_COUNT(_LIST_COMPANION)
    CHARA_ID = TOINT(LIST_GET(_LIST_COMPANION, LOCAL))
    SIF TCVAR:CHARA_ID:相席フラグ != 1
        _LIST_FOLLOWER = %LIST_ADD(_LIST_FOLLOWER, TOSTR(CHARA_ID))%
NEXT
RESULTS = %_LIST_FOLLOWER%
RETURN LIST_COUNT(_LIST_FOLLOWER)

;-------------------------------------------------
;同行可能かを判定する
; CHARA_ID :追加対象キャラID
; RETURN 失敗 = -0, 成功 = 1
;-------------------------------------------------
@HO_IS_ADDABLE_COMPANION(CHARA_ID)
#DIM CHARA_ID

CALL HO_GET_COMPANION_LIST
IF RESULT > HO_同行者上限
    CALL COLOR_PRINTW(@"同行者の数が多すぎるようだ(上限:{HO_同行者上限}人まで)", カラー_注意) 
    RETURN 0
ENDIF

;;「COMF:390 二人で出掛ける」の判定処理をそのまま流用
;判定値初期化
TCVAR:(CHARA_ID):24 = 0
SETCOLOR カラー_注釈
CALL COM_ORDER_TARGET390(CHARA_ID)
;実行値をマウント
TCVAR:(CHARA_ID):25 = 25
;判定結果を表示
PRINTFORML  = {TCVAR:(CHARA_ID):24} %TOSTR_COMPARE(TCVAR:(CHARA_ID):24, TCVAR:(CHARA_ID):25)% 実行値 {TCVAR:(CHARA_ID):25}
RESETCOLOR
IF TCVAR:(CHARA_ID):24 >= TCVAR:(CHARA_ID):25
    PRINTFORMW %ANAME(MASTER)%の誘いに%ANAME(CHARA_ID)%は応じ、同行に加わった
    PRINTL
    RETURN 1
ELSE
    PRINTFORMW %ANAME(CHARA_ID)%を同行に誘ったものの、断られてしまった……
    PRINTL
    RETURN 0
ENDIF

;-------------------------------------------------
; 同じモジュールを共有しているメンバーを取得する
;-------------------------------------------------
@HO_GET_MODULE_SHARE_MEMBER(CHARA_ID, INCLUDE_MASTER = 0)
#DIM CHARA_ID
#DIM INCLUDE_MASTER
#DIM DYNAMIC CHARA_IDX
#DIM DYNAMIC ROOM_IDX
#DIM DYNAMIC MODULE_IDX
#DIMS DYNAMIC _LIST_CHARA_ID

VARSET RESULTS
IF CHARA_ID != MASTER
    CALL HO_GET_CHARAIDX(CHARA_ID)
    CHARA_IDX = RESULT
    CALL HO_GET_CHARADATA(CHARA_IDX, "ROOM_IDX")
    ROOM_IDX = RESULT
    CALL HO_GET_CHARADATA(CHARA_IDX, "MODULE_USAGE")
    MODULE_IDX = RESULT
ELSE
    CHARA_IDX = HO_MASTER現在地
    CALL HO_GET_MASTER_DATA("MODULE_USAGE")
    MODULE_IDX = RESULT
ENDIF
IF INCLUDE_MASTER == 1
    CALL HO_GET_MASTER_DATA("MODULE_USAGE")
    SIF ROOM_IDX == HO_MASTER現在地 && MODULE_IDX == RESULT
        _LIST_CHARA_ID = %LIST_ADD(_LIST_CHARA_ID, TOSTR(MASTER))%
ENDIF

LOCAL:0 = 0
WHILE _DIC_HO_CHARALIST:(LOCAL:0) != "-1"
    CALL HO_GET_CHARADATA(LOCAL:0, "ROOM_IDX")
    IF RESULT != ROOM_IDX
        LOCAL:0 ++
        CONTINUE
    ENDIF
    CALL HO_GET_CHARADATA(LOCAL:0, "MODULE_USAGE")
    IF MODULE_IDX == RESULT
        CALL HO_GET_CHARADATA(LOCAL:0, "CHARA_ID")
        _LIST_CHARA_ID = %LIST_ADD(_LIST_CHARA_ID, TOSTR(RESULT))%
    ENDIF
    LOCAL:0 ++
WEND
RESULTS = %_LIST_CHARA_ID%
RETURN LIST_COUNT(_LIST_CHARA_ID)

;-------------------------------------------------
; 対象のモジュールを使用しているメンバーを取得する
;-------------------------------------------------
@HO_GET_MODULE_USE_MEMBER(ROOM_IDX, MODULE_IDX, INCLUDE_MASTER = 0)
#DIM INCLUDE_MASTER
#DIM DYNAMIC ROOM_IDX
#DIM DYNAMIC MODULE_IDX
#DIMS DYNAMIC _LIST_CHARA_ID

VARSET RESULTS
IF INCLUDE_MASTER == 1
    CALL HO_GET_MASTER_DATA("MODULE_USAGE")
    SIF ROOM_IDX == HO_MASTER現在地 && MODULE_IDX == RESULT
        _LIST_CHARA_ID = %LIST_ADD(_LIST_CHARA_ID, TOSTR(MASTER))%
ENDIF

LOCAL:0 = 0
WHILE _DIC_HO_CHARALIST:(LOCAL:0) != "-1"
    CALL HO_GET_CHARADATA(LOCAL:0, "ROOM_IDX")
    IF RESULT != ROOM_IDX
        LOCAL:0 ++
        CONTINUE
    ENDIF
    CALL HO_GET_CHARADATA(LOCAL:0, "MODULE_USAGE")
    IF MODULE_IDX == RESULT
        CALL HO_GET_CHARADATA(LOCAL:0, "CHARA_ID")
        _LIST_CHARA_ID = %LIST_ADD(_LIST_CHARA_ID, TOSTR(RESULT))%
    ENDIF
    LOCAL:0 ++
WEND
RESULTS = %_LIST_CHARA_ID%
RETURN LIST_COUNT(_LIST_CHARA_ID)

